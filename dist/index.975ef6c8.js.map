{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAsJ,YAAY,CAAC;;AAAnK,IAAI,QAAQ,GAAG,IAAI,AAAC;AAAA,IAAI,QAAQ,GAAG,IAAI,AAAC;AAAA,IAAI,UAAU,GAAG,KAAK,AAAC;AAAA,IAAI,YAAY,GAAG,kBAAkB,AAAC;AAAA,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,kBAAkB,CAAC;AAEtJ,yFAAyF,CAEzF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCE,CACF,IAAI,UAAU,GAAG,4BAA4B,AAAC;AAC9C,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,AAAC;AAErC,SAAS,MAAM,CAAC,UAAU,EAAE;IAC1B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,GAAG;QACT,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO;QAC3B,gBAAgB,EAAE,EAAE;QACpB,iBAAiB,EAAE,EAAE;QACrB,MAAM,EAAE,SAAU,EAAE,EAAE;YACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,WAAY,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,EAAE,SAAU,EAAE,EAAE;YACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACjC;KACF,CAAC;IACF,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;CACnC;AAED,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,IAAI,aAAa,EAEf,cAAc,EAEd,cAAc,CAChB,qCAAqC,CADrB,AAEf;AAED,SAAS,WAAW,GAAG;IACrB,OAAO,QAAQ,IAAK,CAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAA,AAAC,CAAC;CAChG;AAED,SAAS,OAAO,GAAG;IACjB,OAAO,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC;CAClC,CAAC,wCAAwC;AAG1C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,AAAC;AAElC,IAAI,AAAC,CAAA,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAA,IAAK,OAAO,SAAS,KAAK,WAAW,EAAE;IAC5E,IAAI,QAAQ,GAAG,WAAW,EAAE,AAAC;IAC7B,IAAI,IAAI,GAAG,OAAO,EAAE,AAAC;IACrB,IAAI,QAAQ,GAAG,UAAU,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,IAAI,CAAC,8BAA8B,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,IAAI,AAAC;IAC3H,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAI,CAAA,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAA,GAAI,GAAG,CAAC,AAAC,EAAC,oDAAoD;IAC1I,0DAA0D;IAE1D,IAAI,iBAAiB,GAAG,KAAK,AAAC;IAE9B,IAAI;QACD,CAAA,GAAG,IAAI,CAAA,CAAE,gDAAgD,CAAC,CAAC;KAC7D,CAAC,OAAO,GAAG,EAAE;QACZ,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACnD,CAAC,aAAa;IAGf,EAAE,CAAC,SAAS,GAAG,eAAgB,KAAK,EAElC;QACA,aAAa,GAAG,EAAE,CAClB,4BAA4B,CADV,CAEjB;QACD,cAAc,GAAG,EAAE,CACnB,4BAA4B,CADT,CAElB;QACD,cAAc,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,GAEN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC;QAEzB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC1B,uCAAuC;YACvC,IAAI,OAAO,QAAQ,KAAK,WAAW,EACjC,kBAAkB,EAAE,CAAC;YAGvB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,KAAK,GAAI,KAAK,CAAC,OAAO,KAAK,YAAY,CAAC,AAAC,EAAC,oBAAoB;YAE9F,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA,KAAK,GAAI;gBAClC,OAAO,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;aACxH,CAAC,AAAC;YAEH,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,yEAAyE;gBAE1F,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,WAAW,KAAK,WAAW,EACrE,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAG3D,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;gBAE9B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;oBAC9C,IAAI,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;oBAE9B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EACrB,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;iBAE1C;aACF,MAAM,IAAI,QAAQ,IAAI,QAAQ,EAC7B,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACb;gBACL,wBAAwB;gBACxB,IAAI,GAAG,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,AAAC;gBAEnG,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,EAC1C,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aAExB;SACF;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,+BAA+B;YAC/B,KAAK,IAAI,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,KAAK,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,KAAK,AAAC;gBACvF,OAAO,CAAC,KAAK,CAAC,yBAAc,GAAM,cAAc,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAClH;YAEJ,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;gBACnC,gCAAgC;gBAChC,kBAAkB,EAAE,CAAC;gBACrB,IAAI,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,AAAC,EAAC,aAAa;gBAEtE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aACpC;SACF;KACF,CAAC;IAEF,EAAE,CAAC,OAAO,GAAG,SAAU,CAAC,EAAE;QACxB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KAC1B,CAAC;IAEF,EAAE,CAAC,OAAO,GAAG,WAAY;QACvB,OAAO,CAAC,IAAI,CAAC,6DAAkD,CAAI,CAAC;KAClE,CAAF;CACH;AAED,SAAS,kBAAkB,GAAG;IAC5B,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,AAAC;IAElD,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,MAAM,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,gCAA2B,CAAG,CAAC;KAC1C;CACJ;AAED,SAAS,kBAAkB,CAAC,WAAW,EAAE;IACvC,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;IAC5C,OAAO,CAAC,EAAE,GAAG,UAAU,CAAC;IACxB,IAAI,SAAS,GAAG,wNAAwN,AAAC;IAEzO,KAAK,IAAI,UAAU,IAAI,WAAW,CAAE;QAClC,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,GAAK;YAC5E,OAAO,CAAC,EAAE,CAAC,CAAC;sCACoB,EAAE,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,2FAA2F,EAAE,KAAK,CAAC,QAAQ,CAAC;AACvL,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACV,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,AAAC;QAC1B,SAAS,IAAI,CAAC;;;eAGN,EAAK,UAAU,CAAC,OAAO,CAAC;;aAEpB,EAAD,KAAK,CAAC;;UAEX,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,oBAAS,GAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;QAEvE,EAAD,UAAU,CAAC,aAAa,GAAG,CAAC,yCAAsC,EAAE,UAAU,CAAC,aAAa,CAAC,sCAAsC,CAAC,GAAG,EAAE,CAAC;;IAEhJ,CAAC,CAAC;KACH;IAED,SAAS,IAAI,QAAQ,CAAC;IACtB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;IAC9B,OAAO,OAAO,CAAC;CAChB;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,EAAE,EAC9B,qCAAqC,CACrC;IACE,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO,EAAE,CAAC;IAGZ,IAAI,OAAO,GAAG,EAAE,AAAC;IACjB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,AAAC;IAEd,IAAK,CAAC,IAAI,OAAO,CACf,IAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QACvB,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvB,IAAI,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,EAChE,OAAO,CAAC,IAAI,CAAC;YAAC,MAAM;YAAE,CAAC;SAAC,CAAC,CAAC;KAE7B;IAGH,IAAI,MAAM,CAAC,MAAM,EACf,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;IAG1D,OAAO,OAAO,CAAC;CAChB;AAED,SAAS,UAAU,CAAC,IAAI,EAAE;IACxB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,AAAC;IAE/B,OAAO,CAAC,MAAM,GAAG,WAAY;QAC3B,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAC1B,aAAa;QACb,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAErC,CAAC;IAEF,OAAO,CAAC,YAAY,CAAC,MAAM,EAC3B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,aAAa;IAE1E,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;CACzD;AAED,IAAI,UAAU,GAAG,IAAI,AAAC;AAEtB,SAAS,SAAS,GAAG;IACnB,IAAI,UAAU,EACZ,OAAO;IAGT,UAAU,GAAG,UAAU,CAAC,WAAY;QAClC,IAAI,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,AAAC;QAEhE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACrC,gCAAgC;YAChC,IAAI,IAAI,GAEN,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,AAAC;YAChC,IAAI,QAAQ,GAAG,WAAW,EAAE,AAAC;YAC7B,IAAI,mBAAmB,GAAG,QAAQ,KAAK,WAAW,GAAG,IAAI,MAAM,CAAC,gDAAgD,GAAG,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,EAAE,CAAC,AAAC;YACpL,IAAI,QAAQ,GAAG,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,AAAC;YAEzG,IAAI,CAAC,QAAQ,EACX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAExB;QAED,UAAU,GAAG,IAAI,CAAC;KACnB,EAAE,EAAE,CAAC,CAAC;CACR;AAED,eAAe,eAAe,CAAC,MAAM,EAAE;IACrC,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAI,eAAe,AAAC;IAEpB,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,iBAAiB,EAAE;YACtB,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA,KAAK,GAAI;gBACjC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;oBACvB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;wBACnC,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;wBAC9C,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;wBACvB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,GAAK;4BACtC,IAAI,cAAc,AAAC;4BAEnB,MAAM,CAAC,MAAM,GAAG,IAAM,OAAO,CAAC,MAAM,CAAC,CAAC;4BAEtC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;4BACvB,CAAA,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAA,KAAM,IAAI,IAAI,cAAc,KAAK,KAAK,CAAC,IAAY,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;yBACtH,CAAC,CAAC;qBACJ,MAAM,IAAI,OAAO,aAAa,KAAK,UAAU,EAC5C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,GAAK;wBACtC,IAAI;4BACF,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;yBAC1B,CAAC,OAAO,GAAG,EAAE;4BACZ,MAAM,CAAC,GAAG,CAAC,CAAC;yBACb;qBACF,CAAC,CAAC;iBAEN;aACF,CAAC,AAAC;YACH,eAAe,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC/C;QAED,MAAM,CAAC,OAAO,CAAC,SAAU,KAAK,EAAE;YAC9B,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACrC,CAAC,CAAC;KACJ,QAAS;QACR,OAAO,MAAM,CAAC,eAAe,CAAC;QAE9B,IAAI,eAAe,EACjB,eAAe,CAAC,OAAO,CAAC,CAAA,MAAM,GAAI;YAChC,IAAI,MAAM,EAAE;gBACV,IAAI,eAAe,AAAC;gBAEnB,CAAA,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAA,KAAM,IAAI,IAAI,eAAe,KAAK,KAAK,CAAC,IAAY,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACzH;SACF,CAAC,CAAC;KAEN;CACF;AAED,SAAS,QAAQ,CAAC,MAAM,EAEtB,KAAK,EAEL;IACA,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO;IAGT,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EACtB,SAAS,EAAE,CAAC;SACP,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;QAC9B,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,AAAC;QAEpD,IAAI,IAAI,EAAE;YACR,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,AAAC;gBAEnC,IAAK,IAAI,GAAG,IAAI,OAAO,CACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC5C,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,AAAC;oBACtB,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,AAAC;oBAEjD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EACtB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;iBAErC;aAEJ;YAED,IAAI,iBAAiB,EACnB,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAI,CAAA,CAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YAG1B,IAAI,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,AAAC;YAC1C,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;gBAAC,EAAE;gBAAE,IAAI;aAAC,CAAC;SAChC,MAAM,IAAI,MAAM,CAAC,MAAM,EACtB,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAElC;CACF;AAED,SAAS,SAAS,CAAC,MAAM,EAAE,GAAE,EAAE;IAC7B,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO;IAGT,IAAI,OAAO,CAAC,GAAE,CAAC,EAAE;QACf,8EAA8E;QAC9E,IAAI,IAAI,GAAG,OAAO,CAAC,GAAE,CAAC,CAAC,CAAC,CAAC,AAAC;QAC1B,IAAI,OAAO,GAAG,EAAE,AAAC;QAEjB,IAAK,IAAI,GAAG,IAAI,IAAI,CAAE;YACpB,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,AAAC;YAExD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EACtB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAE3B,CAAC,sGAAsG;QAGxG,OAAO,OAAO,CAAC,GAAE,CAAC,CAAC;QACnB,OAAO,MAAM,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,CAAC,0BAA0B;QAEnD,OAAO,CAAC,OAAO,CAAC,CAAA,EAAE,GAAI;YACpB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ,MAAM,IAAI,MAAM,CAAC,MAAM,EACtB,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,GAAE,CAAC,CAAC;CAEhC;AAED,SAAS,cAAc,CAAC,MAAM,EAE5B,EAAE,EAEF,YAAY,EAEZ;IACA,IAAI,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,EAC7C,OAAO,IAAI,CAAC;IACb,CAAC,uGAAuG;IAGzG,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,AAAC;IACjD,IAAI,QAAQ,GAAG,KAAK,AAAC;IAErB,MAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE;QACzB,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,AAAC;QACxB,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,AAAC;QAE5C,IAAI,CAAC,EACH,+EAA+E;QAC/E,QAAQ,GAAG,IAAI,CAAC;aACX;YACL,yDAAyD;YACzD,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;YAE7C,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClB,kFAAkF;gBAClF,QAAQ,GAAG,KAAK,CAAC;gBACjB,MAAM;aACP;YAED,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;SACpB;KACF;IAED,OAAO,QAAQ,CAAC;CACjB;AAED,SAAS,iBAAiB,CAAC,MAAM,EAE/B,EAAE,EAEF,YAAY,EAEZ;IACA,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO;IAGT,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,MAAM,CAAC,MAAM,EAChB,OAAO,IAAI,CAAC;QAGd,OAAO,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;KACxD;IAED,IAAI,aAAa,CAAC,EAAE,CAAC,EACnB,OAAO,IAAI,CAAC;IAGd,aAAa,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;IACzB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,AAAC;IAC9B,cAAc,CAAC,IAAI,CAAC;QAAC,MAAM;QAAE,EAAE;KAAC,CAAC,CAAC;IAElC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC7D,OAAO,IAAI,CAAC;CAEf;AAED,SAAS,YAAY,CAAC,MAAM,EAE1B,EAAE,EAEF;IACA,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,AAAC;IAC9B,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;IAEpB,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,EACtB,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC;IAGnC,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE,EAAE;QACjD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACpB,CAAC,CAAC;IAGL,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACxB,MAAM,CAAC,EAAE,CAAC,CAAC;IACX,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAE1B,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE,EAAE;QAChD,IAAI,kBAAkB,GAAG,EAAE,CAAC,WAAY;YACtC,OAAO,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAC3C,CAAC,AAAC;QAEH,IAAI,kBAAkB,IAAI,cAAc,CAAC,MAAM,EAC7C,+BAA+B;QAC/B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;KAEjE,CAAC,CAAC;IAGL,cAAc,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;CAC3B;;;AC3hBD,8BAAkB;AAClB,gDAA4B;AAC5B,kDAA6B;AAC7B,oCAAqB;AACrB,iDAA4B;AAC5B,+CAA2B;AAC3B,yCAAwB;AACxB,kCAAoB;AACpB,yCAAwB;AACxB,qDAA8B;;;ACT9B;;AAGA,mDAAsB,aAAa,CAIlC;AAED,gEAAsB,0BAA0B,CAI/C;AAED,yDAAsB,mBAAmB,CAIxC;AAED,sEAAsB,gCAAgC,CAOrD;AA5BD,6BAA0B;;AAC1B,MAAM,QAAQ,GAAG,gCAAgC,AAAC;AAClD,MAAM,OAAO,GAAG,kCAAkC,AAAC;AAC5C,eAAe,aAAa,CAAC,KAAK,EAAE,eAAe,EAAE;IAC1D,MAAM,WAAW,GAAG,CAAC,EAAE,QAAQ,CAAC,qBAAqB,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,AAAC;IACzG,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,qBAAK,CAAA,CAAC,GAAG,CAAC,WAAW,CAAC,AAAC;IAC9C,OAAO,QAAQ,CAAC,IAAI,CAAC;CACtB;AAEM,eAAe,0BAA0B,CAAC,WAAW,EAAE,eAAe,EAAE;IAC7E,MAAM,WAAW,GAAG,CAAC,EAAE,QAAQ,CAAC,uBAAuB,EAAE,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,AAAC;IACvJ,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,qBAAK,CAAA,CAAC,GAAG,CAAC,WAAW,CAAC,AAAC;IAC9C,OAAO,QAAQ,CAAC,IAAI,CAAC;CACtB;AAEM,eAAe,mBAAmB,CAAC,KAAK,EAAE,eAAe,EAAE;IAChE,MAAM,WAAW,GAAG,CAAC,EAAE,QAAQ,CAAC,oBAAoB,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,AAAC;IACxG,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,qBAAK,CAAA,CAAC,GAAG,CAAC,WAAW,CAAC,AAAC;IAC9C,OAAO,QAAQ,CAAC,IAAI,CAAC;CACtB;AAEM,eAAe,gCAAgC,CACpD,WAAW,EACX,eAAe,EACf;IACA,MAAM,WAAW,GAAG,CAAC,EAAE,QAAQ,CAAC,sBAAsB,EAAE,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,AAAC;IACtJ,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,qBAAK,CAAA,CAAC,GAAG,CAAC,WAAW,CAAC,AAAC;IAC9C,OAAO,QAAQ,CAAC,IAAI,CAAC;CACtB;;;AC5BD;;AAuBA,6CACE,CAAA,GAAA,uBAAK,CAAA,CAgBN;AAjBD,2CAEE,KAAK,CAeN;AAjBD,gDAGE,UAAU,CAcX;AAjBD,mDAIE,aAAa,CAad;AAjBD,8CAKE,QAAQ,CAYT;AAjBD,iDAME,WAAW,CAWZ;AAjBD,6CAOE,OAAO,CAUR;AAjBD,yCAQE,GAAG,CASJ;AAjBD,4CASE,MAAM,CAQP;AAjBD,kDAUE,YAAY,CAOb;AAjBD,4CAWE,MAAM,CAMP;AAjBD,gDAYE,UAAU,CAKX;AAjBD,kDAaE,YAAY,CAIb;AAjBD,oDAcE,cAAc,CAGf;AAjBD,gDAeE,UAAU,CAEX;AAjBD,iDAgBE,WAAW,CACZ;AAxCD,wCAAmC;;AAEnC,mEAAmE;AACnE,oDAAoD;AACpD,iDAAiD;AACjD,MAAM,EACJ,KAAK,CAAA,EACL,UAAU,CAAA,EACV,aAAa,CAAA,EACb,QAAQ,CAAA,EACR,WAAW,CAAA,EACX,OAAO,CAAA,EACP,GAAG,CAAA,EACH,MAAM,CAAA,EACN,YAAY,CAAA,EACZ,MAAM,CAAA,EACN,UAAU,CAAA,EACV,YAAY,CAAA,EACZ,cAAc,CAAA,EACd,UAAU,CAAA,EACV,WAAW,CAAA,EACZ,GAAG,CAAA,GAAA,uBAAK,CAAA,AAAC;;;ACrBV;;AAEA,oCAA+B;;AAC/B,0CAAqC;;AACrC,yCAAoC;;AACpC,qDAAgD;;AAChD,6CAA2C;;AAC3C,8DAAyD;;AACzD,2DAAsD;;AACtD,uDAAkD;;AAClD,iDAA4C;;AAC5C,sCAAsC;AACtC,sDAAiD;;AACjD,mDAA8C;;AAC9C,8CAAyC;;AACzC,0DAAqD;;AACrD,uDAAkD;;AAClD,8DAAyD;;AAjBzD,YAAY,CAAC;AAmBb;;;;;;GAMG,CACH,SAAS,cAAc,CAAC,aAAa,EAAE;IACrC,MAAM,OAAO,GAAG,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,AAAC;IACzC,MAAM,QAAQ,GAAG,CAAA,GAAA,sBAAI,CAAA,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,AAAC;IAExD,mCAAmC;IACnC,CAAA,GAAA,uBAAK,CAAA,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA,GAAA,uBAAK,CAAA,CAAC,SAAS,EAAE,OAAO,EAAE;QAAC,UAAU,EAAE,IAAI;KAAC,CAAC,CAAC;IAErE,2BAA2B;IAC3B,CAAA,GAAA,uBAAK,CAAA,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE;QAAC,UAAU,EAAE,IAAI;KAAC,CAAC,CAAC;IAE1D,qCAAqC;IACrC,QAAQ,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,cAAc,EAAE;QAChD,OAAO,cAAc,CAAC,CAAA,GAAA,6BAAW,CAAA,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC;KACnE,CAAC;IAEF,OAAO,QAAQ,CAAC;CACjB;AAED,6CAA6C;AAC7C,MAAM,KAAK,GAAG,cAAc,CAAC,CAAA,GAAA,uBAAQ,CAAA,CAAC,AAAC;AAEvC,gDAAgD;AAChD,KAAK,CAAC,KAAK,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC;AAEpB,8BAA8B;AAC9B,KAAK,CAAC,aAAa,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC;AACpC,KAAK,CAAC,WAAW,GAAG,CAAA,GAAA,6BAAW,CAAA,CAAC;AAChC,KAAK,CAAC,QAAQ,GAAG,CAAA,GAAA,0BAAQ,CAAA,CAAC;AAC1B,KAAK,CAAC,OAAO,GAAG,CAAA,GAAA,eAAO,CAAA,CAAC;AACxB,KAAK,CAAC,UAAU,GAAG,CAAA,GAAA,4BAAU,CAAA,CAAC;AAE9B,0BAA0B;AAC1B,KAAK,CAAC,UAAU,GAAG,CAAA,GAAA,4BAAU,CAAA,CAAC;AAE9B,qDAAqD;AACrD,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC;AAEnC,oBAAoB;AACpB,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,CAAC,QAAQ,EAAE;IACjC,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;CAC9B,CAAC;AAEF,KAAK,CAAC,MAAM,GAAG,CAAA,GAAA,wBAAM,CAAA,CAAC;AAEtB,sBAAsB;AACtB,KAAK,CAAC,YAAY,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC;AAElC,qBAAqB;AACrB,KAAK,CAAC,WAAW,GAAG,CAAA,GAAA,6BAAW,CAAA,CAAC;AAEhC,KAAK,CAAC,YAAY,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC;AAElC,KAAK,CAAC,UAAU,GAAG,CAAA,KAAK,GAAI,CAAA,GAAA,gCAAc,CAAA,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAElG,KAAK,CAAC,cAAc,GAAG,CAAA,GAAA,gCAAc,CAAA,CAAC;AAEtC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;AAEtB,gDAAgD;kBACjC,KAAK,CAAA;;;ACrFpB;;AAEA,0CAAqC;;AAFrC,YAAY,CAAC;;AAIb,uEAAuE;AAEvE,MAAM,EAAC,QAAQ,CAAA,EAAC,GAAG,MAAM,CAAC,SAAS,AAAC;AACpC,MAAM,EAAC,cAAc,CAAA,EAAC,GAAG,MAAM,AAAC;AAEhC,MAAM,MAAM,GAAG,AAAC,CAAA,CAAA,KAAK,GAAI,CAAA,KAAK,GAAI;QAC9B,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,AAAC;QACjC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAK,CAAA,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAA,AAAC,CAAC;KACtE,CAAA,CAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,AAAC;AAExB,MAAM,UAAU,GAAG,CAAC,IAAI,GAAK;IAC3B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,OAAO,CAAC,KAAK,GAAK,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,CAAA;CACzC;AAED,MAAM,UAAU,GAAG,CAAA,IAAI,GAAI,CAAA,KAAK,GAAI,OAAO,KAAK,KAAK,IAAI,AAAC;AAE1D;;;;;;GAMG,CACH,MAAM,EAAC,OAAO,CAAA,EAAC,GAAG,KAAK,AAAC;AAExB;;;;;;GAMG,CACH,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,AAAC;AAE5C;;;;;;GAMG,CACH,SAAS,QAAQ,CAAC,GAAG,EAAE;IACrB,OAAO,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,WAAW,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,IAChG,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CAC5E;AAED;;;;;;GAMG,CACH,MAAM,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC,AAAC;AAGhD;;;;;;GAMG,CACH,SAAS,iBAAiB,CAAC,GAAG,EAAE;IAC9B,IAAI,MAAM,AAAC;IACX,IAAI,AAAC,OAAO,WAAW,KAAK,WAAW,IAAM,WAAW,CAAC,MAAM,AAAC,EAC9D,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAEjC,MAAM,GAAG,AAAC,GAAG,IAAM,GAAG,CAAC,MAAM,IAAM,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,AAAC,CAAC;IAEhE,OAAO,MAAM,CAAC;CACf;AAED;;;;;;GAMG,CACH,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,AAAC;AAEtC;;;;;GAKG,CACH,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,AAAC;AAE1C;;;;;;GAMG,CACH,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,AAAC;AAEtC;;;;;;GAMG,CACH,MAAM,QAAQ,GAAG,CAAC,KAAK,GAAK,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,AAAC;AAExE;;;;;GAKG,CACH,MAAM,SAAS,GAAG,CAAA,KAAK,GAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,AAAC;AAE7D;;;;;;GAMG,CACH,MAAM,aAAa,GAAG,CAAC,GAAG,GAAK;IAC7B,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAC1B,OAAO,KAAK,CAAC;IAGf,MAAM,SAAS,GAAG,cAAc,CAAC,GAAG,CAAC,AAAC;IACtC,OAAO,AAAC,CAAA,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,IAAI,CAAA,IAAK,CAAE,CAAA,MAAM,CAAC,WAAW,IAAI,GAAG,CAAA,AAAC,IAAI,CAAE,CAAA,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAA,AAAC,CAAC;CACzK;AAED;;;;;;GAMG,CACH,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,AAAC;AAElC;;;;;;GAMG,CACH,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,AAAC;AAElC;;;;;;GAMG,CACH,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,AAAC;AAElC;;;;;;GAMG,CACH,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,AAAC;AAE1C;;;;;;GAMG,CACH,MAAM,QAAQ,GAAG,CAAC,GAAG,GAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC;AAEhE;;;;;;GAMG,CACH,MAAM,UAAU,GAAG,CAAC,KAAK,GAAK;IAC5B,IAAI,IAAI,AAAC;IACT,OAAO,KAAK,IACV,CAAA,AAAC,OAAO,QAAQ,KAAK,UAAU,IAAI,KAAK,YAAY,QAAQ,IAC1D,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IACtB,CAAA,AAAC,CAAA,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA,KAAM,UAAU,IAEpC,IAAI,KAAK,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,mBAAmB,AAAC,CAAA,AAC9F,AACF,CAAA,AACF,CAAA;CACF;AAED;;;;;;GAMG,CACH,MAAM,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC,AAAC;AAExD;;;;;;GAMG,CACH,MAAM,IAAI,GAAG,CAAC,GAAG,GAAK,GAAG,CAAC,IAAI,GAC5B,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,OAAO,uCAAuC,EAAE,CAAC,AAAC;AAErE;;;;;;;;;;;;;;GAcG,CACH,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,UAAU,EAAG,KAAK,CAAA,EAAC,GAAG,EAAE,EAAE;IACnD,oCAAoC;IACpC,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,WAAW,EAC5C,OAAO;IAGT,IAAI,CAAC,AAAC;IACN,IAAI,CAAC,AAAC;IAEN,mDAAmD;IACnD,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,8BAA8B,CAC9B,GAAG,GAAG;QAAC,GAAG;KAAC,CAAC;IAGd,IAAI,OAAO,CAAC,GAAG,CAAC,EACd,4BAA4B;IAC5B,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;SAE3B;QACL,2BAA2B;QAC3B,MAAM,IAAI,GAAG,UAAU,GAAG,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,AAAC;QAC7E,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,AAAC;QACxB,IAAI,GAAG,AAAC;QAER,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE;YACxB,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SACnC;KACF;CACF;AAED,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;IACzB,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IACxB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,AAAC;IAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,AAAC;IACpB,IAAI,IAAI,AAAC;IACT,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;QACd,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE,EAC5B,OAAO,IAAI,CAAC;KAEf;IACD,OAAO,IAAI,CAAC;CACb;AAED,MAAM,OAAO,GAAG,AAAC,CAAA,IAAM;IACrB,qBAAqB,CACrB,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE,OAAO,UAAU,CAAC;IACzD,OAAO,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI,GAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM,AAAC,CAAA;CAC9F,CAAA,EAAG,AAAC;AAEL,MAAM,gBAAgB,GAAG,CAAC,OAAO,GAAK,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,OAAO,KAAK,OAAO,AAAC;AAEnF;;;;;;;;;;;;;;;;;GAiBG,CACH,SAAS,KAAK,GAA8B;IAC1C,MAAM,EAAC,QAAQ,CAAA,EAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,AAAC;IACxD,MAAM,MAAM,GAAG,EAAE,AAAC;IAClB,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,GAAK;QAChC,MAAM,SAAS,GAAG,QAAQ,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,AAAC;QAC1D,IAAI,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,EACxD,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;aAC7C,IAAI,aAAa,CAAC,GAAG,CAAC,EAC3B,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;aAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,EACrB,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;aAEhC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;KAE3B;IAED,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAC9C,SAAS,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IAErD,OAAO,MAAM,CAAC;CACf;AAED;;;;;;;;;GASG,CACH,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,EAAC,UAAU,CAAA,EAAC,GAAE,EAAE,GAAK;IAClD,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAK;QACvB,IAAI,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,EAC5B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAA,GAAA,sBAAI,CAAA,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;aAE5B,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KAEhB,EAAE;QAAC,UAAU;KAAC,CAAC,CAAC;IACjB,OAAO,CAAC,CAAC;CACV;AAED;;;;;;GAMG,CACH,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAK;IAC5B,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAClC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE7B,OAAO,OAAO,CAAC;CAChB;AAED;;;;;;;;GAQG,CACH,MAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,gBAAgB,EAAE,KAAK,EAAE,WAAW,GAAK;IACtE,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAC/E,WAAW,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;IAChD,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,OAAO,EAAE;QAC1C,KAAK,EAAE,gBAAgB,CAAC,SAAS;KAClC,CAAC,CAAC;IACH,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;CACtD;AAED;;;;;;;;GAQG,CACH,MAAM,YAAY,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,GAAK;IAC/D,IAAI,KAAK,AAAC;IACV,IAAI,CAAC,AAAC;IACN,IAAI,IAAI,AAAC;IACT,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IACxB,6CAA6C;IAC7C,IAAI,SAAS,IAAI,IAAI,EAAE,OAAO,OAAO,CAAC;IAEtC,GAAG;QACD,KAAK,GAAG,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACjB,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;YACd,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,AAAC,CAAA,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA,IAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAC1E,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;aACrB;SACF;QACD,SAAS,GAAG,MAAM,KAAK,KAAK,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC;KAC3D,OAAQ,SAAS,IAAK,CAAA,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA,IAAK,SAAS,KAAK,MAAM,CAAC,SAAS,EAAE;IAEjG,OAAO,OAAO,CAAC;CAChB;AAED;;;;;;;;GAQG,CACH,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,YAAY,EAAE,QAAQ,GAAK;IAChD,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAClB,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,GAAG,GAAG,CAAC,MAAM,EACjD,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;IAExB,QAAQ,IAAI,YAAY,CAAC,MAAM,CAAC;IAChC,MAAM,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,AAAC;IACtD,OAAO,SAAS,KAAK,EAAE,IAAI,SAAS,KAAK,QAAQ,CAAC;CACnD;AAGD;;;;;;GAMG,CACH,MAAM,OAAO,GAAG,CAAC,KAAK,GAAK;IACzB,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC;IACxB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,KAAK,CAAC;IACjC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,AAAC;IACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;IAC9B,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;IACzB,MAAO,CAAC,EAAE,GAAG,CAAC,CACZ,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAEpB,OAAO,GAAG,CAAC;CACZ;AAED;;;;;;;GAOG,CACH,sCAAsC;AACtC,MAAM,YAAY,GAAG,AAAC,CAAA,CAAA,UAAU,GAAI;IAClC,sCAAsC;IACtC,OAAO,CAAA,KAAK,GAAI;QACd,OAAO,UAAU,IAAI,KAAK,YAAY,UAAU,CAAC;KAClD,CAAC;CACH,CAAA,CAAE,OAAO,UAAU,KAAK,WAAW,IAAI,cAAc,CAAC,UAAU,CAAC,CAAC,AAAC;AAEpE;;;;;;;GAOG,CACH,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,EAAE,GAAK;IAChC,MAAM,SAAS,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,AAAC;IAE9C,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,AAAC;IAErC,IAAI,MAAM,AAAC;IAEX,MAAO,AAAC,CAAA,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAA,IAAK,CAAC,MAAM,CAAC,IAAI,CAAE;QACjD,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,AAAC;QAC1B,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAChC;CACF;AAED;;;;;;;GAOG,CACH,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,GAAG,GAAK;IAChC,IAAI,OAAO,AAAC;IACZ,MAAM,GAAG,GAAG,EAAE,AAAC;IAEf,MAAO,AAAC,CAAA,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,KAAM,IAAI,CAC1C,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAGpB,OAAO,GAAG,CAAC;CACZ;AAED,sFAAsF,CACtF,MAAM,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAAC,AAAC;AAEjD,MAAM,WAAW,GAAG,CAAA,GAAG,GAAI;IACzB,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,0BAC9B,SAAS,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAC3B,OAAO,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;KAC9B,CACF,CAAC;CACH,AAAC;AAEF,sEAAsE,CACtE,MAAM,cAAc,GAAG,AAAC,CAAA,CAAC,EAAC,cAAc,EAAd,eAAc,CAAA,EAAC,GAAK,CAAC,GAAG,EAAE,IAAI,GAAK,eAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA,CAAE,MAAM,CAAC,SAAS,CAAC,AAAC;AAE/G;;;;;;GAMG,CACH,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,AAAC;AAEtC,MAAM,iBAAiB,GAAG,CAAC,GAAG,EAAE,OAAO,GAAK;IAC1C,MAAM,WAAW,GAAG,MAAM,CAAC,yBAAyB,CAAC,GAAG,CAAC,AAAC;IAC1D,MAAM,kBAAkB,GAAG,EAAE,AAAC;IAE9B,OAAO,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,IAAI,GAAK;QACzC,IAAI,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,KAAK,EAC1C,kBAAkB,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;KAEzC,CAAC,CAAC;IAEH,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;CAClD;AAED;;;GAGG,CAEH,MAAM,aAAa,GAAG,CAAC,GAAG,GAAK;IAC7B,iBAAiB,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,IAAI,GAAK;QAC3C,uCAAuC;QACvC,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI;YAAC,WAAW;YAAE,QAAQ;YAAE,QAAQ;SAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAC3E,OAAO,KAAK,CAAC;QAGf,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,AAAC;QAExB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,OAAO;QAE/B,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;QAE9B,IAAI,UAAU,IAAI,UAAU,EAAE;YAC5B,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC5B,OAAO;SACR;QAED,IAAI,CAAC,UAAU,CAAC,GAAG,EACjB,UAAU,CAAC,GAAG,GAAG,IAAM;YACrB,MAAM,KAAK,CAAC,oCAAqC,GAAG,IAAI,GAAG,GAAI,CAAC,CAAC;SAClE,CAAC;KAEL,CAAC,CAAC;CACJ;AAED,MAAM,WAAW,GAAG,CAAC,aAAa,EAAE,SAAS,GAAK;IAChD,MAAM,GAAG,GAAG,EAAE,AAAC;IAEf,MAAM,MAAM,GAAG,CAAC,GAAG,GAAK;QACtB,GAAG,CAAC,OAAO,CAAC,CAAA,KAAK,GAAI;YACnB,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;SACnB,CAAC,CAAC;KACJ;IAED,OAAO,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAEhG,OAAO,GAAG,CAAC;CACZ;AAED,MAAM,IAAI,GAAG,IAAM,EAAE;AAErB,MAAM,cAAc,GAAG,CAAC,KAAK,EAAE,YAAY,GAAK;IAC9C,KAAK,GAAG,CAAC,KAAK,CAAC;IACf,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC;CACtD;AAED,MAAM,KAAK,GAAG,4BAA4B;AAE1C,MAAM,KAAK,GAAG,YAAY,AAAC;AAE3B,MAAM,QAAQ,GAAG;IACf,KAAK;IACL,KAAK;IACL,WAAW,EAAE,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK;CACjD;AAED,MAAM,cAAc,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,QAAQ,GAAG,QAAQ,CAAC,WAAW,GAAK;IACrE,IAAI,GAAG,GAAG,EAAE,AAAC;IACb,MAAM,EAAC,MAAM,CAAA,EAAC,GAAG,QAAQ,AAAC;IAC1B,MAAO,IAAI,EAAE,CACX,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,GAAC,CAAC,CAAC;IAG3C,OAAO,GAAG,CAAC;CACZ;AAED;;;;;;GAMG,CACH,SAAS,mBAAmB,CAAC,KAAK,EAAE;IAClC,OAAO,CAAC,CAAE,CAAA,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,UAAU,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA,AAAC,CAAC;CACpH;AAED,MAAM,YAAY,GAAG,CAAC,GAAG,GAAK;IAC5B,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,AAAC;IAE5B,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC,GAAK;QAE3B,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAC5B,OAAO;YAGT,IAAG,CAAE,CAAA,QAAQ,IAAI,MAAM,CAAA,AAAC,EAAE;gBACxB,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAClB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,AAAC;gBAEzC,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,GAAK;oBAC9B,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,AAAC;oBACzC,CAAC,WAAW,CAAC,YAAY,CAAC,IAAK,CAAA,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAA,AAAC,CAAC;iBAC5D,CAAC,CAAC;gBAEH,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;gBAErB,OAAO,MAAM,CAAC;aACf;SACF;QAED,OAAO,MAAM,CAAC;KACf;IAED,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACtB;AAED,MAAM,SAAS,GAAG,UAAU,CAAC,eAAe,CAAC,AAAC;AAE9C,MAAM,UAAU,GAAG,CAAC,KAAK,GACvB,KAAK,IAAK,CAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAA,IAAK,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,AAAC;kBAExF;IACb,OAAO;IACP,aAAa;IACb,QAAQ;IACR,UAAU;IACV,iBAAiB;IACjB,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,aAAa;IACb,WAAW;IACX,MAAM;IACN,MAAM;IACN,MAAM;IACN,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,iBAAiB;IACjB,YAAY;IACZ,UAAU;IACV,OAAO;IACP,KAAK;IACL,MAAM;IACN,IAAI;IACJ,QAAQ;IACR,QAAQ;IACR,YAAY;IACZ,MAAM;IACN,UAAU;IACV,QAAQ;IACR,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,cAAc;IACd,UAAU,EAAE,cAAc;IAC1B,iBAAiB;IACjB,aAAa;IACb,WAAW;IACX,WAAW;IACX,IAAI;IACJ,cAAc;IACd,OAAO;IACP,MAAM,EAAE,OAAO;IACf,gBAAgB;IAChB,QAAQ;IACR,cAAc;IACd,mBAAmB;IACnB,YAAY;IACZ,SAAS;IACT,UAAU;CACX,CAAC;;;ACjtBF;;AAAA,YAAY,CAAC;AAEE,SAAS,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE;IACxC,OAAO,SAAS,IAAI,GAAG;QACrB,OAAO,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KACrC,CAAC;CACH;kBAJuB,IAAI;;;ACF5B,OAAO,CAAC,cAAc,GAAG,SAAU,CAAC,EAAE;IACpC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG;QAAC,OAAO,EAAE,CAAC;KAAC,CAAC;CAC7C,CAAC;AAEF,OAAO,CAAC,iBAAiB,GAAG,SAAU,CAAC,EAAE;IACvC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE;QAAC,KAAK,EAAE,IAAI;KAAC,CAAC,CAAC;CACvD,CAAC;AAEF,OAAO,CAAC,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI,EAAE;IAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAU,GAAG,EAAE;QACzC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EACvE,OAAO;QAGT,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;YAC/B,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,WAAY;gBACf,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;aACpB;SACF,CAAC,CAAC;KACJ,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;CACb,CAAC;AAEF,OAAO,CAAC,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE;IAC9C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;QACpC,UAAU,EAAE,IAAI;QAChB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC;CACJ,CAAC;;;AC9BF;;AAEA,uCAAkC;;AAClC,mDAA8C;;AAC9C,8DAAyD;;AACzD,wDAAmD;;AACnD,gDAA2C;;AAC3C,oDAA+C;;AAC/C,qDAAgD;;AAChD,kDAA6C;;AAT7C,YAAY,CAAC;AAWb,MAAM,UAAU,GAAG,CAAA,GAAA,2BAAS,CAAA,CAAC,UAAU,AAAC;AAExC;;;;;;GAMG,CACH,MAAM,KAAK;IACT,YAAY,cAAc,CAAE;QAC1B,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG;YAClB,OAAO,EAAE,IAAI,CAAA,GAAA,oCAAkB,CAAA,EAAE;YACjC,QAAQ,EAAE,IAAI,CAAA,GAAA,oCAAkB,CAAA,EAAE;SACnC,CAAC;KACH;IAED;;;;;;;KAOG,CACH,OAAO,CAAC,WAAW,EAAE,MAAM,EAAE;QAC3B,8BAA8B,CAC9B,0DAA0D;QAC1D,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;YACnC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;YACtB,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC;SAC1B,MACC,MAAM,GAAG,WAAW,IAAI,EAAE,CAAC;QAG7B,MAAM,GAAG,CAAA,GAAA,6BAAW,CAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE5C,MAAM,EAAC,YAAY,CAAA,EAAE,gBAAgB,CAAA,EAAE,OAAO,CAAA,EAAC,GAAG,MAAM,AAAC;QAEzD,IAAI,YAAY,KAAK,SAAS,EAC5B,CAAA,GAAA,2BAAS,CAAA,CAAC,aAAa,CAAC,YAAY,EAAE;YACpC,iBAAiB,EAAE,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;YAC9D,iBAAiB,EAAE,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;YAC9D,mBAAmB,EAAE,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;SACjE,EAAE,KAAK,CAAC,CAAC;QAGZ,IAAI,gBAAgB,IAAI,IAAI;YAC1B,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,gBAAgB,CAAC,EACpC,MAAM,CAAC,gBAAgB,GAAG;gBACxB,SAAS,EAAE,gBAAgB;aAC5B;iBAED,CAAA,GAAA,2BAAS,CAAA,CAAC,aAAa,CAAC,gBAAgB,EAAE;gBACxC,MAAM,EAAE,UAAU,CAAC,QAAQ;gBAC3B,SAAS,EAAE,UAAU,CAAC,QAAQ;aAC/B,EAAE,IAAI,CAAC,CAAC;SAEZ;QAED,oBAAoB;QACpB,MAAM,CAAC,MAAM,GAAG,AAAC,CAAA,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAA,CAAE,WAAW,EAAE,CAAC;QAE/E,IAAI,cAAc,AAAC;QAEnB,kBAAkB;QAClB,cAAc,GAAG,OAAO,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,KAAK,CACrC,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CACvB,CAAC;QAEF,cAAc,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAC7B;YAAC,QAAQ;YAAE,KAAK;YAAE,MAAM;YAAE,MAAM;YAAE,KAAK;YAAE,OAAO;YAAE,QAAQ;SAAC,EAC3D,CAAC,MAAM,GAAK;YACV,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;SACxB,CACF,CAAC;QAEF,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAE9D,kCAAkC;QAClC,MAAM,uBAAuB,GAAG,EAAE,AAAC;QACnC,IAAI,8BAA8B,GAAG,IAAI,AAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,0BAA0B,CAAC,WAAW,EAAE;YACjF,IAAI,OAAO,WAAW,CAAC,OAAO,KAAK,UAAU,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,EACpF,OAAO;YAGT,8BAA8B,GAAG,8BAA8B,IAAI,WAAW,CAAC,WAAW,CAAC;YAE3F,uBAAuB,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC9E,CAAC,CAAC;QAEH,MAAM,wBAAwB,GAAG,EAAE,AAAC;QACpC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,wBAAwB,CAAC,WAAW,EAAE;YAChF,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;SAC5E,CAAC,CAAC;QAEH,IAAI,OAAO,AAAC;QACZ,IAAI,CAAC,GAAG,CAAC,AAAC;QACV,IAAI,GAAG,AAAC;QAER,IAAI,CAAC,8BAA8B,EAAE;YACnC,MAAM,KAAK,GAAG;gBAAC,CAAA,GAAA,iCAAe,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;gBAAE,SAAS;aAAC,AAAC;YACtD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;YACpD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;YAClD,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;YAEnB,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAElC,MAAO,CAAC,GAAG,GAAG,CACZ,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAGjD,OAAO,OAAO,CAAC;SAChB;QAED,GAAG,GAAG,uBAAuB,CAAC,MAAM,CAAC;QAErC,IAAI,SAAS,GAAG,MAAM,AAAC;QAEvB,CAAC,GAAG,CAAC,CAAC;QAEN,MAAO,CAAC,GAAG,GAAG,CAAE;YACd,MAAM,WAAW,GAAG,uBAAuB,CAAC,CAAC,EAAE,CAAC,AAAC;YACjD,MAAM,UAAU,GAAG,uBAAuB,CAAC,CAAC,EAAE,CAAC,AAAC;YAChD,IAAI;gBACF,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;aACpC,CAAC,OAAO,KAAK,EAAE;gBACd,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC7B,MAAM;aACP;SACF;QAED,IAAI;YACF,OAAO,GAAG,CAAA,GAAA,iCAAe,CAAA,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SACjD,CAAC,OAAO,KAAK,EAAE;YACd,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B;QAED,CAAC,GAAG,CAAC,CAAC;QACN,GAAG,GAAG,wBAAwB,CAAC,MAAM,CAAC;QAEtC,MAAO,CAAC,GAAG,GAAG,CACZ,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,EAAE,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAGvF,OAAO,OAAO,CAAC;KAChB;IAED,MAAM,CAAC,MAAM,EAAE;QACb,MAAM,GAAG,CAAA,GAAA,6BAAW,CAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,AAAC;QAC3D,OAAO,CAAA,GAAA,0BAAQ,CAAA,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;KACnE;CACF;AAED,gDAAgD;AAChD,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC;IAAC,QAAQ;IAAE,KAAK;IAAE,MAAM;IAAE,SAAS;CAAC,EAAE,SAAS,mBAAmB,CAAC,MAAM,EAAE;IACvF,uBAAuB,CACvB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,EAAE,MAAM,EAAE;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,6BAAW,CAAA,CAAC,MAAM,IAAI,EAAE,EAAE;YAC5C,MAAM;YACN,GAAG;YACH,IAAI,EAAE,AAAC,CAAA,MAAM,IAAI,EAAE,CAAA,CAAE,IAAI;SAC1B,CAAC,CAAC,CAAC;KACL,CAAC;CACH,CAAC,CAAC;AAEH,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC;IAAC,MAAM;IAAE,KAAK;IAAE,OAAO;CAAC,EAAE,SAAS,qBAAqB,CAAC,MAAM,EAAE;IAC7E,uBAAuB,CAEvB,SAAS,kBAAkB,CAAC,MAAM,EAAE;QAClC,OAAO,SAAS,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;YAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,6BAAW,CAAA,CAAC,MAAM,IAAI,EAAE,EAAE;gBAC5C,MAAM;gBACN,OAAO,EAAE,MAAM,GAAG;oBAChB,cAAc,EAAE,qBAAqB;iBACtC,GAAG,EAAE;gBACN,GAAG;gBACH,IAAI;aACL,CAAC,CAAC,CAAC;SACL,CAAC;KACH;IAED,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,kBAAkB,EAAE,CAAC;IAE/C,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;CAC7D,CAAC,CAAC;kBAEY,KAAK,CAAC;;;AC1MrB;;AAEA,qCAAgC;;AAChC,2EAAsE;;AAHtE,YAAY,CAAC;AAKb;;;;;;;GAOG,CACH,SAAS,MAAM,CAAC,GAAG,EAAE;IACnB,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAC5B,OAAO,UAAU,GAAG,CAAC,CACrB,OAAO,SAAS,GAAG,CAAC,CACpB,OAAO,UAAU,GAAG,CAAC,CACrB,OAAO,SAAS,GAAG,CAAC,CACpB,OAAO,UAAU,GAAG,CAAC,CACrB,OAAO,UAAU,GAAG,CAAC,CAAC;CACzB;AAWc,SAAS,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE;IACrD,8BAA8B,CAC9B,IAAI,CAAC,MAAM,EACT,OAAO,GAAG,CAAC;IAGb,MAAM,OAAO,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,AAAC;IAEpD,MAAM,WAAW,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,AAAC;IAEjD,IAAI,gBAAgB,AAAC;IAErB,IAAI,WAAW,EACb,gBAAgB,GAAG,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAEhD,gBAAgB,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAChD,MAAM,CAAC,QAAQ,EAAE,GACjB,IAAI,CAAA,GAAA,sCAAoB,CAAA,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAGhE,IAAI,gBAAgB,EAAE;QACpB,MAAM,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,AAAC;QAEvC,IAAI,aAAa,KAAK,EAAE,EACtB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;QAEpC,GAAG,IAAI,AAAC,CAAA,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,CAAA,GAAI,gBAAgB,CAAC;KACjE;IAED,OAAO,GAAG,CAAC;CACZ;kBA9BuB,QAAQ;;;AChChC;;AAEA,8CAAyC;;AAFzC,YAAY,CAAC;AAIb;;;;;;;GAOG,CACH,SAAS,MAAM,CAAC,GAAG,EAAE;IACnB,MAAM,OAAO,GAAG;QACd,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,KAAK;QACV,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,IAAM;KACd,AAAC;IACF,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,qBAAqB,SAAS,QAAQ,CAAC,KAAK,EAAE;QAClF,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;KACvB,CAAC,CAAC;CACJ;AAED;;;;;;;GAOG,CACH,SAAS,oBAAoB,CAAC,MAAM,EAAE,OAAO,EAAE;IAC7C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAEjB,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;CAC7C;AAED,MAAM,SAAS,GAAG,oBAAoB,CAAC,SAAS,AAAC;AAEjD,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE;IAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAAC,IAAI;QAAE,KAAK;KAAC,CAAC,CAAC;CACjC,CAAC;AAEF,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC9C,MAAM,OAAO,GAAG,OAAO,GAAG,SAAS,KAAK,EAAE;QACxC,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAC1C,GAAG,MAAM,AAAC;IAEX,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,EAAE;QACzC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAClD,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAClB,CAAC;kBAEa,oBAAoB,CAAC;;;ACzDpC;;AAEA,qCAAgC;;AAChC,oDAA+C;;AAC/C,yFAAyF;AACzF,iEAAoE;;AALpE,YAAY,CAAC;;AAOb;;;;;;GAMG,CACH,SAAS,WAAW,CAAC,KAAK,EAAE;IAC1B,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;CAC3D;AAED;;;;;;GAMG,CACH,SAAS,cAAc,CAAC,GAAG,EAAE;IAC3B,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;CAC3D;AAED;;;;;;;;GAQG,CACH,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;IAClC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,CAAC;IACtB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;QAClD,6CAA6C;QAC7C,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;QAC9B,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;KAC/C,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;CAC1B;AAED;;;;;;GAMG,CACH,SAAS,WAAW,CAAC,GAAG,EAAE;IACxB,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;CACrD;AAED,MAAM,UAAU,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,YAAY,CAAC,CAAA,GAAA,uBAAK,CAAA,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,IAAI,EAAE;IAC3E,OAAO,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC;CAC9B,CAAC,AAAC;AAEH;;;;;;;;;;;;IAYI,CAEJ;;;;;;;;GAQG,CACH,SAAS,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC1C,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,EACtB,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAC;IAGlD,6CAA6C;IAC7C,QAAQ,GAAG,QAAQ,IAAI,IAAK,CAAA,CAAA,GAAA,0BAAgB,CAAA,IAAI,QAAQ,CAAA,EAAG,CAAC;IAE5D,6CAA6C;IAC7C,OAAO,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,YAAY,CAAC,OAAO,EAAE;QACpC,UAAU,EAAE,IAAI;QAChB,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,KAAK;KACf,EAAE,KAAK,EAAE,SAAS,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE;QACzC,6CAA6C;QAC7C,OAAO,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3C,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,AAAC;IACtC,gDAAgD;IAChD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,cAAc,AAAC;IAClD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,AAAC;IAC1B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;IAChC,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,WAAW,IAAI,IAAI,AAAC;IAClE,MAAM,OAAO,GAAG,KAAK,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,mBAAmB,CAAC,QAAQ,CAAC,AAAC;IAE7D,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,OAAO,CAAC,EAC5B,MAAM,IAAI,SAAS,CAAC,4BAA4B,CAAC,CAAC;IAGpD,SAAS,YAAY,CAAC,KAAK,EAAE;QAC3B,IAAI,KAAK,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC;QAE9B,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,MAAM,CAAC,KAAK,CAAC,EACrB,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;QAG7B,IAAI,CAAC,OAAO,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,MAAM,CAAC,KAAK,CAAC,EACjC,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,8CAA8C,CAAC,CAAC;QAGvE,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,YAAY,CAAC,KAAK,CAAC,EACzD,OAAO,OAAO,IAAI,OAAO,IAAI,KAAK,UAAU,GAAG,IAAI,IAAI,CAAC;YAAC,KAAK;SAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAGxF,OAAO,KAAK,CAAC;KACd;IAED;;;;;;;;;KASG,CACH,SAAS,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE;QACxC,IAAI,GAAG,GAAG,KAAK,AAAC;QAEhB,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC/C,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;gBAC7B,6CAA6C;gBAC7C,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC1C,6CAA6C;gBAC7C,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,MAAM,IACL,AAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,IAC1C,AAAC,CAAA,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA,IAAM,CAAA,GAAG,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,AAAC,AACtF,EAAE;gBACH,6CAA6C;gBAC7C,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;gBAE1B,GAAG,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE;oBACnC,CAAE,CAAA,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAA,AAAC,IAAI,QAAQ,CAAC,MAAM,CACxD,6CAA6C;oBAC7C,OAAO,KAAK,IAAI,GAAG,SAAS,CAAC;wBAAC,GAAG;qBAAC,EAAE,KAAK,EAAE,IAAI,CAAC,GAAI,OAAO,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,AAAC,EACxF,YAAY,CAAC,EAAE,CAAC,CACjB,CAAC;iBACH,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;SACF;QAED,IAAI,WAAW,CAAC,KAAK,CAAC,EACpB,OAAO,IAAI,CAAC;QAGd,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjE,OAAO,KAAK,CAAC;KACd;IAED,MAAM,KAAK,GAAG,EAAE,AAAC;IAEjB,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;QAC/C,cAAc;QACd,YAAY;QACZ,WAAW;KACZ,CAAC,AAAC;IAEH,SAAS,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE;QAC1B,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO;QAErC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,EAC7B,MAAM,KAAK,CAAC,iCAAiC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAGlE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElB,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE;YAC1C,MAAM,MAAM,GAAG,CAAE,CAAA,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAA,AAAC,IAAI,OAAO,CAAC,IAAI,CACpE,QAAQ,EAAE,EAAE,EAAE,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,cAAc,CAC3E,AAAC;YAEF,IAAI,MAAM,KAAK,IAAI,EACjB,KAAK,CAAC,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;gBAAC,GAAG;aAAC,CAAC,CAAC;SAE9C,CAAC,CAAC;QAEH,KAAK,CAAC,GAAG,EAAE,CAAC;KACb;IAED,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,EACtB,MAAM,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC;IAGhD,KAAK,CAAC,GAAG,CAAC,CAAC;IAEX,OAAO,QAAQ,CAAC;CACjB;kBAEc,UAAU,CAAC;;;AC1N1B;;AAEA,qCAAgC;;AAFhC,YAAY,CAAC;AAIb;;;;;;;;;;GAUG,CACH,SAAS,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC5D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjB,IAAI,KAAK,CAAC,iBAAiB,EACzB,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAEhD,IAAI,CAAC,KAAK,GAAG,AAAC,IAAI,KAAK,EAAE,CAAE,KAAK,CAAC;IAGnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;IACzB,IAAI,IAAK,CAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA,AAAC,CAAC;IAC3B,MAAM,IAAK,CAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA,AAAC,CAAC;IACjC,OAAO,IAAK,CAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA,AAAC,CAAC;IACpC,QAAQ,IAAK,CAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA,AAAC,CAAC;CACxC;AAED,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,EAAE;IAChC,MAAM,EAAE,SAAS,MAAM,GAAG;QACxB,OAAO;YACL,WAAW;YACX,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,YAAY;YACZ,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,UAAU;YACV,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ;YACR,MAAM,EAAE,CAAA,GAAA,uBAAK,CAAA,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI;SAC5E,CAAC;KACH;CACF,CAAC,CAAC;AAEH,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,AAAC;AACvC,MAAM,WAAW,GAAG,EAAE,AAAC;AAEvB;IACE,sBAAsB;IACtB,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,aAAa;IACb,2BAA2B;IAC3B,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;CAElB,CAAC,OAAO,CAAC,CAAA,IAAI,GAAI;IAChB,WAAW,CAAC,IAAI,CAAC,GAAG;QAAC,KAAK,EAAE,IAAI;KAAC,CAAC;CACnC,CAAC,CAAC;AAEH,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AACjD,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,EAAE;IAAC,KAAK,EAAE,IAAI;CAAC,CAAC,CAAC;AAEhE,sCAAsC;AACtC,UAAU,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,GAAK;IACzE,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,AAAC;IAE5C,CAAA,GAAA,uBAAK,CAAA,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE;QACzD,OAAO,GAAG,KAAK,KAAK,CAAC,SAAS,CAAC;KAChC,EAAE,CAAA,IAAI,GAAI;QACT,OAAO,IAAI,KAAK,cAAc,CAAC;KAChC,CAAC,CAAC;IAEH,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IAE5E,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;IAEzB,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAE7B,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAEtD,OAAO,UAAU,CAAC;CACnB,CAAC;kBAEa,UAAU,CAAC;;;AClG1B;;AADA,kCAAkC;kBACnB,IAAI,CAAC;;;ACDpB;;;;;GAKG,CACH,6BAA6B,CAE7B,YAAY;AAEZ,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC;AACnC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM,mBAAmB,GACvB,AAAC,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,UAAU,CAAE,mCAAmC;AAArC,GAChE,MAAM,CAAC,KAAK,CAAC,CAAC,4BAA4B,CAAC,CAAC,mCAAmC;GAC/E,IAAI;AAEV,OAAO,CAAC,MAAM,GAAG,MAAM;AACvB,OAAO,CAAC,UAAU,GAAG,UAAU;AAC/B,OAAO,CAAC,iBAAiB,GAAG,EAAE;AAE9B,MAAM,YAAY,GAAG,UAAU;AAC/B,OAAO,CAAC,UAAU,GAAG,YAAY;AAEjC;;;;;;;;;;;;;GAaG,CACH,MAAM,CAAC,mBAAmB,GAAG,iBAAiB,EAAE;AAEhD,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,OAAO,OAAO,KAAK,WAAW,IAC7D,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EACrC,OAAO,CAAC,KAAK,CACX,+IACsE,CACvE;AAGH,SAAS,iBAAiB,GAAI;IAC5B,8CAA8C;IAC9C,IAAI;QACF,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG;YAAE,GAAG,EAAE,WAAY;gBAAE,OAAO,EAAE,CAAA;aAAE;SAAE;QAChD,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC;QAClD,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC;QACjC,OAAO,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,CAAA;KACxB,CAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAA;KACb;CACF;AAED,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE;IAChD,UAAU,EAAE,IAAI;IAChB,GAAG,EAAE,WAAY;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,SAAS,CAAA;QAC5C,OAAO,IAAI,CAAC,MAAM,CAAA;KACnB;CACF,CAAC;AAEF,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE;IAChD,UAAU,EAAE,IAAI;IAChB,GAAG,EAAE,WAAY;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,SAAS,CAAA;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAA;KACvB;CACF,CAAC;AAEF,SAAS,YAAY,CAAE,MAAM,EAAE;IAC7B,IAAI,MAAM,GAAG,YAAY,EACvB,MAAM,IAAI,UAAU,CAAC,aAAa,GAAG,MAAM,GAAG,gCAAgC,CAAC,CAAA;IAEjF,4CAA4C;IAC5C,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;IAClC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC;IAC5C,OAAO,GAAG,CAAA;CACX;AAED;;;;;;;;GAQG,CAEH,SAAS,MAAM,CAAE,GAAG,EAAE,gBAAgB,EAAE,MAAM,EAAE;IAC9C,eAAe;IACf,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EACtC,MAAM,IAAI,SAAS,CACjB,oEAAoE,CACrE,CAAA;QAEH,OAAO,WAAW,CAAC,GAAG,CAAC,CAAA;KACxB;IACD,OAAO,IAAI,CAAC,GAAG,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;CAC3C;AAED,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,kCAAkC;AAAnC;AAEtB,SAAS,IAAI,CAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE;IAC9C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC3B,OAAO,UAAU,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA;IAG5C,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAC3B,OAAO,aAAa,CAAC,KAAK,CAAC,CAAA;IAG7B,IAAI,KAAK,IAAI,IAAI,EACf,MAAM,IAAI,SAAS,CACjB,iHACsC,GAAI,OAAO,KAAK,AAAC,CACxD,CAAA;IAGH,IAAI,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,IAC7B,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,AAAC,EAClD,OAAO,eAAe,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGzD,IAAI,OAAO,iBAAiB,KAAK,WAAW,IACvC,CAAA,UAAU,CAAC,KAAK,EAAE,iBAAiB,CAAC,IACpC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,iBAAiB,CAAC,AAAC,CAAA,AAAC,EACzD,OAAO,eAAe,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGzD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC3B,MAAM,IAAI,SAAS,CACjB,uEAAuE,CACxE,CAAA;IAGH,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;IAChD,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,EACtC,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGvD,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;IAC3B,IAAI,CAAC,EAAE,OAAO,CAAC,CAAA;IAEf,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,IAC3D,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,UAAU,EACjD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGnF,MAAM,IAAI,SAAS,CACjB,iHACsC,GAAI,OAAO,KAAK,AAAC,CACxD,CAAA;CACF;AAED;;;;;;;IAOI,CACJ,MAAM,CAAC,IAAI,GAAG,SAAU,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE;IACvD,OAAO,IAAI,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;CAC7C;AAED,kFAAkF;AAClF,4CAA4C;AAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC;AAC7D,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC;AAEzC,SAAS,UAAU,CAAE,IAAI,EAAE;IACzB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAC1B,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAA;SACxD,IAAI,IAAI,GAAG,CAAC,EACjB,MAAM,IAAI,UAAU,CAAC,aAAa,GAAG,IAAI,GAAG,gCAAgC,CAAC,CAAA;CAEhF;AAED,SAAS,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;IACpC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI,IAAI,IAAI,CAAC,EACX,OAAO,YAAY,CAAC,IAAI,CAAC,CAAA;IAE3B,IAAI,IAAI,KAAK,SAAS,EACpB,wDAAwD;IACxD,uDAAuD;IACvD,oCAAoC;IACpC,OAAO,OAAO,QAAQ,KAAK,QAAQ,GAC/B,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,GACvC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAEnC,OAAO,YAAY,CAAC,IAAI,CAAC,CAAA;CAC1B;AAED;;;IAGI,CACJ,MAAM,CAAC,KAAK,GAAG,SAAU,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7C,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;CACnC;AAED,SAAS,WAAW,CAAE,IAAI,EAAE;IAC1B,UAAU,CAAC,IAAI,CAAC;IAChB,OAAO,YAAY,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;CACtD;AAED;;KAEK,CACL,MAAM,CAAC,WAAW,GAAG,SAAU,IAAI,EAAE;IACnC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAA;CACzB;AACD;;GAEG,CACH,MAAM,CAAC,eAAe,GAAG,SAAU,IAAI,EAAE;IACvC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAA;CACzB;AAED,SAAS,UAAU,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrC,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,EAAE,EACjD,QAAQ,GAAG,MAAM;IAGnB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAC9B,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;IAGtD,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC;IAC/C,IAAI,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;IAE9B,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC;IAE1C,IAAI,MAAM,KAAK,MAAM,EACnB,2EAA2E;IAC3E,0EAA0E;IAC1E,oCAAoC;IACpC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC;IAG5B,OAAO,GAAG,CAAA;CACX;AAED,SAAS,aAAa,CAAE,KAAK,EAAE;IAC7B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;IAC/D,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;IAChC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,CAChC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG;IAEzB,OAAO,GAAG,CAAA;CACX;AAED,SAAS,aAAa,CAAE,SAAS,EAAE;IACjC,IAAI,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;QACrC,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC;QACtC,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;KACtE;IACD,OAAO,aAAa,CAAC,SAAS,CAAC,CAAA;CAChC;AAED,SAAS,eAAe,CAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE;IACnD,IAAI,UAAU,GAAG,CAAC,IAAI,KAAK,CAAC,UAAU,GAAG,UAAU,EACjD,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAA;IAG9D,IAAI,KAAK,CAAC,UAAU,GAAG,UAAU,GAAI,CAAA,MAAM,IAAI,CAAC,CAAA,AAAC,EAC/C,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAA;IAG9D,IAAI,GAAG;IACP,IAAI,UAAU,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,EAClD,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC;SACtB,IAAI,MAAM,KAAK,SAAS,EAC7B,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC;SAEvC,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC;IAGjD,4CAA4C;IAC5C,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC;IAE5C,OAAO,GAAG,CAAA;CACX;AAED,SAAS,UAAU,CAAE,GAAG,EAAE;IACxB,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACxB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;QACnC,MAAM,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;QAE7B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAClB,OAAO,GAAG,CAAA;QAGZ,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QACxB,OAAO,GAAG,CAAA;KACX;IAED,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE;QAC5B,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,QAAQ,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAC3D,OAAO,YAAY,CAAC,CAAC,CAAC,CAAA;QAExB,OAAO,aAAa,CAAC,GAAG,CAAC,CAAA;KAC1B;IAED,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAClD,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;CAEjC;AAED,SAAS,OAAO,CAAE,MAAM,EAAE;IACxB,wEAAwE;IACxE,sDAAsD;IACtD,IAAI,MAAM,IAAI,YAAY,EACxB,MAAM,IAAI,UAAU,CAAC,yDACU,GAAG,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAA;IAEzE,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,SAAS,UAAU,CAAE,MAAM,EAAE;IAC3B,IAAI,CAAC,MAAM,IAAI,MAAM,EACnB,MAAM,GAAG,CAAC;IAEZ,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAA;CAC7B;AAED,MAAM,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,CAAC,EAAE;IACtC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,IACtC,CAAC,KAAK,MAAM,CAAC,SAAS,CAAC,qDAAqD;IAAtD,CAAA;CACzB;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE;IACvC,IAAI,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;IACzE,IAAI,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;IACzE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC5C,MAAM,IAAI,SAAS,CACjB,uEAAuE,CACxE,CAAA;IAGH,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;IAErB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;IAChB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;IAEhB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAChD,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACjB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACR,MAAK;KACN;IAGH,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAA;IACpB,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;IACnB,OAAO,CAAC,CAAA;CACT;AAED,MAAM,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,QAAQ,EAAE;IACjD,OAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE;QACpC,KAAK,KAAK,CAAC;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ,CAAC;QACd,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,IAAI,CAAA;QACb;YACE,OAAO,KAAK,CAAA;KACf;CACF;AAED,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,IAAI,EAAE,MAAM,EAAE;IAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EACtB,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAA;IAGpE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EACnB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAGxB,IAAI,CAAC;IACL,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,MAAM,GAAG,CAAC;QACV,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAC9B,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;KAE3B;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;IACzC,IAAI,GAAG,GAAG,CAAC;IACX,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC;YAC7B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;gBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACjD,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;aACtB,MACC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAC3B,MAAM,EACN,GAAG,EACH,GAAG,CACJ;eAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC9B,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAA;aAElE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QAEvB,GAAG,IAAI,GAAG,CAAC,MAAM;KAClB;IACD,OAAO,MAAM,CAAA;CACd;AAED,SAAS,UAAU,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EACzB,OAAO,MAAM,CAAC,MAAM,CAAA;IAEtB,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,EAC/D,OAAO,MAAM,CAAC,UAAU,CAAA;IAE1B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAC5B,MAAM,IAAI,SAAS,CACjB,0FACgB,GAAG,OAAO,MAAM,CACjC,CAAA;IAGH,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM;IACzB,MAAM,SAAS,GAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,AAAC;IACjE,IAAI,CAAC,SAAS,IAAI,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;IAErC,oCAAoC;IACpC,IAAI,WAAW,GAAG,KAAK;IACvB,OACE,OAAQ,QAAQ;QACd,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,GAAG,CAAA;QACZ,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAA;QACnC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,GAAG,GAAG,CAAC,CAAA;QAChB,KAAK,KAAK;YACR,OAAO,GAAG,KAAK,CAAC,CAAA;QAClB,KAAK,QAAQ;YACX,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,CAAA;QACrC;YACE,IAAI,WAAW,EACb,OAAO,SAAS,GAAG,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,cAAc;YAAf,CAAA;YAEpD,QAAQ,GAAG,AAAC,CAAA,EAAE,GAAG,QAAQ,CAAA,CAAE,WAAW,EAAE;YACxC,WAAW,GAAG,IAAI;KACrB;CAEJ;AACD,MAAM,CAAC,UAAU,GAAG,UAAU;AAE9B,SAAS,YAAY,CAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,IAAI,WAAW,GAAG,KAAK;IAEvB,4EAA4E;IAC5E,6BAA6B;IAE7B,2EAA2E;IAC3E,mEAAmE;IACnE,8DAA8D;IAC9D,kEAAkE;IAClE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,GAAG,CAAC,EAClC,KAAK,GAAG,CAAC;IAEX,6EAA6E;IAC7E,uBAAuB;IACvB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,OAAO,EAAE,CAAA;IAGX,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EACxC,GAAG,GAAG,IAAI,CAAC,MAAM;IAGnB,IAAI,GAAG,IAAI,CAAC,EACV,OAAO,EAAE,CAAA;IAGX,0EAA0E;IAC1E,GAAG,MAAM,CAAC;IACV,KAAK,MAAM,CAAC;IAEZ,IAAI,GAAG,IAAI,KAAK,EACd,OAAO,EAAE,CAAA;IAGX,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,MAAM;IAEhC,MAAO,IAAI,CACT,OAAQ,QAAQ;QACd,KAAK,KAAK;YACR,OAAO,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEnC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEpC,KAAK,OAAO;YACV,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAErC,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEtC,KAAK,QAAQ;YACX,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEtC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEvC;YACE,IAAI,WAAW,EAAE,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;YACrE,QAAQ,GAAG,AAAC,CAAA,QAAQ,GAAG,EAAE,CAAA,CAAE,WAAW,EAAE;YACxC,WAAW,GAAG,IAAI;KACrB;CAEJ;AAED,+EAA+E;AAC/E,4EAA4E;AAC5E,6EAA6E;AAC7E,2EAA2E;AAC3E,yEAAyE;AACzE,mDAAmD;AACnD,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI;AAEjC,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;CACT;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EACf,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC,CAAA;IAEnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAC7B,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAEtB,OAAO,IAAI,CAAA;CACZ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EACf,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC,CAAA;IAEnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;QAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACzB;IACD,OAAO,IAAI,CAAA;CACZ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EACf,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC,CAAA;IAEnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;QAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACzB;IACD,OAAO,IAAI,CAAA;CACZ;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAI;IAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;IAC1B,IAAI,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAA;IAC3B,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;IAC7D,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;CAC3C;AAED,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ;AAE3D,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE;IAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAA;IACzE,IAAI,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI,CAAA;IAC3B,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAA;CACrC;AAED,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;IAC7C,IAAI,GAAG,GAAG,EAAE;IACZ,MAAM,GAAG,GAAG,OAAO,CAAC,iBAAiB;IACrC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,YAAY,KAAK,CAAC,CAAC,IAAI,EAAE;IACnE,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,GAAG,IAAI,OAAO;IACrC,OAAO,UAAU,GAAG,GAAG,GAAG,GAAG,CAAA;CAC9B;AACD,IAAI,mBAAmB,EACrB,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO;AAGlE,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;IACnF,IAAI,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,EAChC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC;IAEhE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC1B,MAAM,IAAI,SAAS,CACjB,gFACgB,GAAI,OAAO,MAAM,AAAC,CACnC,CAAA;IAGH,IAAI,KAAK,KAAK,SAAS,EACrB,KAAK,GAAG,CAAC;IAEX,IAAI,GAAG,KAAK,SAAS,EACnB,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;IAElC,IAAI,SAAS,KAAK,SAAS,EACzB,SAAS,GAAG,CAAC;IAEf,IAAI,OAAO,KAAK,SAAS,EACvB,OAAO,GAAG,IAAI,CAAC,MAAM;IAGvB,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,EAC5E,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAG5C,IAAI,SAAS,IAAI,OAAO,IAAI,KAAK,IAAI,GAAG,EACtC,OAAO,CAAC,CAAA;IAEV,IAAI,SAAS,IAAI,OAAO,EACtB,OAAO,EAAE,CAAA;IAEX,IAAI,KAAK,IAAI,GAAG,EACd,OAAO,CAAC,CAAA;IAGV,KAAK,MAAM,CAAC;IACZ,GAAG,MAAM,CAAC;IACV,SAAS,MAAM,CAAC;IAChB,OAAO,MAAM,CAAC;IAEd,IAAI,IAAI,KAAK,MAAM,EAAE,OAAO,CAAC,CAAA;IAE7B,IAAI,CAAC,GAAG,OAAO,GAAG,SAAS;IAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,KAAK;IACnB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;IAC/C,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;IAE3C,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC1B,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,EAAE;QACjC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QACf,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;QACjB,MAAK;KACN;IAGH,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAA;IACpB,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;IACnB,OAAO,CAAC,CAAA;CACT;AAED,+EAA+E;AAC/E,oEAAoE;AACpE,EAAE;AACF,aAAa;AACb,gCAAgC;AAChC,sCAAsC;AACtC,qEAAqE;AACrE,iEAAiE;AACjE,kDAAkD;AAClD,SAAS,oBAAoB,CAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE;IACrE,8BAA8B;IAC9B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAA;IAElC,uBAAuB;IACvB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,QAAQ,GAAG,UAAU;QACrB,UAAU,GAAG,CAAC;KACf,MAAM,IAAI,UAAU,GAAG,UAAU,EAChC,UAAU,GAAG,UAAU;SAClB,IAAI,UAAU,GAAG,WAAW,EACjC,UAAU,GAAG,WAAW;IAE1B,UAAU,GAAG,CAAC,UAAU,CAAC,oBAAoB;IAArB;IACxB,IAAI,WAAW,CAAC,UAAU,CAAC,EACzB,4EAA4E;IAC5E,UAAU,GAAG,GAAG,GAAG,CAAC,GAAI,MAAM,CAAC,MAAM,GAAG,CAAC,AAAC;IAG5C,0EAA0E;IAC1E,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,UAAU;IAC3D,IAAI,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;QAC/B,IAAI,GAAG,EAAE,OAAO,EAAE,CAAA;aACb,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;KACpC,MAAM,IAAI,UAAU,GAAG,CAAC,EAAE;QACzB,IAAI,GAAG,EAAE,UAAU,GAAG,CAAC;aAClB,OAAO,EAAE,CAAA;KACf;IAED,gBAAgB;IAChB,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;IAGlC,iEAAiE;IACjE,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACxB,6DAA6D;QAC7D,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAClB,OAAO,EAAE,CAAA;QAEX,OAAO,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAA;KAC5D,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAClC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,kCAAkC;QAAnC;QAChB,IAAI,OAAO,UAAU,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,EAAE;YACtD,IAAI,GAAG,EACL,OAAO,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;iBAEjE,OAAO,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;SAExE;QACD,OAAO,YAAY,CAAC,MAAM,EAAE;YAAC,GAAG;SAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAA;KAC9D;IAED,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAA;CAC5D;AAED,SAAS,YAAY,CAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE;IAC1D,IAAI,SAAS,GAAG,CAAC;IACjB,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM;IAC1B,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM;IAE1B,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE;QACzC,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,OAAO,IAC3C,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,UAAU,EAAE;YACrD,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAClC,OAAO,EAAE,CAAA;YAEX,SAAS,GAAG,CAAC;YACb,SAAS,IAAI,CAAC;YACd,SAAS,IAAI,CAAC;YACd,UAAU,IAAI,CAAC;SAChB;KACF;IAED,SAAS,IAAI,CAAE,GAAG,EAAE,CAAC,EAAE;QACrB,IAAI,SAAS,KAAK,CAAC,EACjB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAA;aAEb,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC,CAAA;KAEzC;IAED,IAAI,EAAC;IACL,IAAI,GAAG,EAAE;QACP,IAAI,UAAU,GAAG,EAAE;QACnB,IAAK,EAAC,GAAG,UAAU,EAAE,EAAC,GAAG,SAAS,EAAE,EAAC,EAAE,CACrC,IAAI,IAAI,CAAC,GAAG,EAAE,EAAC,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,UAAU,KAAK,EAAE,GAAG,CAAC,GAAG,EAAC,GAAG,UAAU,CAAC,EAAE;YACtE,IAAI,UAAU,KAAK,EAAE,EAAE,UAAU,GAAG,EAAC;YACrC,IAAI,EAAC,GAAG,UAAU,GAAG,CAAC,KAAK,SAAS,EAAE,OAAO,UAAU,GAAG,SAAS,CAAA;SACpE,MAAM;YACL,IAAI,UAAU,KAAK,EAAE,EAAE,EAAC,IAAI,EAAC,GAAG,UAAU;YAC1C,UAAU,GAAG,EAAE;SAChB;KAEJ,MAAM;QACL,IAAI,UAAU,GAAG,SAAS,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,GAAG,SAAS;QAC1E,IAAK,EAAC,GAAG,UAAU,EAAE,EAAC,IAAI,CAAC,EAAE,EAAC,EAAE,CAAE;YAChC,IAAI,KAAK,GAAG,IAAI;YAChB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,CAChC,IAAI,IAAI,CAAC,GAAG,EAAE,EAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;gBACrC,KAAK,GAAG,KAAK;gBACb,MAAK;aACN;YAEH,IAAI,KAAK,EAAE,OAAO,EAAC,CAAA;SACpB;KACF;IAED,OAAO,EAAE,CAAA;CACV;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;IACxE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAA;CACtD;AAED,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;IACtE,OAAO,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;CACnE;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC9E,OAAO,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;CACpE;AAED,SAAS,QAAQ,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC9C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IAC5B,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM;IACrC,IAAI,CAAC,MAAM,EACT,MAAM,GAAG,SAAS;SACb;QACL,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QACvB,IAAI,MAAM,GAAG,SAAS,EACpB,MAAM,GAAG,SAAS;KAErB;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;IAE5B,IAAI,MAAM,GAAG,MAAM,GAAG,CAAC,EACrB,MAAM,GAAG,MAAM,GAAG,CAAC;IAErB,IAAI,CAAC;IACL,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAE;QAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACpD,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAA;QACjC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM;KACzB;IACD,OAAO,CAAC,CAAA;CACT;AAED,SAAS,SAAS,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC/C,OAAO,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CACjF;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAChD,OAAO,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CAC7D;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IACjD,OAAO,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CAC9D;AAED,SAAS,SAAS,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC/C,OAAO,UAAU,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CACpF;AAED,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;IACzE,uBAAuB;IACvB,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,QAAQ,GAAG,MAAM;QACjB,MAAM,GAAG,IAAI,CAAC,MAAM;QACpB,MAAM,GAAG,CAAC;IACZ,iCAAiC;KAChC,MAAM,IAAI,MAAM,KAAK,SAAS,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC7D,QAAQ,GAAG,MAAM;QACjB,MAAM,GAAG,IAAI,CAAC,MAAM;QACpB,MAAM,GAAG,CAAC;IACZ,qDAAqD;KACpD,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC3B,MAAM,GAAG,MAAM,KAAK,CAAC;QACrB,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpB,MAAM,GAAG,MAAM,KAAK,CAAC;YACrB,IAAI,QAAQ,KAAK,SAAS,EAAE,QAAQ,GAAG,MAAM;SAC9C,MAAM;YACL,QAAQ,GAAG,MAAM;YACjB,MAAM,GAAG,SAAS;SACnB;KACF,MACC,MAAM,IAAI,KAAK,CACb,yEAAyE,CAC1E,CAAA;IAGH,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM;IACtC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,GAAG,SAAS,EAAE,MAAM,GAAG,SAAS;IAElE,IAAI,AAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAK,CAAA,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,CAAA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAC3E,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC,CAAA;IAGhE,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,MAAM;IAEhC,IAAI,WAAW,GAAG,KAAK;IACvB,OACE,OAAQ,QAAQ;QACd,KAAK,KAAK;YACR,OAAO,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAE/C,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEhD,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEjD,KAAK,QAAQ;YACX,2DAA2D;YAC3D,OAAO,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAElD,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEhD;YACE,IAAI,WAAW,EAAE,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;YACrE,QAAQ,GAAG,AAAC,CAAA,EAAE,GAAG,QAAQ,CAAA,CAAE,WAAW,EAAE;YACxC,WAAW,GAAG,IAAI;KACrB;CAEJ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;KACvD,CAAA;CACF;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACrC,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,MAAM,EACnC,OAAO,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;SAEhC,OAAO,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;CAErD;AAED,SAAS,SAAS,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACnC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAC/B,MAAM,GAAG,GAAG,EAAE;IAEd,IAAI,CAAC,GAAG,KAAK;IACb,MAAO,CAAC,GAAG,GAAG,CAAE;QACd,MAAM,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC;QACxB,IAAI,SAAS,GAAG,IAAI;QACpB,IAAI,gBAAgB,GAAG,AAAC,SAAS,GAAG,IAAI,GACpC,CAAC,GACD,AAAC,SAAS,GAAG,IAAI,GACb,CAAC,GACD,AAAC,SAAS,GAAG,IAAI,GACb,CAAC,GACD,CAAC;QAEb,IAAI,CAAC,GAAG,gBAAgB,IAAI,GAAG,EAAE;YAC/B,IAAI,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa;YAEpD,OAAQ,gBAAgB;gBACtB,KAAK,CAAC;oBACJ,IAAI,SAAS,GAAG,IAAI,EAClB,SAAS,GAAG,SAAS;oBAEvB,MAAK;gBACP,KAAK,CAAC;oBACJ,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,EAAE;wBAChC,aAAa,GAAG,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,IAAK,GAAG,GAAI,UAAU,GAAG,IAAI,AAAC;wBAC/D,IAAI,aAAa,GAAG,IAAI,EACtB,SAAS,GAAG,aAAa;qBAE5B;oBACD,MAAK;gBACP,KAAK,CAAC;oBACJ,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtB,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,IAAI,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,KAAM,IAAI,EAAE;wBAC/D,aAAa,GAAG,AAAC,CAAA,SAAS,GAAG,GAAG,CAAA,IAAK,GAAG,GAAG,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,IAAK,GAAG,GAAI,SAAS,GAAG,IAAI,AAAC;wBAC1F,IAAI,aAAa,GAAG,KAAK,IAAK,CAAA,aAAa,GAAG,MAAM,IAAI,aAAa,GAAG,MAAM,CAAA,AAAC,EAC7E,SAAS,GAAG,aAAa;qBAE5B;oBACD,MAAK;gBACP,KAAK,CAAC;oBACJ,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtB,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,IAAI,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,KAAM,IAAI,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,EAAE;wBAC/F,aAAa,GAAG,AAAC,CAAA,SAAS,GAAG,GAAG,CAAA,IAAK,IAAI,GAAG,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,IAAK,GAAG,GAAG,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,IAAK,GAAG,GAAI,UAAU,GAAG,IAAI,AAAC;wBACxH,IAAI,aAAa,GAAG,MAAM,IAAI,aAAa,GAAG,QAAQ,EACpD,SAAS,GAAG,aAAa;qBAE5B;aACJ;SACF;QAED,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,oDAAoD;YACpD,oDAAoD;YACpD,SAAS,GAAG,MAAM;YAClB,gBAAgB,GAAG,CAAC;SACrB,MAAM,IAAI,SAAS,GAAG,MAAM,EAAE;YAC7B,yCAAyC;YACzC,SAAS,IAAI,OAAO;YACpB,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,GAAG,KAAK,GAAG,MAAM,CAAC;YAC3C,SAAS,GAAG,MAAM,GAAG,SAAS,GAAG,KAAK;SACvC;QAED,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACnB,CAAC,IAAI,gBAAgB;KACtB;IAED,OAAO,qBAAqB,CAAC,GAAG,CAAC,CAAA;CAClC;AAED,wEAAwE;AACxE,iDAAiD;AACjD,qCAAqC;AACrC,MAAM,oBAAoB,GAAG,MAAM;AAEnC,SAAS,qBAAqB,CAAE,UAAU,EAAE;IAC1C,MAAM,GAAG,GAAG,UAAU,CAAC,MAAM;IAC7B,IAAI,GAAG,IAAI,oBAAoB,EAC7B,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,sBAAsB;KAAvB;IAGtD,wDAAwD;IACxD,IAAI,GAAG,GAAG,EAAE;IACZ,IAAI,CAAC,GAAG,CAAC;IACT,MAAO,CAAC,GAAG,GAAG,CACZ,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAC9B,MAAM,EACN,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,oBAAoB,CAAC,CAC/C;IAEH,OAAO,GAAG,CAAA;CACX;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,IAAI,GAAG,GAAG,EAAE;IACZ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAE/B,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC9B,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAE3C,OAAO,GAAG,CAAA;CACX;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACrC,IAAI,GAAG,GAAG,EAAE;IACZ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAE/B,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC9B,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpC,OAAO,GAAG,CAAA;CACX;AAED,SAAS,QAAQ,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IAClC,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM;IAEtB,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;IAClC,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG;IAE3C,IAAI,GAAG,GAAG,EAAE;IACZ,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC9B,GAAG,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpC,OAAO,GAAG,CAAA;CACX;AAED,SAAS,YAAY,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACtC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;IACnC,IAAI,GAAG,GAAG,EAAE;IACZ,4EAA4E;IAC5E,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAC1C,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,GAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,AAAC,CAAC;IAE7D,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,KAAK,EAAE,GAAG,EAAE;IACnD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK;IACf,GAAG,GAAG,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG;IAErC,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,KAAK,IAAI,GAAG;QACZ,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;KACzB,MAAM,IAAI,KAAK,GAAG,GAAG,EACpB,KAAK,GAAG,GAAG;IAGb,IAAI,GAAG,GAAG,CAAC,EAAE;QACX,GAAG,IAAI,GAAG;QACV,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;KACrB,MAAM,IAAI,GAAG,GAAG,GAAG,EAClB,GAAG,GAAG,GAAG;IAGX,IAAI,GAAG,GAAG,KAAK,EAAE,GAAG,GAAG,KAAK;IAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;IACxC,4CAA4C;IAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC;IAE/C,OAAO,MAAM,CAAA;CACd;AAED;;GAEG,CACH,SAAS,WAAW,CAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;IACzC,IAAI,AAAC,MAAM,GAAG,CAAC,KAAM,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAChF,IAAI,MAAM,GAAG,GAAG,GAAG,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,uCAAuC,CAAC,CAAA;CACzF;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAC3B,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IAC/E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,WAAU,GAAG,WAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,WAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAE3D,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,MAAO,EAAE,CAAC,GAAG,WAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACvC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;IAG/B,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAC3B,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IAC/E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,WAAU,GAAG,WAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EACX,WAAW,CAAC,MAAM,EAAE,WAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAG9C,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,WAAU,CAAC;IACrC,IAAI,GAAG,GAAG,CAAC;IACX,MAAO,WAAU,GAAG,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACrC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,WAAU,CAAC,GAAG,GAAG;IAG1C,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAC1B,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,QAAQ,EAAE;IACjE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAA;CACpB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC,CAAA;CAC9C;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;CAC9C;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,CAAA,AAAC,IAAI,CAAC,MAAM,CAAC,GAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA,GACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,AAAC,CAAA;CACnC;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,GAAG,SAAS,GAC7B,CAAA,AAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,AAAC,CAAA;CACpB;AAED,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,MAAM,EAAE;IACtF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,EAAE,GAAG,KAAK,GACd,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;IAE1B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,GAAG,CAAC,IAAI,EAAE;IAEhB,OAAO,MAAM,CAAC,EAAE,CAAC,GAAI,CAAA,MAAM,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,AAAC,CAAA;CAC/C,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,MAAM,EAAE;IACtF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC;IAEhB,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GACjC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI;IAEN,OAAO,AAAC,CAAA,MAAM,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,GAAI,MAAM,CAAC,EAAE,CAAC,CAAA;CAC/C,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IAC7E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,WAAU,GAAG,WAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,WAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAE3D,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,MAAO,EAAE,CAAC,GAAG,WAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACvC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;IAE/B,GAAG,IAAI,IAAI;IAEX,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,WAAU,CAAC;IAElD,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IAC7E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,WAAU,GAAG,WAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,WAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAE3D,IAAI,CAAC,GAAG,WAAU;IAClB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;IAC5B,MAAO,CAAC,GAAG,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAC5B,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG;IAEjC,GAAG,IAAI,IAAI;IAEX,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,WAAU,CAAC;IAElD,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,MAAM,EAAE,QAAQ,EAAE;IAC/D,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,IAAI,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA,AAAC,EAAE,OAAQ,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,OAAQ,AAAC,CAAA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,GAAI,EAAE,CAAC;CACxC;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC;IAClD,OAAO,AAAC,GAAG,GAAG,MAAM,GAAI,GAAG,GAAG,UAAU,GAAG,GAAG,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC;IAClD,OAAO,AAAC,GAAG,GAAG,MAAM,GAAI,GAAG,GAAG,UAAU,GAAG,GAAG,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,GACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,AAAC,CAAA;CACrB;AAED,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,kBAAkB,CAAC,SAAS,cAAc,CAAE,MAAM,EAAE;IACpF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAC1B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAM,GACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAO,GACzB,CAAA,IAAI,IAAI,EAAE,CAAE,WAAW;IAAb,CAAA,AAAC;IAEd,OAAO,AAAC,CAAA,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,GAC/B,MAAM,CAAC,KAAK,GACZ,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA;CAC5B,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,kBAAkB,CAAC,SAAS,cAAc,CAAE,MAAM,EAAE;IACpF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,GAAG,GAAG,AAAC,CAAA,KAAK,IAAI,EAAE,CAAA,GACtB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC;IAEhB,OAAO,AAAC,CAAA,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,GAC/B,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAC/B,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,CAAA;CACR,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAChD;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAChD;AAED,SAAS,QAAQ,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAA;IAC7F,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE,MAAM,IAAI,UAAU,CAAC,mCAAmC,CAAC,CAAA;IACzF,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;CAC1E;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAC5B,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IACxF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,WAAU,GAAG,WAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,WAAU,CAAC,GAAG,CAAC;QAChD,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;KACvD;IAED,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI;IAC3B,MAAO,EAAE,CAAC,GAAG,WAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACvC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,KAAK,GAAG,GAAG,GAAI,IAAI;IAGzC,OAAO,MAAM,GAAG,WAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAC5B,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IACxF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,WAAU,GAAG,WAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,WAAU,CAAC,GAAG,CAAC;QAChD,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;KACvD;IAED,IAAI,CAAC,GAAG,WAAU,GAAG,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;IAC/B,MAAO,EAAE,CAAC,IAAI,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,KAAK,GAAG,GAAG,GAAI,IAAI;IAGzC,OAAO,MAAM,GAAG,WAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAC3B,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC1E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACxD,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9D,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9D,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,SAAS,cAAc,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;IACrD,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAE3C,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3C,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,OAAO,MAAM,CAAA;CACd;AAED,SAAS,cAAc,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;IACrD,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAE3C,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3C,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE;IAChB,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,SAAS,gBAAgB,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACnG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACpF,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,SAAS,gBAAgB,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACnG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACpF,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IACtF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,AAAC,CAAC,GAAG,WAAU,GAAI,CAAC,CAAC;QAE/C,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;KAC7D;IAED,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI;IAC3B,MAAO,EAAE,CAAC,GAAG,WAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAAE;QACzC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EACtD,GAAG,GAAG,CAAC;QAET,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,CAAA,AAAC,KAAK,GAAG,GAAG,IAAK,CAAC,CAAA,GAAI,GAAG,GAAG,IAAI;KACrD;IAED,OAAO,MAAM,GAAG,WAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,QAAQ,EAAE;IACtF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,AAAC,CAAC,GAAG,WAAU,GAAI,CAAC,CAAC;QAE/C,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAU,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;KAC7D;IAED,IAAI,CAAC,GAAG,WAAU,GAAG,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;IAC/B,MAAO,EAAE,CAAC,IAAI,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAAE;QACjC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EACtD,GAAG,GAAG,CAAC;QAET,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,CAAA,AAAC,KAAK,GAAG,GAAG,IAAK,CAAC,CAAA,GAAI,GAAG,GAAG,IAAI;KACrD;IAED,OAAO,MAAM,GAAG,WAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxE,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAK,CAAC;IAC5D,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC;IACvC,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAO,CAAC;IAChE,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAO,CAAC;IAChE,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC;IACxE,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC;IACxE,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,GAAG,KAAK,GAAG,CAAC;IAC7C,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACjG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACxG,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACjG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACxG,CAAC;AAEF,SAAS,YAAY,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACxD,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IACzE,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;CAC3D;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE;IAC/D,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EACX,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,sBAAsB,EAAE,wCAAuB,CAAC;IAEtF,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;IACtD,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;CACvD;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;CACxD;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE;IAChE,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EACX,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,uBAAuB,EAAE,sTAAwB,CAAC;IAExF,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;IACtD,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;CACxD;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;CACzD;AAED,4EAA4E;AAC5E,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE;IACtE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAA;IAChF,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC;IACrB,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM;IACxC,IAAI,WAAW,IAAI,MAAM,CAAC,MAAM,EAAE,WAAW,GAAG,MAAM,CAAC,MAAM;IAC7D,IAAI,CAAC,WAAW,EAAE,WAAW,GAAG,CAAC;IACjC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,EAAE,GAAG,GAAG,KAAK;IAEvC,2BAA2B;IAC3B,IAAI,GAAG,KAAK,KAAK,EAAE,OAAO,CAAC,CAAA;IAC3B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;IAEtD,yBAAyB;IACzB,IAAI,WAAW,GAAG,CAAC,EACjB,MAAM,IAAI,UAAU,CAAC,2BAA2B,CAAC,CAAA;IAEnD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IACjF,IAAI,GAAG,GAAG,CAAC,EAAE,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAA;IAE5D,cAAc;IACd,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM;IACxC,IAAI,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,GAAG,KAAK,EAC3C,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,KAAK;IAG3C,MAAM,GAAG,GAAG,GAAG,GAAG,KAAK;IAEvB,IAAI,IAAI,KAAK,MAAM,IAAI,OAAO,UAAU,CAAC,SAAS,CAAC,UAAU,KAAK,UAAU,EAC1E,iDAAiD;IACjD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC;SAExC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAC3B,MAAM,EACN,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,EACzB,WAAW,CACZ;IAGH,OAAO,GAAG,CAAA;CACX;AAED,SAAS;AACT,0CAA0C;AAC1C,0CAA0C;AAC1C,sDAAsD;AACtD,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;IAChE,uBAAuB;IACvB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,QAAQ,GAAG,KAAK;YAChB,KAAK,GAAG,CAAC;YACT,GAAG,GAAG,IAAI,CAAC,MAAM;SAClB,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAClC,QAAQ,GAAG,GAAG;YACd,GAAG,GAAG,IAAI,CAAC,MAAM;SAClB;QACD,IAAI,QAAQ,KAAK,SAAS,IAAI,OAAO,QAAQ,KAAK,QAAQ,EACxD,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAA;QAElD,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAC9D,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;QAEtD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9B,IAAI,AAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,GAAG,GAAG,IAClC,QAAQ,KAAK,QAAQ,EACvB,uEAAuE;YACvE,GAAG,GAAG,IAAI;SAEb;KACF,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAChC,GAAG,GAAG,GAAG,GAAG,GAAG;SACV,IAAI,OAAO,GAAG,KAAK,SAAS,EACjC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IAGnB,qEAAqE;IACrE,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,EACvD,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAG5C,IAAI,GAAG,IAAI,KAAK,EACd,OAAO,IAAI,CAAA;IAGb,KAAK,GAAG,KAAK,KAAK,CAAC;IACnB,GAAG,GAAG,GAAG,KAAK,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,CAAC;IAEjD,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;IAEjB,IAAI,CAAC;IACL,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,IAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG;SAEV;QACL,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,GAC9B,GAAG,GACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM;QACxB,IAAI,GAAG,KAAK,CAAC,EACX,MAAM,IAAI,SAAS,CAAC,aAAa,GAAG,GAAG,GACrC,mCAAmC,CAAC,CAAA;QAExC,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE,CAAC,CAC9B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;KAEnC;IAED,OAAO,IAAI,CAAA;CACZ;AAED,gBAAgB;AAChB,gBAAgB;AAEhB,+DAA+D;AAC/D,MAAM,MAAM,GAAG,EAAE;AACjB,SAAS,CAAC,CAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE;IACjC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,SAAS,SAAS,IAAI;QACxC,aAAe;YACb,KAAK,EAAE;YAEP,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;gBACrC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC;gBACxC,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,IAAI;aACnB,CAAC;YAEF,mEAAmE;YACnE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;YACnC,0EAA0E;YAC1E,iBAAiB;YACjB,IAAI,CAAC,KAAK,CAAC,4CAA4C;;YACvD,qCAAqC;YACrC,OAAO,IAAI,CAAC,IAAI;SACjB;QAED,IAAI,IAAI,GAAI;YACV,OAAO,GAAG,CAAA;SACX;QAED,IAAI,IAAI,CAAE,KAAK,EAAE;YACf,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;gBAClC,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK;gBACL,QAAQ,EAAE,IAAI;aACf,CAAC;SACH;QAED,QAAQ,GAAI;YACV,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;SAChD;KACF;CACF;AAED,CAAC,CAAC,0BAA0B,EAC1B,SAAU,IAAI,EAAE;IACd,IAAI,IAAI,EACN,OAAO,CAAC,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAA;IAG9C,OAAO,gDAAgD,CAAA;CACxD,EAAE,UAAU,CAAC;AAChB,CAAC,CAAC,sBAAsB,EACtB,SAAU,IAAI,EAAE,MAAM,EAAE;IACtB,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,iDAAiD,EAAE,OAAO,MAAM,CAAC,CAAC,CAAA;CACvF,EAAE,SAAS,CAAC;AACf,CAAC,CAAC,kBAAkB,EAClB,SAAU,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IAC3B,IAAI,GAAG,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,kBAAkB,CAAC;IAClD,IAAI,QAAQ,GAAG,KAAK;IACpB,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,EACtD,QAAQ,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC1C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QACpC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;QACxB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,CAAE,CAAA,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,AAAC,EACvE,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC;QAE5C,QAAQ,IAAI,GAAG;KAChB;IACD,GAAG,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnD,OAAO,GAAG,CAAA;CACX,EAAE,UAAU,CAAC;AAEhB,SAAS,qBAAqB,CAAE,GAAG,EAAE;IACnC,IAAI,GAAG,GAAG,EAAE;IACZ,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM;IAClB,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;IACpC,MAAO,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAC3B,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAEvC,OAAO,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;CAClC;AAED,kBAAkB;AAClB,kBAAkB;AAElB,SAAS,WAAW,CAAE,GAAG,EAAE,MAAM,EAAE,WAAU,EAAE;IAC7C,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,MAAM,GAAG,WAAU,CAAC,KAAK,SAAS,EACrE,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAI,CAAA,WAAU,GAAG,CAAC,CAAA,AAAC,CAAC;CAErD;AAED,SAAS,UAAU,CAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,YAAU,EAAE;IAC7D,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE;QAC9B,MAAM,CAAC,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE;QAC5C,IAAI,KAAK;QACT,IAAI,YAAU,GAAG,CAAC;YAChB,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,EAChC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA,YAAU,GAAG,CAAC,CAAA,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAE7D,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA,YAAU,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,GAC5D,CAAC,EAAE,AAAC,CAAA,YAAU,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;eAG3C,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3C,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;KACzD;IACD,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,YAAU,CAAC;CACrC;AAED,SAAS,cAAc,CAAE,KAAK,EAAE,IAAI,EAAE;IACpC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC3B,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;CAE/D;AAED,SAAS,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;QAC/B,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC;QAC3B,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC,CAAA;KACzE;IAED,IAAI,MAAM,GAAG,CAAC,EACZ,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,CAAA;IAG7C,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,QAAQ,EAChB,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,EACrC,KAAK,CAAC,CAAA;CACzC;AAED,mBAAmB;AACnB,mBAAmB;AAEnB,MAAM,iBAAiB,sBAAsB;AAE7C,SAAS,WAAW,CAAE,GAAG,EAAE;IACzB,uDAAuD;IACvD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,wFAAwF;IACxF,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;IAC/C,8CAA8C;IAC9C,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE,CAAA;IAC7B,uFAAuF;IACvF,MAAO,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CACzB,GAAG,GAAG,GAAG,GAAG,GAAG;IAEjB,OAAO,GAAG,CAAA;CACX;AAED,SAAS,WAAW,CAAE,MAAM,EAAE,KAAK,EAAE;IACnC,KAAK,GAAG,KAAK,IAAI,QAAQ;IACzB,IAAI,SAAS;IACb,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;IAC5B,IAAI,aAAa,GAAG,IAAI;IACxB,MAAM,KAAK,GAAG,EAAE;IAEhB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAE;QAC/B,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QAEhC,yBAAyB;QACzB,IAAI,SAAS,GAAG,MAAM,IAAI,SAAS,GAAG,MAAM,EAAE;YAC5C,uBAAuB;YACvB,IAAI,CAAC,aAAa,EAAE;gBAClB,cAAc;gBACd,IAAI,SAAS,GAAG,MAAM,EAAE;oBACtB,mBAAmB;oBACnB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;oBACnD,SAAQ;iBACT,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE;oBAC3B,gBAAgB;oBAChB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;oBACnD,SAAQ;iBACT;gBAED,aAAa;gBACb,aAAa,GAAG,SAAS;gBAEzB,SAAQ;aACT;YAED,mBAAmB;YACnB,IAAI,SAAS,GAAG,MAAM,EAAE;gBACtB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;gBACnD,aAAa,GAAG,SAAS;gBACzB,SAAQ;aACT;YAED,uBAAuB;YACvB,SAAS,GAAG,AAAC,CAAA,aAAa,GAAG,MAAM,IAAI,EAAE,GAAG,SAAS,GAAG,MAAM,CAAA,GAAI,OAAO;SAC1E,MAAM,IAAI,aAAa,EACtB,2CAA2C;QAC3C;YAAA,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;SAAA,AACpD;QAED,aAAa,GAAG,IAAI;QAEpB,cAAc;QACd,IAAI,SAAS,GAAG,IAAI,EAAE;YACpB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;SACtB,MAAM,IAAI,SAAS,GAAG,KAAK,EAAE;YAC5B,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CACR,SAAS,IAAI,GAAG,GAAG,IAAI,EACvB,SAAS,GAAG,IAAI,GAAG,IAAI,CACxB;SACF,MAAM,IAAI,SAAS,GAAG,OAAO,EAAE;YAC9B,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CACR,SAAS,IAAI,GAAG,GAAG,IAAI,EACvB,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9B,SAAS,GAAG,IAAI,GAAG,IAAI,CACxB;SACF,MAAM,IAAI,SAAS,GAAG,QAAQ,EAAE;YAC/B,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CACR,SAAS,IAAI,IAAI,GAAG,IAAI,EACxB,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9B,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9B,SAAS,GAAG,IAAI,GAAG,IAAI,CACxB;SACF,MACC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;KAExC;IAED,OAAO,KAAK,CAAA;CACb;AAED,SAAS,YAAY,CAAE,GAAG,EAAE;IAC1B,MAAM,SAAS,GAAG,EAAE;IACpB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CACjC,sDAAsD;IACtD,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAE1C,OAAO,SAAS,CAAA;CACjB;AAED,SAAS,cAAc,CAAE,GAAG,EAAE,KAAK,EAAE;IACnC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;IACb,MAAM,SAAS,GAAG,EAAE;IACpB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;QACnC,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;QAE3B,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACrB,EAAE,GAAG,CAAC,IAAI,CAAC;QACX,EAAE,GAAG,CAAC,GAAG,GAAG;QACZ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;QAClB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;KACnB;IAED,OAAO,SAAS,CAAA;CACjB;AAED,SAAS,aAAa,CAAE,GAAG,EAAE;IAC3B,OAAO,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA;CAC5C;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE;IAC7C,IAAI,CAAC;IACL,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAE;QAC3B,IAAI,AAAC,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,MAAM,IAAM,CAAC,IAAI,GAAG,CAAC,MAAM,AAAC,EAAE,MAAK;QAC1D,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;KACzB;IACD,OAAO,CAAC,CAAA;CACT;AAED,mFAAmF;AACnF,qEAAqE;AACrE,mDAAmD;AACnD,SAAS,UAAU,CAAE,GAAG,EAAE,IAAI,EAAE;IAC9B,OAAO,GAAG,YAAY,IAAI,IACvB,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,IACrE,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,AAAC,CAAA;CACxC;AACD,SAAS,WAAW,CAAE,GAAG,EAAE;IACzB,mBAAmB;IACnB,OAAO,GAAG,KAAK,GAAG,CAAC,sCAAsC;IAAvC,CAAA;CACnB;AAED,4CAA4C;AAC5C,mDAAmD;AACnD,MAAM,mBAAmB,GAAG,AAAC,WAAY;IACvC,MAAM,QAAQ,GAAG,kBAAkB;IACnC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;IAC5B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAE;QAC3B,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE;QAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CACzB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;KAE7C;IACD,OAAO,KAAK,CAAA;CACb,EAAG;AAEJ,yDAAyD;AACzD,SAAS,kBAAkB,CAAE,EAAE,EAAE;IAC/B,OAAO,OAAO,MAAM,KAAK,WAAW,GAAG,sBAAsB,GAAG,EAAE,CAAA;CACnE;AAED,SAAS,sBAAsB,GAAI;IACjC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAA;CACxC;;;ACzjED,YAAY;AAEZ,OAAO,CAAC,UAAU,GAAG,UAAU;AAC/B,OAAO,CAAC,WAAW,GAAG,WAAW;AACjC,OAAO,CAAC,aAAa,GAAG,aAAa;AAErC,IAAI,MAAM,GAAG,EAAE;AACf,IAAI,SAAS,GAAG,EAAE;AAClB,IAAI,GAAG,GAAG,OAAO,UAAU,KAAK,WAAW,GAAG,UAAU,GAAG,KAAK;AAEhE,IAAI,IAAI,GAAG,kEAAkE;AAC7E,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAE;IAC/C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACnB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;CAClC;AAED,6DAA6D;AAC7D,6DAA6D;AAC7D,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACjC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AAEjC,SAAS,OAAO,CAAE,GAAG,EAAE;IACrB,IAAI,IAAG,GAAG,GAAG,CAAC,MAAM;IAEpB,IAAI,IAAG,GAAG,CAAC,GAAG,CAAC,EACb,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAA;IAGnE,yDAAyD;IACzD,yDAAyD;IACzD,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;IAC/B,IAAI,QAAQ,KAAK,EAAE,EAAE,QAAQ,GAAG,IAAG;IAEnC,IAAI,eAAe,GAAG,QAAQ,KAAK,IAAG,GAClC,CAAC,GACD,CAAC,GAAI,QAAQ,GAAG,CAAC,AAAC;IAEtB,OAAO;QAAC,QAAQ;QAAE,eAAe;KAAC,CAAA;CACnC;AAED,4DAA4D;AAC5D,SAAS,UAAU,CAAE,GAAG,EAAE;IACxB,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;IACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IACtB,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7B,OAAO,AAAE,CAAA,QAAQ,GAAG,eAAe,CAAA,GAAI,CAAC,GAAG,CAAC,GAAI,eAAe,CAAA;CAChE;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,QAAQ,EAAE,eAAe,EAAE;IACpD,OAAO,AAAE,CAAA,QAAQ,GAAG,eAAe,CAAA,GAAI,CAAC,GAAG,CAAC,GAAI,eAAe,CAAA;CAChE;AAED,SAAS,WAAW,CAAE,GAAG,EAAE;IACzB,IAAI,GAAG;IACP,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;IACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IACtB,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC;IAE7B,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;IAE9D,IAAI,OAAO,GAAG,CAAC;IAEf,sEAAsE;IACtE,IAAI,IAAG,GAAG,eAAe,GAAG,CAAC,GACzB,QAAQ,GAAG,CAAC,GACZ,QAAQ;IAEZ,IAAI,EAAC;IACL,IAAK,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,IAAG,EAAE,EAAC,IAAI,CAAC,CAAE;QAC3B,GAAG,GACD,AAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,IAAI,EAAE,GAClC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GACtC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GACtC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC;QAClC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,AAAC,GAAG,IAAI,EAAE,GAAI,IAAI;QACnC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI;QAClC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI;KAC5B;IAED,IAAI,eAAe,KAAK,CAAC,EAAE;QACzB,GAAG,GACD,AAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,GACjC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,AAAC;QACzC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI;KAC5B;IAED,IAAI,eAAe,KAAK,CAAC,EAAE;QACzB,GAAG,GACD,AAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,IAAI,EAAE,GAClC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GACrC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,AAAC;QACzC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI;QAClC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI;KAC5B;IAED,OAAO,GAAG,CAAA;CACX;AAED,SAAS,eAAe,CAAE,GAAG,EAAE;IAC7B,OAAO,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAC7B,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GACxB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GACvB,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA;CACrB;AAED,SAAS,WAAW,CAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IACvC,IAAI,GAAG;IACP,IAAI,MAAM,GAAG,EAAE;IACf,IAAK,IAAI,EAAC,GAAG,KAAK,EAAE,EAAC,GAAG,GAAG,EAAE,EAAC,IAAI,CAAC,CAAE;QACnC,GAAG,GACD,AAAC,CAAA,AAAC,KAAK,CAAC,EAAC,CAAC,IAAI,EAAE,GAAI,QAAQ,CAAA,GAC3B,CAAA,AAAC,KAAK,CAAC,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAI,MAAM,CAAA,GAC5B,CAAA,KAAK,CAAC,EAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAA,AAAC;QACvB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KAClC;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;CACvB;AAED,SAAS,aAAa,CAAE,KAAK,EAAE;IAC7B,IAAI,GAAG;IACP,IAAI,IAAG,GAAG,KAAK,CAAC,MAAM;IACtB,IAAI,UAAU,GAAG,IAAG,GAAG,CAAC,CAAC,sCAAsC;IAAvC;IACxB,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,cAAc,GAAG,KAAK,CAAC,wBAAwB;IAAzB;IAE1B,+EAA+E;IAC/E,IAAK,IAAI,EAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAG,GAAG,UAAU,EAAE,EAAC,GAAG,IAAI,EAAE,EAAC,IAAI,cAAc,CACpE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAC,EAAE,AAAC,EAAC,GAAG,cAAc,GAAI,IAAI,GAAG,IAAI,GAAI,EAAC,GAAG,cAAc,AAAC,CAAC,CAAC;IAG9F,sEAAsE;IACtE,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,GAAG,GAAG,KAAK,CAAC,IAAG,GAAG,CAAC,CAAC;QACpB,KAAK,CAAC,IAAI,CACR,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAChB,MAAM,CAAC,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI,CAAC,GACzB,IAAI,CACL;KACF,MAAM,IAAI,UAAU,KAAK,CAAC,EAAE;QAC3B,GAAG,GAAG,AAAC,CAAA,KAAK,CAAC,IAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA,GAAI,KAAK,CAAC,IAAG,GAAG,CAAC,CAAC;QAC5C,KAAK,CAAC,IAAI,CACR,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC,GACjB,MAAM,CAAC,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI,CAAC,GACzB,MAAM,CAAC,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI,CAAC,GACzB,GAAG,CACJ;KACF;IAED,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;CACtB;;;ACrJD,yFAAyF,CACzF,OAAO,CAAC,IAAI,GAAG,SAAU,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;IAC3D,IAAI,CAAC,EAAE,CAAC;IACR,IAAI,IAAI,GAAG,AAAC,MAAM,GAAG,CAAC,GAAI,IAAI,GAAG,CAAC;IAClC,IAAI,IAAI,GAAG,AAAC,CAAA,CAAC,IAAI,IAAI,CAAA,GAAI,CAAC;IAC1B,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC;IACrB,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,CAAC,GAAG,IAAI,GAAI,MAAM,GAAG,CAAC,GAAI,CAAC;IAC/B,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC;IACrB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAE1B,CAAC,IAAI,CAAC;IAEN,CAAC,GAAG,CAAC,GAAI,AAAC,CAAA,CAAC,IAAK,CAAC,KAAK,AAAC,CAAA,GAAI,CAAC,AAAC;IAC7B,CAAC,KAAM,CAAC,KAAK,AAAC;IACd,KAAK,IAAI,IAAI;IACb,MAAO,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,AAAC,CAAC,GAAG,GAAG,GAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;IAExE,CAAC,GAAG,CAAC,GAAI,AAAC,CAAA,CAAC,IAAK,CAAC,KAAK,AAAC,CAAA,GAAI,CAAC,AAAC;IAC7B,CAAC,KAAM,CAAC,KAAK,AAAC;IACd,KAAK,IAAI,IAAI;IACb,MAAO,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,AAAC,CAAC,GAAG,GAAG,GAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;IAExE,IAAI,CAAC,KAAK,CAAC,EACT,CAAC,GAAG,CAAC,GAAG,KAAK;SACR,IAAI,CAAC,KAAK,IAAI,EACnB,OAAO,CAAC,GAAG,GAAG,GAAI,AAAC,CAAA,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA,GAAI,QAAQ,AAAC,CAAA;SACrC;QACL,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;QACzB,CAAC,GAAG,CAAC,GAAG,KAAK;KACd;IACD,OAAO,AAAC,CAAA,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;CAChD;AAED,OAAO,CAAC,KAAK,GAAG,SAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;IACnE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IACX,IAAI,IAAI,GAAG,AAAC,MAAM,GAAG,CAAC,GAAI,IAAI,GAAG,CAAC;IAClC,IAAI,IAAI,GAAG,AAAC,CAAA,CAAC,IAAI,IAAI,CAAA,GAAI,CAAC;IAC1B,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC;IACrB,IAAI,EAAE,GAAI,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;IAChE,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAI,MAAM,GAAG,CAAC,AAAC;IAC/B,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE;IACrB,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,IAAK,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,AAAC,GAAG,CAAC,GAAG,CAAC;IAE3D,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAEvB,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,QAAQ,EAAE;QACtC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QACxB,CAAC,GAAG,IAAI;KACT,MAAM;QACL,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QAC1C,IAAI,KAAK,GAAI,CAAA,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,GAAI,CAAC,EAAE;YACrC,CAAC,EAAE;YACH,CAAC,IAAI,CAAC;SACP;QACD,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,EAChB,KAAK,IAAI,EAAE,GAAG,CAAC;aAEf,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QAEtC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;YAClB,CAAC,EAAE;YACH,CAAC,IAAI,CAAC;SACP;QAED,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE;YACrB,CAAC,GAAG,CAAC;YACL,CAAC,GAAG,IAAI;SACT,MAAM,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE;YACzB,CAAC,GAAG,AAAC,CAAA,AAAC,KAAK,GAAG,CAAC,GAAI,CAAC,CAAA,GAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;YACzC,CAAC,GAAG,CAAC,GAAG,KAAK;SACd,MAAM;YACL,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;YACtD,CAAC,GAAG,CAAC;SACN;KACF;IAED,MAAO,IAAI,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC;IAE5E,CAAC,GAAG,AAAC,CAAC,IAAI,IAAI,GAAI,CAAC;IACnB,IAAI,IAAI,IAAI;IACZ,MAAO,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC;IAE3E,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG;CAClC;;;ACpFD;;AAEA,uCAAkC;;AAFlC,YAAY,CAAC;AAIb,MAAM,kBAAkB;IACtB,aAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAED;;;;;;;KAOG,CACH,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,SAAS;YACT,QAAQ;YACR,WAAW,EAAE,OAAO,GAAG,OAAO,CAAC,WAAW,GAAG,KAAK;YAClD,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI;SAC1C,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KACjC;IAED;;;;;;KAMG,CACH,KAAK,CAAC,EAAE,EAAE;QACR,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;KAE5B;IAED;;;;KAIG,CACH,KAAK,GAAG;QACN,IAAI,IAAI,CAAC,QAAQ,EACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KAEtB;IAED;;;;;;;;;KASG,CACH,OAAO,CAAC,EAAE,EAAE;QACV,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,cAAc,CAAC,CAAC,EAAE;YACtD,IAAI,CAAC,KAAK,IAAI,EACZ,EAAE,CAAC,CAAC,CAAC,CAAC;SAET,CAAC,CAAC;KACJ;CACF;kBAEc,kBAAkB,CAAC;;;ACtElC;;AAEA,oDAA+C;;AAC/C,kDAA6C;;AAC7C,8CAA4C;;AAC5C,4DAAuD;;AACvD,wDAAmD;;AACnD,oDAA+C;;AAP/C,YAAY,CAAC;AASb;;;;;;GAMG,CACH,SAAS,4BAA4B,CAAC,MAAM,EAAE;IAC5C,IAAI,MAAM,CAAC,WAAW,EACpB,MAAM,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;IAGxC,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,EACxC,MAAM,IAAI,CAAA,GAAA,+BAAa,CAAA,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;CAEzC;AASc,SAAS,eAAe,CAAC,MAAM,EAAE;IAC9C,4BAA4B,CAAC,MAAM,CAAC,CAAC;IAErC,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAEnD,yBAAyB;IACzB,MAAM,CAAC,IAAI,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC,IAAI,CAC9B,MAAM,EACN,MAAM,CAAC,gBAAgB,CACxB,CAAC;IAEF,IAAI;QAAC,MAAM;QAAE,KAAK;QAAE,OAAO;KAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,EACxD,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;IAG5E,MAAM,OAAO,GAAG,CAAA,GAAA,0BAAQ,CAAA,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,OAAO,CAAC,AAAC;IAExE,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,mBAAmB,CAAC,QAAQ,EAAE;QACjE,4BAA4B,CAAC,MAAM,CAAC,CAAC;QAErC,0BAA0B;QAC1B,QAAQ,CAAC,IAAI,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC,IAAI,CAChC,MAAM,EACN,MAAM,CAAC,iBAAiB,EACxB,QAAQ,CACT,CAAC;QAEF,QAAQ,CAAC,OAAO,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEvD,OAAO,QAAQ,CAAC;KACjB,EAAE,SAAS,kBAAkB,CAAC,MAAM,EAAE;QACrC,IAAI,CAAC,CAAA,GAAA,0BAAQ,CAAA,CAAC,MAAM,CAAC,EAAE;YACrB,4BAA4B,CAAC,MAAM,CAAC,CAAC;YAErC,0BAA0B;YAC1B,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC7B,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC,IAAI,CACvC,MAAM,EACN,MAAM,CAAC,iBAAiB,EACxB,MAAM,CAAC,QAAQ,CAChB,CAAC;gBACF,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACtE;SACF;QAED,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC/B,CAAC,CAAC;CACJ;kBA/CuB,eAAe;;;ACjCvC;;AAEA,uCAAkC;;AAClC,8CAA4C;;AAC5C,wDAAmD;;AAJnD,YAAY,CAAC;AAcE,SAAS,aAAa,CAAC,GAAG,EAAE,QAAQ,EAAE;IACnD,MAAM,MAAM,GAAG,IAAI,IAAI,CAAA,GAAA,uBAAQ,CAAA,AAAC;IAChC,MAAM,OAAO,GAAG,QAAQ,IAAI,MAAM,AAAC;IACnC,MAAM,OAAO,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,AAAC;IACnD,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,AAAC;IAExB,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,SAAS,CAAC,EAAE,EAAE;QACxC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,EAAE,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC;KAC3F,CAAC,CAAC;IAEH,OAAO,CAAC,SAAS,EAAE,CAAC;IAEpB,OAAO,IAAI,CAAC;CACb;kBAbuB,aAAa;;;ACdrC;;AAEA,qCAAgC;;AAChC,oDAA+C;;AAC/C,kDAAqD;;AACrD,uDAAkD;;AAClD,mEAA8D;;AAC9D,8CAA4C;;AAC5C,+DAA0D;;AAR1D,YAAY,CAAC;AAUb,MAAM,oBAAoB,GAAG;IAC3B,cAAc,EAAE,SAAS;CAC1B,AAAC;AAEF;;;;;;;;;GASG,CACH,SAAS,eAAe,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE;IAClD,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAC1B,IAAI;QACD,CAAA,MAAM,IAAI,IAAI,CAAC,KAAK,CAAA,CAAE,QAAQ,CAAC,CAAC;QACjC,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7B,CAAC,OAAO,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,IAAI,KAAK,aAAa,EAC1B,MAAM,CAAC,CAAC;KAEX;IAGH,OAAO,AAAC,CAAA,OAAO,IAAI,IAAI,CAAC,SAAS,CAAA,CAAE,QAAQ,CAAC,CAAC;CAC9C;AAED,MAAM,QAAQ,GAAG;IAEf,YAAY,EAAE,CAAA,GAAA,8BAAoB,CAAA;IAElC,OAAO,EAAE;QAAC,KAAK;QAAE,MAAM;KAAC;IAExB,gBAAgB,EAAE;QAAC,SAAS,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE;YAC1D,MAAM,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,IAAI,EAAE,AAAC;YACnD,MAAM,kBAAkB,GAAG,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,EAAE,AAAC;YACxE,MAAM,eAAe,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,AAAC;YAE7C,IAAI,eAAe,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,IAAI,CAAC,EAC3C,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;YAG5B,MAAM,UAAU,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,IAAI,CAAC,AAAC;YAE1C,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,kBAAkB,EACrB,OAAO,IAAI,CAAC;gBAEd,OAAO,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAA,GAAA,gCAAc,CAAA,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;aACzE;YAED,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,IAAI,CAAC,IAC3B,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,IACpB,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,IACpB,CAAA,GAAA,uBAAK,CAAA,CAAC,MAAM,CAAC,IAAI,CAAC,IAClB,CAAA,GAAA,uBAAK,CAAA,CAAC,MAAM,CAAC,IAAI,CAAC,EAElB,OAAO,IAAI,CAAC;YAEd,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAC/B,OAAO,IAAI,CAAC,MAAM,CAAC;YAErB,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBACjC,OAAO,CAAC,cAAc,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;gBACjF,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;aACxB;YAED,IAAI,UAAU,AAAC;YAEf,IAAI,eAAe,EAAE;gBACnB,IAAI,WAAW,CAAC,OAAO,CAAC,mCAAmC,CAAC,GAAG,EAAE,EAC/D,OAAO,CAAA,GAAA,kCAAgB,CAAA,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAGhE,IAAI,AAAC,CAAA,UAAU,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA,IAAK,WAAW,CAAC,OAAO,CAAC,qBAAqB,CAAC,GAAG,EAAE,EAAE;oBAC5F,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,AAAC;oBAEhD,OAAO,CAAA,GAAA,4BAAU,CAAA,CACf,UAAU,GAAG;wBAAC,SAAS,EAAE,IAAI;qBAAC,GAAG,IAAI,EACrC,SAAS,IAAI,IAAI,SAAS,EAAE,EAC5B,IAAI,CAAC,cAAc,CACpB,CAAC;iBACH;aACF;YAED,IAAI,eAAe,IAAI,kBAAkB,EAAG;gBAC1C,OAAO,CAAC,cAAc,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;gBAClD,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC;aAC9B;YAED,OAAO,IAAI,CAAC;SACb;KAAC;IAEF,iBAAiB,EAAE;QAAC,SAAS,iBAAiB,CAAC,IAAI,EAAE;YACnD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,YAAY,AAAC;YAChE,MAAM,iBAAiB,GAAG,YAAY,IAAI,YAAY,CAAC,iBAAiB,AAAC;YACzE,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,KAAK,MAAM,AAAC;YAEnD,IAAI,IAAI,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAK,CAAA,AAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAK,aAAa,CAAA,AAAC,EAAE;gBAChG,MAAM,iBAAiB,GAAG,YAAY,IAAI,YAAY,CAAC,iBAAiB,AAAC;gBACzE,MAAM,iBAAiB,GAAG,CAAC,iBAAiB,IAAI,aAAa,AAAC;gBAE9D,IAAI;oBACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACzB,CAAC,OAAO,CAAC,EAAE;oBACV,IAAI,iBAAiB,EAAE;wBACrB,IAAI,CAAC,CAAC,IAAI,KAAK,aAAa,EAC1B,MAAM,CAAA,GAAA,4BAAU,CAAA,CAAC,IAAI,CAAC,CAAC,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAEnF,MAAM,CAAC,CAAC;qBACT;iBACF;aACF;YAED,OAAO,IAAI,CAAC;SACb;KAAC;IAEF;;;KAGG,CACH,OAAO,EAAE,CAAC;IAEV,cAAc,EAAE,YAAY;IAC5B,cAAc,EAAE,cAAc;IAE9B,gBAAgB,EAAE,EAAE;IACpB,aAAa,EAAE,EAAE;IAEjB,GAAG,EAAE;QACH,QAAQ,EAAE,CAAA,GAAA,uBAAQ,CAAA,CAAC,OAAO,CAAC,QAAQ;QACnC,IAAI,EAAE,CAAA,GAAA,uBAAQ,CAAA,CAAC,OAAO,CAAC,IAAI;KAC5B;IAED,cAAc,EAAE,SAAS,cAAc,CAAC,MAAM,EAAE;QAC9C,OAAO,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC;KACtC;IAED,OAAO,EAAE;QACP,MAAM,EAAE;YACN,QAAQ,EAAE,mCAAmC;SAC9C;KACF;CACF,AAAC;AAEF,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC;IAAC,QAAQ;IAAE,KAAK;IAAE,MAAM;CAAC,EAAE,SAAS,mBAAmB,CAAC,MAAM,EAAE;IAC5E,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;CAC/B,CAAC,CAAC;AAEH,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC;IAAC,MAAM;IAAE,KAAK;IAAE,OAAO;CAAC,EAAE,SAAS,qBAAqB,CAAC,MAAM,EAAE;IAC7E,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;CAC9D,CAAC,CAAC;kBAEY,QAAQ,CAAC;;;ACrKxB;;AAAA,YAAY,CAAC;kBAEE;IACb,iBAAiB,EAAE,IAAI;IACvB,iBAAiB,EAAE,IAAI;IACvB,mBAAmB,EAAE,KAAK;CAC3B,CAAC;;;ACNF;;AAEA,qCAAgC;;AAChC,8CAAyC;;AACzC,8CAA4C;;AAJ5C,YAAY,CAAC;AAME,SAAS,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE;IACtD,OAAO,CAAA,GAAA,4BAAU,CAAA,CAAC,IAAI,EAAE,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC;QAC5E,OAAO,EAAE,SAAS,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;YAC3C,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,MAAM,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC5C,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3C,OAAO,KAAK,CAAC;aACd;YAED,OAAO,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SACtD;KACF,EAAE,OAAO,CAAC,CAAC,CAAC;CACd;kBAXuB,gBAAgB;;;ACNxC;;AAEA,6CAAQ,CAAA,GAAA,uBAAQ,CAAA,CAAY;AAF5B,yCAAuC;;;;ACAvC;;AAAA,gEAA0D;;AAC1D,kDAA4C;;AAC5C,0CAAoC;;AAEpC;;;;;;;;;;;;;;;;GAgBG,CACH,MAAM,oBAAoB,GAAG,AAAC,CAAA,IAAM;IAClC,IAAI,OAAO,AAAC;IACZ,IAAI,OAAO,SAAS,KAAK,WAAW,IAClC,CAAA,AAAC,CAAA,OAAO,GAAG,SAAS,CAAC,OAAO,CAAA,KAAM,aAAa,IAC/C,OAAO,KAAK,cAAc,IAC1B,OAAO,KAAK,IAAI,CAAA,AAAC,EAEjB,OAAO,KAAK,CAAC;IAGf,OAAO,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,QAAQ,KAAK,WAAW,CAAC;CACzE,CAAA,EAAG,AAAC;AAEL;;;;;;;;GAQG,CACF,MAAM,6BAA6B,GAAG,AAAC,CAAA,IAAM;IAC5C,OACE,OAAO,iBAAiB,KAAK,WAAW,IACxC,oCAAoC;IACpC,IAAI,YAAY,iBAAiB,IACjC,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,CACxC;CACH,CAAA,EAAG,AAAC;kBAGU;IACb,SAAS,EAAE,IAAI;IACf,OAAO,EAAE;yBACP,CAAA,GAAA,iCAAe,CAAA;kBACf,CAAA,GAAA,0BAAQ,CAAA;cACR,CAAA,GAAA,sBAAI,CAAA;KACL;IACD,oBAAoB;IACpB,6BAA6B;IAC7B,SAAS,EAAE;QAAC,MAAM;QAAE,OAAO;QAAE,MAAM;QAAE,MAAM;QAAE,KAAK;QAAE,MAAM;KAAC;CAC5D,CAAC;;;AC/DF;;AAEA,iFAA4E;;AAF5E,YAAY,CAAC;kBAGE,OAAO,eAAe,KAAK,WAAW,GAAG,eAAe,GAAG,CAAA,GAAA,sCAAoB,CAAA,CAAC;;;ACH/F;;AAAA,YAAY,CAAC;kBAEE,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC;;;ACFjE;;AAAA,YAAY;kBAEG,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI,GAAG,IAAI,CAAA;;;ACFxD;;AAEA,qCAAgC;;AAFhC,YAAY,CAAC;AAIb;;;;;;GAMG,CACH,SAAS,aAAa,CAAC,IAAI,EAAE;IAC3B,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,kBAAkB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA,KAAK,GAAI;QACxD,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KACtD,CAAC,CAAC;CACJ;AAED;;;;;;GAMG,CACH,SAAS,aAAa,CAAC,GAAG,EAAE;IAC1B,MAAM,GAAG,GAAG,EAAE,AAAC;IACf,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,AAAC;IAC9B,IAAI,CAAC,AAAC;IACN,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,AAAC;IACxB,IAAI,GAAG,AAAC;IACR,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE;QACxB,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACrB;IACD,OAAO,GAAG,CAAC;CACZ;AAED;;;;;;GAMG,CACH,SAAS,cAAc,CAAC,QAAQ,EAAE;IAChC,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;QAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,AAAC;QACzB,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,AAAC;QAC5C,MAAM,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,AAAC;QACpC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAE7D,IAAI,MAAM,EAAE;YACV,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAChC,MAAM,CAAC,IAAI,CAAC,GAAG;gBAAC,MAAM,CAAC,IAAI,CAAC;gBAAE,KAAK;aAAC,CAAC;iBAErC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAGvB,OAAO,CAAC,YAAY,CAAC;SACtB;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAChD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAGpB,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,AAAC;QAE3D,IAAI,MAAM,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EACvC,MAAM,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAG7C,OAAO,CAAC,YAAY,CAAC;KACtB;IAED,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;QACpE,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,CAAA,GAAA,uBAAK,CAAA,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,KAAK,GAAK;YAC5C,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,IAAI,CAAC;CACb;kBAEc,cAAc,CAAC;;;AC3F9B;;AAEA,qCAAgC;;AAChC,2DAAsD;;AAHtD,YAAY,CAAC;AAKb,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,AAAC;AAEvC,SAAS,eAAe,CAAC,MAAM,EAAE;IAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;CACtD;AAED,SAAS,cAAc,CAAC,KAAK,EAAE;IAC7B,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,EAClC,OAAO,KAAK,CAAC;IAGf,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;CACzE;AAED,SAAS,WAAW,CAAC,GAAG,EAAE;IACxB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC;IACnC,MAAM,QAAQ,qCAAqC,AAAC;IACpD,IAAI,KAAK,AAAC;IAEV,MAAQ,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAChC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAG9B,OAAO,MAAM,CAAC;CACf;AAED,MAAM,iBAAiB,GAAG,CAAC,GAAG,GAAK,iCAAiC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,AAAC;AAErF,SAAS,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE;IAC5E,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,MAAM,CAAC,EAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAG1C,IAAI,kBAAkB,EACpB,KAAK,GAAG,MAAM,CAAC;IAGjB,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO;IAEnC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAC,EACxB,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IAGtC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAC,EACxB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAE7B;AAED,SAAS,YAAY,CAAC,MAAM,EAAE;IAC5B,OAAO,MAAM,CAAC,IAAI,EAAE,CACjB,WAAW,EAAE,CAAC,OAAO,oBAAoB,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,GAAK;QAC1D,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC;KACjC,CAAC,CAAC;CACN;AAED,SAAS,cAAc,CAAC,GAAG,EAAE,MAAM,EAAE;IACnC,MAAM,YAAY,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,AAAC;IAErD;QAAC,KAAK;QAAE,KAAK;QAAE,KAAK;KAAC,CAAC,OAAO,CAAC,CAAA,UAAU,GAAI;QAC1C,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,GAAG,YAAY,EAAE;YACpD,KAAK,EAAE,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gBAChC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aAC9D;YACD,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;KACJ,CAAC,CAAC;CACJ;AAED,MAAM,YAAY;IAChB,YAAY,OAAO,CAAE;QACnB,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAC9B;IAED,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE;QACnC,MAAM,IAAI,GAAG,IAAI,AAAC;QAElB,SAAS,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;YAC5C,MAAM,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC,AAAC;YAEzC,IAAI,CAAC,OAAO,EACV,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAG5D,MAAM,GAAG,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,AAAC;YAEzC,IAAG,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,IAAK,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,AAAC,EACxG,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;SAEjD;QAED,MAAM,UAAU,GAAG,CAAC,OAAO,EAAE,QAAQ,GACnC,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,GAAK,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,AAAC;QAEpF,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,MAAM,YAAY,IAAI,CAAC,WAAW,EACnE,UAAU,CAAC,MAAM,EAAE,cAAc,CAAC;aAC7B,IAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAK,CAAA,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAA,IAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,EACxF,UAAU,CAAC,CAAA,GAAA,8BAAY,CAAA,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,CAAC;aAEjD,MAAM,IAAI,IAAI,IAAI,SAAS,CAAC,cAAc,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAG/D,OAAO,IAAI,CAAC;KACb;IAED,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE;QAClB,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAI,MAAM,EAAE;YACV,MAAM,GAAG,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,AAAC;YAExC,IAAI,GAAG,EAAE;gBACP,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,AAAC;gBAExB,IAAI,CAAC,MAAM,EACT,OAAO,KAAK,CAAC;gBAGf,IAAI,MAAM,KAAK,IAAI,EACjB,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;gBAG5B,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,MAAM,CAAC,EAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBAGvC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAC,EACxB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAG5B,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;aAC/D;SACF;KACF;IAED,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE;QACnB,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAI,MAAM,EAAE;YACV,MAAM,GAAG,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,AAAC;YAExC,OAAO,CAAC,CAAE,CAAA,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,IAAK,CAAA,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA,AAAC,CAAA,AAAC,CAAC;SAC5G;QAED,OAAO,KAAK,CAAC;KACd;IAED,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;QACtB,MAAM,IAAI,GAAG,IAAI,AAAC;QAClB,IAAI,OAAO,GAAG,KAAK,AAAC;QAEpB,SAAS,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;YAEnC,IAAI,OAAO,EAAE;gBACX,MAAM,GAAG,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,AAAC;gBAEzC,IAAI,GAAG,IAAK,CAAA,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA,AAAC,EAAE;oBACxE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEjB,OAAO,GAAG,IAAI,CAAC;iBAChB;aACF;SACF;QAED,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,EACvB,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aAE7B,YAAY,CAAC,MAAM,CAAC,CAAC;QAGvB,OAAO,OAAO,CAAC;KAChB;IAED,KAAK,CAAC,OAAO,EAAE;QACb,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;QAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,AAAC;QACpB,IAAI,OAAO,GAAG,KAAK,AAAC;QAEpB,MAAO,CAAC,EAAE,CAAE;YACV,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,AAAC;YACpB,IAAG,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE;gBACpE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,GAAG,IAAI,CAAC;aAChB;SACF;QAED,OAAO,OAAO,CAAC;KAChB;IAED,SAAS,CAAC,MAAM,EAAE;QAChB,MAAM,IAAI,GAAG,IAAI,AAAC;QAClB,MAAM,OAAO,GAAG,EAAE,AAAC;QAEnB,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,GAAK;YACrC,MAAM,GAAG,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,AAAC;YAE3C,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;gBAClC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpB,OAAO;aACR;YAED,MAAM,UAAU,GAAG,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,AAAC;YAEzE,IAAI,UAAU,KAAK,MAAM,EACvB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;YAGtB,IAAI,CAAC,UAAU,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YAEzC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;SAC5B,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;KACb;IAED,MAAM,CAAC,GAAG,OAAO,EAAE;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;KAClD;IAED,MAAM,CAAC,SAAS,EAAE;QAChB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC;QAEhC,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,GAAK;YACrC,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAK,CAAA,GAAG,CAAC,MAAM,CAAC,GAAG,SAAS,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAA,AAAC,CAAC;SAClH,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;KACZ;IAED,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG;QAClB,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;KACzD;IAED,QAAQ,GAAG;QACT,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,GAAK,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjG;IAED,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG;QACzB,OAAO,cAAc,CAAC;KACvB;IAED,OAAO,IAAI,CAAC,KAAK,EAAE;QACjB,OAAO,KAAK,YAAY,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;KACxD;IAED,OAAO,MAAM,CAAC,KAAK,EAAE,GAAG,OAAO,EAAE;QAC/B,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,AAAC;QAEjC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,GAAK,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAElD,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,QAAQ,CAAC,MAAM,EAAE;QACtB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAI,IAAI,CAAC,UAAU,CAAC,GAAG;YACvD,SAAS,EAAE,EAAE;SACd,AAAC,AAAC;QAEH,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,AAAC;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,AAAC;QAEjC,SAAS,cAAc,CAAC,OAAO,EAAE;YAC/B,MAAM,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC,AAAC;YAEzC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBACvB,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBACnC,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;aAC3B;SACF;QAED,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;QAEhF,OAAO,IAAI,CAAC;KACb;CACF;AAED,YAAY,CAAC,QAAQ,CAAC;IAAC,cAAc;IAAE,gBAAgB;IAAE,QAAQ;IAAE,iBAAiB;IAAE,YAAY;IAAE,eAAe;CAAC,CAAC,CAAC;AAEtH,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC5C,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;kBAEnB,YAAY,CAAC;;;AC/R5B;;AAEA,uCAAkC;;AAFlC,YAAY,CAAC;AAIb,uDAAuD;AACvD,6DAA6D;AAC7D,MAAM,iBAAiB,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC;IAC1C,KAAK;IAAE,eAAe;IAAE,gBAAgB;IAAE,cAAc;IAAE,MAAM;IAChE,SAAS;IAAE,MAAM;IAAE,MAAM;IAAE,mBAAmB;IAAE,qBAAqB;IACrE,eAAe;IAAE,UAAU;IAAE,cAAc;IAAE,qBAAqB;IAClE,SAAS;IAAE,aAAa;IAAE,YAAY;CACvC,CAAC,AAAC;AAEH;;;;;;;;;;;;;GAaG,mBACY,CAAA,UAAU,GAAI;IAC3B,MAAM,MAAM,GAAG,EAAE,AAAC;IAClB,IAAI,GAAG,AAAC;IACR,IAAI,GAAG,AAAC;IACR,IAAI,CAAC,AAAC;IAEN,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,MAAM,CAAC,IAAI,EAAE;QACjE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAChD,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAEnC,IAAI,CAAC,GAAG,IAAK,MAAM,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,GAAG,CAAC,AAAC,EACjD,OAAO;QAGT,IAAI,GAAG,KAAK,YAAY;YACtB,IAAI,MAAM,CAAC,GAAG,CAAC,EACb,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAEtB,MAAM,CAAC,GAAG,CAAC,GAAG;gBAAC,GAAG;aAAC,CAAC;eAGtB,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;KAE9D,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;CACf,CAAC;;;ACtDF;;AAAA,YAAY,CAAC;AAEE,SAAS,QAAQ,CAAC,KAAK,EAAE;IACtC,OAAO,CAAC,CAAE,CAAA,KAAK,IAAI,KAAK,CAAC,UAAU,CAAA,AAAC,CAAC;CACtC;kBAFuB,QAAQ;;;ACFhC;;AAEA,oDAA+C;;AAC/C,qCAAgC;;AAHhC,YAAY,CAAC;AAKb;;;;;;;;GAQG,CACH,SAAS,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;IAC/C,6CAA6C;IAC7C,CAAA,GAAA,4BAAU,CAAA,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI,IAAI,GAAG,UAAU,GAAG,OAAO,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACxG,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;CAC7B;AAED,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAA,GAAA,4BAAU,CAAA,EAAE;IACxC,UAAU,EAAE,IAAI;CACjB,CAAC,CAAC;kBAEY,aAAa,CAAC;;;ACxB7B;;AAAA,qCAAgC;;AAChC,kCAAoC;;AACpC,gCAAkC;;AAClC,oDAA+C;;AAE/C,MAAM,aAAa,GAAG;IACpB,IAAI,EAAE,CAAA,GAAA,sBAAW,CAAA;IACjB,GAAG,EAAE,CAAA,GAAA,qBAAU,CAAA;CAChB;AAED,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE,KAAK,GAAK;IAC1C,IAAG,EAAE,EAAE;QACL,IAAI;YACF,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE;gBAAC,KAAK;aAAC,CAAC,CAAC;SAC5C,CAAC,OAAO,CAAC,EAAE;QACV,oCAAoC;SACrC;QACD,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,aAAa,EAAE;YAAC,KAAK;SAAC,CAAC,CAAC;KACnD;CACF,CAAC,CAAC;kBAEY;IACb,UAAU,EAAE,CAAC,QAAQ,GAAK;QACxB,QAAQ,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG;YAAC,QAAQ;SAAC,CAAC;QAE3D,MAAM,EAAC,MAAM,CAAA,EAAC,GAAG,QAAQ,AAAC;QAC1B,IAAI,aAAa,AAAC;QAClB,IAAI,OAAO,AAAC;QAEZ,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAE;YAC/B,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,OAAO,GAAG,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,GAAG,aAAa,EACtG,MAAM;SAET;QAED,IAAI,CAAC,OAAO,EAAE;YACZ,IAAI,OAAO,KAAK,KAAK,EACnB,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAClB,CAAC,QAAQ,EAAE,aAAa,CAAC,oCAAoC,CAAC,EAC9D,iBAAiB,CAClB,CAAC;YAGJ,MAAM,IAAI,KAAK,CACb,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,aAAa,EAAE,aAAa,CAAC,GAC5C,CAAC,SAAS,EAAE,aAAa,CAAC,+BAA+B,CAAC,GAC1D,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC,CAAC,CACvC,CAAC;SACH;QAED,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,OAAO,CAAC,EAC5B,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAC;QAGnD,OAAO,OAAO,CAAC;KAChB;IACD,QAAQ,EAAE,aAAa;CACxB,CAAA;;;AC1DD;;AAEA,uCAAkC;;AAClC,8CAAyC;;AACzC,mDAA8C;;AAC9C,qDAAgD;;AAChD,0DAAqD;;AACrD,mEAA8D;;AAC9D,4DAA+D;;AAC/D,oDAA+C;;AAC/C,4DAAuD;;AACvD,6DAAwD;;AACxD,8CAA4C;;AAC5C,wDAAmD;;AACnD,yDAAoD;;AAdpD,YAAY,CAAC;AAgBb,SAAS,oBAAoB,CAAC,QAAQ,EAAE,gBAAgB,EAAE;IACxD,IAAI,aAAa,GAAG,CAAC,AAAC;IACtB,MAAM,YAAY,GAAG,CAAA,GAAA,6BAAW,CAAA,CAAC,EAAE,EAAE,GAAG,CAAC,AAAC;IAE1C,OAAO,CAAA,CAAC,GAAI;QACV,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,AAAC;QACxB,MAAM,KAAK,GAAG,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,KAAK,GAAG,SAAS,AAAC;QACvD,MAAM,aAAa,GAAG,MAAM,GAAG,aAAa,AAAC;QAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,aAAa,CAAC,AAAC;QACzC,MAAM,OAAO,GAAG,MAAM,IAAI,KAAK,AAAC;QAEhC,aAAa,GAAG,MAAM,CAAC;QAEvB,MAAM,IAAI,GAAG;YACX,MAAM;YACN,KAAK;YACL,QAAQ,EAAE,KAAK,GAAI,MAAM,GAAG,KAAK,GAAI,SAAS;YAC9C,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,SAAS;YAC7B,SAAS,EAAE,IAAI,IAAI,KAAK,IAAI,OAAO,GAAG,AAAC,CAAA,KAAK,GAAG,MAAM,CAAA,GAAI,IAAI,GAAG,SAAS;YACzE,KAAK,EAAE,CAAC;SACT,AAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,UAAU,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC;QAEtD,QAAQ,CAAC,IAAI,CAAC,CAAC;KAChB,CAAC;CACH;AAED,MAAM,qBAAqB,GAAG,OAAO,cAAc,KAAK,WAAW,AAAC;kBAErD,qBAAqB,IAAI,SAAU,MAAM,EAAE;IACxD,OAAO,IAAI,OAAO,CAAC,SAAS,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE;QAC9D,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,AAAC;QAC9B,MAAM,cAAc,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,AAAC;QACrE,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,AAAC;QACzC,IAAI,UAAU,AAAC;QACf,SAAS,IAAI,GAAG;YACd,IAAI,MAAM,CAAC,WAAW,EACpB,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAG7C,IAAI,MAAM,CAAC,MAAM,EACf,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SAE1D;QAED,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,UAAU,CAAC,WAAW,CAAC;YAC/B,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,oBAAoB,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,6BAA6B,EACzE,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;iBAE/D,cAAc,CAAC,cAAc,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC,CAAC,gCAAgC;SAEjG;QAED,IAAI,OAAO,GAAG,IAAI,cAAc,EAAE,AAAC;QAEnC,4BAA4B;QAC5B,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,AAAC;YAC5C,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,AAAC;YAChG,cAAc,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;SACjF;QAED,MAAM,QAAQ,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,AAAC;QAE3D,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAA,GAAA,0BAAQ,CAAA,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,CAAC;QAE5G,gCAAgC;QAChC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAEjC,SAAS,SAAS,GAAG;YACnB,IAAI,CAAC,OAAO,EACV,OAAO;YAET,uBAAuB;YACvB,MAAM,eAAe,GAAG,CAAA,GAAA,8BAAY,CAAA,CAAC,IAAI,CACvC,uBAAuB,IAAI,OAAO,IAAI,OAAO,CAAC,qBAAqB,EAAE,CACtE,AAAC;YACF,MAAM,YAAY,GAAG,CAAC,YAAY,IAAI,YAAY,KAAK,MAAM,IAAI,YAAY,KAAK,MAAM,GACtF,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,QAAQ,AAAC;YAC1C,MAAM,QAAQ,GAAG;gBACf,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,OAAO,EAAE,eAAe;gBACxB,MAAM;gBACN,OAAO;aACR,AAAC;YAEF,CAAA,GAAA,wBAAM,CAAA,CAAC,SAAS,QAAQ,CAAC,KAAK,EAAE;gBAC9B,OAAO,CAAC,KAAK,CAAC,CAAC;gBACf,IAAI,EAAE,CAAC;aACR,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE;gBACvB,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,IAAI,EAAE,CAAC;aACR,EAAE,QAAQ,CAAC,CAAC;YAEb,mBAAmB;YACnB,OAAO,GAAG,IAAI,CAAC;SAChB;QAED,IAAI,WAAW,IAAI,OAAO,EACxB,6BAA6B;QAC7B,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;aAE9B,8CAA8C;QAC9C,OAAO,CAAC,kBAAkB,GAAG,SAAS,UAAU,GAAG;YACjD,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,KAAK,CAAC,EACtC,OAAO;YAGT,qEAAqE;YACrE,6BAA6B;YAC7B,uEAAuE;YACvE,gEAAgE;YAChE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAE,CAAA,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,AAAC,EAC9F,OAAO;YAET,sEAAsE;YACtE,iDAAiD;YACjD,UAAU,CAAC,SAAS,CAAC,CAAC;SACvB,CAAC;QAGJ,4EAA4E;QAC5E,OAAO,CAAC,OAAO,GAAG,SAAS,WAAW,GAAG;YACvC,IAAI,CAAC,OAAO,EACV,OAAO;YAGT,MAAM,CAAC,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,iBAAiB,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;YAEpF,mBAAmB;YACnB,OAAO,GAAG,IAAI,CAAC;SAChB,CAAC;QAEF,kCAAkC;QAClC,OAAO,CAAC,OAAO,GAAG,SAAS,WAAW,GAAG;YACvC,gDAAgD;YAChD,mDAAmD;YACnD,MAAM,CAAC,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,eAAe,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;YAEjF,mBAAmB;YACnB,OAAO,GAAG,IAAI,CAAC;SAChB,CAAC;QAEF,iBAAiB;QACjB,OAAO,CAAC,SAAS,GAAG,SAAS,aAAa,GAAG;YAC3C,IAAI,mBAAmB,GAAG,MAAM,CAAC,OAAO,GAAG,aAAa,GAAG,MAAM,CAAC,OAAO,GAAG,aAAa,GAAG,kBAAkB,AAAC;YAC/G,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,CAAA,GAAA,8BAAoB,CAAA,AAAC;YACjE,IAAI,MAAM,CAAC,mBAAmB,EAC5B,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;YAEnD,MAAM,CAAC,IAAI,CAAA,GAAA,4BAAU,CAAA,CACnB,mBAAmB,EACnB,YAAY,CAAC,mBAAmB,GAAG,CAAA,GAAA,4BAAU,CAAA,CAAC,SAAS,GAAG,CAAA,GAAA,4BAAU,CAAA,CAAC,YAAY,EACjF,MAAM,EACN,OAAO,CAAC,CAAC,CAAC;YAEZ,mBAAmB;YACnB,OAAO,GAAG,IAAI,CAAC;SAChB,CAAC;QAEF,kBAAkB;QAClB,kEAAkE;QAClE,8DAA8D;QAC9D,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,oBAAoB,EAAE;YACjC,kBAAkB;YAClB,MAAM,SAAS,GAAG,AAAC,CAAA,MAAM,CAAC,eAAe,IAAI,CAAA,GAAA,iCAAe,CAAA,CAAC,QAAQ,CAAC,CAAA,IACjE,MAAM,CAAC,cAAc,IAAI,CAAA,GAAA,yBAAO,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,AAAC;YAElE,IAAI,SAAS,EACX,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;SAExD;QAED,2CAA2C;QAC3C,WAAW,KAAK,SAAS,IAAI,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAEjE,6BAA6B;QAC7B,IAAI,kBAAkB,IAAI,OAAO,EAC/B,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,SAAS,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE;YACzE,OAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACpC,CAAC,CAAC;QAGL,2CAA2C;QAC3C,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,EAC5C,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC;QAGrD,wCAAwC;QACxC,IAAI,YAAY,IAAI,YAAY,KAAK,MAAM,EACzC,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAG7C,4BAA4B;QAC5B,IAAI,OAAO,MAAM,CAAC,kBAAkB,KAAK,UAAU,EACjD,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,oBAAoB,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;QAG9F,yCAAyC;QACzC,IAAI,OAAO,MAAM,CAAC,gBAAgB,KAAK,UAAU,IAAI,OAAO,CAAC,MAAM,EACjE,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,oBAAoB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAG7F,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,EAAE;YACvC,sBAAsB;YACtB,sCAAsC;YACtC,UAAU,GAAG,CAAA,MAAM,GAAI;gBACrB,IAAI,CAAC,OAAO,EACV,OAAO;gBAET,MAAM,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,CAAA,GAAA,+BAAa,CAAA,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC;gBACnF,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,OAAO,GAAG,IAAI,CAAC;aAChB,CAAC;YAEF,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAC/D,IAAI,MAAM,CAAC,MAAM,EACf,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,UAAU,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SAE9F;QAED,MAAM,QAAQ,GAAG,CAAA,GAAA,+BAAa,CAAA,CAAC,QAAQ,CAAC,AAAC;QAEzC,IAAI,QAAQ,IAAI,CAAA,GAAA,uBAAQ,CAAA,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE;YAC3D,MAAM,CAAC,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,uBAAuB,GAAG,QAAQ,GAAG,GAAG,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC;YACrG,OAAO;SACR;QAGD,mBAAmB;QACnB,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC;KACnC,CAAC,CAAC;CACJ,CAAA;;;AC5PD;;AAEA,8CAAyC;;AAFzC,YAAY,CAAC;AAaE,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxD,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,cAAc,AAAC;IACtD,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EACxE,OAAO,CAAC,QAAQ,CAAC,CAAC;SAElB,MAAM,CAAC,IAAI,CAAA,GAAA,4BAAU,CAAA,CACnB,kCAAkC,GAAG,QAAQ,CAAC,MAAM,EACpD;QAAC,CAAA,GAAA,4BAAU,CAAA,CAAC,eAAe;QAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,gBAAgB;KAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAChG,QAAQ,CAAC,MAAM,EACf,QAAQ,CAAC,OAAO,EAChB,QAAQ,CACT,CAAC,CAAC;CAEN;kBAbuB,MAAM;;;ACb9B;;AAEA,uCAAkC;;AAClC,8CAA4C;;AAH5C,YAAY,CAAC;kBAKE,CAAA,GAAA,uBAAQ,CAAA,CAAC,oBAAoB,GAG1C,AADF,gDAAgD;AAC7C,SAAS,kBAAkB,GAAG;IAC7B,OAAO;QACL,KAAK,EAAE,SAAS,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;YAChE,MAAM,MAAM,GAAG,EAAE,AAAC;YAClB,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YAEpD,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,EACzB,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;YAG5D,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,EACtB,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YAG9B,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAC,EACxB,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;YAGlC,IAAI,MAAM,KAAK,IAAI,EACjB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAGxB,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,IAAI,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE;YACxB,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC,AAAC;YACnF,OAAQ,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE;SACtD;QAED,MAAM,EAAE,SAAS,MAAM,CAAC,IAAI,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC;SAC7C;KACF,CAAC;CACH,EAAG,GAGJ,AADF,4EAA4E;AACzE,SAAS,qBAAqB,GAAG;IAChC,OAAO;QACL,KAAK,EAAE,SAAS,KAAK,GAAG,EAAE;QAC1B,IAAI,EAAE,SAAS,IAAI,GAAG;YAAE,OAAO,IAAI,CAAC;SAAE;QACtC,MAAM,EAAE,SAAS,MAAM,GAAG,EAAE;KAC7B,CAAC;CACH,EAAG,CAAC;;;ACnDP;;AAEA,6DAAwD;;AACxD,yDAAoD;;AAHpD,YAAY,CAAC;AAeE,SAAS,aAAa,CAAC,OAAO,EAAE,YAAY,EAAE;IAC3D,IAAI,OAAO,IAAI,CAAC,CAAA,GAAA,+BAAa,CAAA,CAAC,YAAY,CAAC,EACzC,OAAO,CAAA,GAAA,6BAAW,CAAA,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IAE5C,OAAO,YAAY,CAAC;CACrB;kBALuB,aAAa;;;ACfrC;;AAAA,YAAY,CAAC;AASE,SAAS,aAAa,CAAC,GAAG,EAAE;IACzC,gGAAgG;IAChG,gGAAgG;IAChG,kEAAkE;IAClE,OAAO,8BAA8B,IAAI,CAAC,GAAG,CAAC,CAAC;CAChD;kBALuB,aAAa;;;ACTrC;;AAAA,YAAY,CAAC;AAUE,SAAS,WAAW,CAAC,OAAO,EAAE,WAAW,EAAE;IACxD,OAAO,WAAW,GACd,OAAO,CAAC,OAAO,SAAS,EAAE,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC,OAAO,SAAS,EAAE,CAAC,GACnE,OAAO,CAAC;CACb;kBAJuB,WAAW;;;ACVnC;;AAEA,uCAAkC;;AAClC,8CAA4C;;AAH5C,YAAY,CAAC;kBAKE,CAAA,GAAA,uBAAQ,CAAA,CAAC,oBAAoB,GAI1C,AAFF,qEAAqE;AACrE,qEAAqE;AAClE,SAAS,kBAAkB,GAAG;IAC7B,MAAM,IAAI,GAAG,kBAAkB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,AAAC;IACzD,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,AAAC;IACnD,IAAI,SAAS,AAAC;IAEd;;;;;MAKE,CACF,SAAS,UAAU,CAAC,GAAG,EAAE;QACvB,IAAI,IAAI,GAAG,GAAG,AAAC;QAEf,IAAI,IAAI,EAAE;YACR,uDAAuD;YACvD,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;SAC5B;QAED,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE1C,wFAAwF;QACxF,OAAO;YACL,IAAI,EAAE,cAAc,CAAC,IAAI;YACzB,QAAQ,EAAE,cAAc,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,OAAO,EAAE,CAAC,GAAG,EAAE;YAClF,IAAI,EAAE,cAAc,CAAC,IAAI;YACzB,MAAM,EAAE,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,OAAO,QAAQ,EAAE,CAAC,GAAG,EAAE;YAC7E,IAAI,EAAE,cAAc,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,OAAO,EAAE,CAAC,GAAG,EAAE;YACtE,QAAQ,EAAE,cAAc,CAAC,QAAQ;YACjC,IAAI,EAAE,cAAc,CAAC,IAAI;YACzB,QAAQ,EAAE,AAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAClD,cAAc,CAAC,QAAQ,GACvB,GAAG,GAAG,cAAc,CAAC,QAAQ;SAChC,CAAC;KACH;IAED,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAE7C;;;;;MAKE,CACF,OAAO,SAAS,eAAe,CAAC,UAAU,EAAE;QAC1C,MAAM,MAAM,GAAG,AAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAI,UAAU,CAAC,UAAU,CAAC,GAAG,UAAU,AAAC;QAClF,OAAQ,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,IAC1C,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAE;KACrC,CAAC;CACH,EAAG,GAGJ,AADA,6EAA6E;AAC5E,SAAS,qBAAqB,GAAG;IAChC,OAAO,SAAS,eAAe,GAAG;QAChC,OAAO,IAAI,CAAC;KACb,CAAC;CACH,EAAG,CAAC;;;AClEP;;AAAA,YAAY,CAAC;AAEE,SAAS,aAAa,CAAC,GAAG,EAAE;IACzC,MAAM,KAAK,GAAG,4BAA4B,IAAI,CAAC,GAAG,CAAC,AAAC;IACpD,OAAO,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;CAChC;kBAHuB,aAAa;;;ACFrC;;AAAA,YAAY,CAAC;AAEb;;;;;GAKG,CACH,SAAS,WAAW,CAAC,YAAY,EAAE,GAAG,EAAE;IACtC,YAAY,GAAG,YAAY,IAAI,EAAE,CAAC;IAClC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,AAAC;IACtC,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,AAAC;IAC3C,IAAI,IAAI,GAAG,CAAC,AAAC;IACb,IAAI,IAAI,GAAG,CAAC,AAAC;IACb,IAAI,aAAa,AAAC;IAElB,GAAG,GAAG,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;IAErC,OAAO,SAAS,IAAI,CAAC,WAAW,EAAE;QAChC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,AAAC;QAEvB,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,AAAC;QAEnC,IAAI,CAAC,aAAa,EAChB,aAAa,GAAG,GAAG,CAAC;QAGtB,KAAK,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;QAC1B,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAEvB,IAAI,CAAC,GAAG,IAAI,AAAC;QACb,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,MAAO,CAAC,KAAK,IAAI,CAAE;YACjB,UAAU,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACzB,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;SACtB;QAED,IAAI,GAAG,AAAC,CAAA,IAAI,GAAG,CAAC,CAAA,GAAI,YAAY,CAAC;QAEjC,IAAI,IAAI,KAAK,IAAI,EACf,IAAI,GAAG,AAAC,CAAA,IAAI,GAAG,CAAC,CAAA,GAAI,YAAY,CAAC;QAGnC,IAAI,GAAG,GAAG,aAAa,GAAG,GAAG,EAC3B,OAAO;QAGT,MAAM,MAAM,GAAG,SAAS,IAAI,GAAG,GAAG,SAAS,AAAC;QAE5C,OAAO,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;KACpE,CAAC;CACH;kBAEc,WAAW,CAAC;;;ACtD3B;;AAEA,qCAAgC;;AAChC,kDAA6C;;AAH7C,YAAY,CAAC;AAKb,MAAM,eAAe,GAAG,CAAC,KAAK,GAAK,KAAK,YAAY,CAAA,GAAA,8BAAY,CAAA,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,KAAK,AAAC;AAW3E,SAAS,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;IACpD,6CAA6C;IAC7C,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IACxB,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,SAAS,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;QAChD,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,MAAM,CAAC,EAC5D,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC;YAAC,QAAQ;SAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;aAC/C,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,aAAa,CAAC,MAAM,CAAC,EACpC,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;aAC1B,IAAI,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,EAC9B,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;QAExB,OAAO,MAAM,CAAC;KACf;IAED,6CAA6C;IAC7C,SAAS,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE;QAC3C,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;aACjC,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;KAEjD;IAED,6CAA6C;IAC7C,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE;QAC9B,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KAEvC;IAED,6CAA6C;IAC7C,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE;QAC9B,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aAC/B,IAAI,CAAC,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,CAAC,CAAC,EAC9B,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KAEvC;IAED,6CAA6C;IAC7C,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;QACnC,IAAI,IAAI,IAAI,OAAO,EACjB,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACvB,IAAI,IAAI,IAAI,OAAO,EACxB,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KAEvC;IAED,MAAM,QAAQ,GAAG;QACf,GAAG,EAAE,gBAAgB;QACrB,MAAM,EAAE,gBAAgB;QACxB,IAAI,EAAE,gBAAgB;QACtB,OAAO,EAAE,gBAAgB;QACzB,gBAAgB,EAAE,gBAAgB;QAClC,iBAAiB,EAAE,gBAAgB;QACnC,gBAAgB,EAAE,gBAAgB;QAClC,OAAO,EAAE,gBAAgB;QACzB,cAAc,EAAE,gBAAgB;QAChC,eAAe,EAAE,gBAAgB;QACjC,OAAO,EAAE,gBAAgB;QACzB,YAAY,EAAE,gBAAgB;QAC9B,cAAc,EAAE,gBAAgB;QAChC,cAAc,EAAE,gBAAgB;QAChC,gBAAgB,EAAE,gBAAgB;QAClC,kBAAkB,EAAE,gBAAgB;QACpC,UAAU,EAAE,gBAAgB;QAC5B,gBAAgB,EAAE,gBAAgB;QAClC,aAAa,EAAE,gBAAgB;QAC/B,cAAc,EAAE,gBAAgB;QAChC,SAAS,EAAE,gBAAgB;QAC3B,SAAS,EAAE,gBAAgB;QAC3B,UAAU,EAAE,gBAAgB;QAC5B,WAAW,EAAE,gBAAgB;QAC7B,UAAU,EAAE,gBAAgB;QAC5B,gBAAgB,EAAE,gBAAgB;QAClC,cAAc,EAAE,eAAe;QAC/B,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAK,mBAAmB,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;KACrF,AAAC;IAEF,CAAA,GAAA,uBAAK,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,SAAS,kBAAkB,CAAC,IAAI,EAAE;QAChG,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,mBAAmB,AAAC;QACpD,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,AAAC;QAC7D,CAAA,GAAA,uBAAK,CAAA,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,KAAK,KAAK,eAAe,IAAM,CAAA,MAAM,CAAC,IAAI,CAAC,GAAG,WAAW,CAAA,AAAC,CAAC;KAC/F,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;CACf;kBAxFuB,WAAW;;;AChBnC;;AAEA,uCAAuC;AACvC,oDAA+C;;AAH/C,YAAY,CAAC;AAKb,MAAM,UAAU,GAAG,EAAE,AAAC;AAEtB,sCAAsC;AACtC;IAAC,QAAQ;IAAE,SAAS;IAAE,QAAQ;IAAE,UAAU;IAAE,QAAQ;IAAE,QAAQ;CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,GAAK;IACnF,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,SAAS,CAAC,KAAK,EAAE;QAC3C,OAAO,OAAO,KAAK,KAAK,IAAI,IAAI,GAAG,GAAI,CAAA,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,CAAA,GAAI,IAAI,CAAC;KACnE,CAAC;CACH,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,AAAC;AAE9B;;;;;;;;GAQG,CACH,UAAU,CAAC,YAAY,GAAG,SAAS,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;IAC3E,SAAS,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE;QAChC,OAAO,UAAU,GAAG,CAAA,GAAA,eAAO,CAAA,GAAG,yBAA0B,GAAG,GAAG,GAAG,GAAI,GAAG,IAAI,GAAI,CAAA,OAAO,GAAG,IAAI,GAAG,OAAO,GAAG,EAAE,CAAA,AAAC,CAAC;KAChH;IAED,sCAAsC;IACtC,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,GAAK;QAC3B,IAAI,SAAS,KAAK,KAAK,EACrB,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAClB,aAAa,CAAC,GAAG,EAAE,mBAAmB,GAAI,CAAA,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,EAAE,CAAA,AAAC,CAAC,EAC3E,CAAA,GAAA,4BAAU,CAAA,CAAC,cAAc,CAC1B,CAAC;QAGJ,IAAI,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE;YACvC,kBAAkB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YAC/B,sCAAsC;YACtC,OAAO,CAAC,IAAI,CACV,aAAa,CACX,GAAG,EACH,8BAA8B,GAAG,OAAO,GAAG,yCAAyC,CACrF,CACF,CAAC;SACH;QAED,OAAO,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;KACvD,CAAC;CACH,CAAC;AAEF;;;;;;;;GAQG,CAEH,SAAS,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE;IACpD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAC7B,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,2BAA2B,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,oBAAoB,CAAC,CAAC;IAErF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,AAAC;IAClC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,AAAC;IACpB,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;QACd,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,AAAC;QACpB,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,AAAC;QAC9B,IAAI,SAAS,EAAE;YACb,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,AAAC;YAC3B,MAAM,MAAM,GAAG,KAAK,KAAK,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,AAAC;YACrE,IAAI,MAAM,KAAK,IAAI,EACjB,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,SAAS,GAAG,GAAG,GAAG,WAAW,GAAG,MAAM,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,oBAAoB,CAAC,CAAC;YAEhG,SAAS;SACV;QACD,IAAI,YAAY,KAAK,IAAI,EACvB,MAAM,IAAI,CAAA,GAAA,4BAAU,CAAA,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAA,GAAA,4BAAU,CAAA,CAAC,cAAc,CAAC,CAAC;KAE5E;CACF;kBAEc;IACb,aAAa;IACb,UAAU;CACX,CAAC;;;AC1FF;;6CAAa,OAAO;AAAb,MAAM,OAAO,GAAG,OAAO,AAAC;;;ACA/B;;AAEA,oDAA+C;;AAF/C,YAAY,CAAC;AAIb;;;;;;GAMG,CACH,MAAM,WAAW;IACf,YAAY,QAAQ,CAAE;QACpB,IAAI,OAAO,QAAQ,KAAK,UAAU,EAChC,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;QAGtD,IAAI,cAAc,AAAC;QAEnB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,SAAS,eAAe,CAAC,OAAO,EAAE;YAC3D,cAAc,GAAG,OAAO,CAAC;SAC1B,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,sCAAsC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA,MAAM,GAAI;YAC1B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO;YAE9B,IAAI,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,AAAC;YAEhC,MAAO,CAAC,EAAE,GAAG,CAAC,CACZ,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAE9B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;SACzB,CAAC,CAAC;QAEH,sCAAsC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAA,WAAW,GAAI;YACjC,IAAI,QAAQ,AAAC;YACb,sCAAsC;YACtC,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAA,OAAO,GAAI;gBACrC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACzB,QAAQ,GAAG,OAAO,CAAC;aACpB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,AAAC;YAErB,OAAO,CAAC,MAAM,GAAG,SAAS,MAAM,GAAG;gBACjC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aAC7B,CAAC;YAEF,OAAO,OAAO,CAAC;SAChB,CAAC;QAEF,QAAQ,CAAC,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;YACjD,IAAI,KAAK,CAAC,MAAM,EACd,0CAA0C;YAC1C,OAAO;YAGT,KAAK,CAAC,MAAM,GAAG,IAAI,CAAA,GAAA,+BAAa,CAAA,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC3D,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC9B,CAAC,CAAC;KACJ;IAED;;KAEG,CACH,gBAAgB,GAAG;QACjB,IAAI,IAAI,CAAC,MAAM,EACb,MAAM,IAAI,CAAC,MAAM,CAAC;KAErB;IAED;;KAEG,CAEH,SAAS,CAAC,QAAQ,EAAE;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,UAAU,EACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAE/B,IAAI,CAAC,UAAU,GAAG;YAAC,QAAQ;SAAC,CAAC;KAEhC;IAED;;KAEG,CAEH,WAAW,CAAC,QAAQ,EAAE;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAClB,OAAO;QAET,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,AAAC;QAChD,IAAI,KAAK,KAAK,EAAE,EACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAEpC;IAED;;;KAGG,CACH,OAAO,MAAM,GAAG;QACd,IAAI,MAAM,AAAC;QACX,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE;YACjD,MAAM,GAAG,CAAC,CAAC;SACZ,CAAC,AAAC;QACH,OAAO;YACL,KAAK;YACL,MAAM;SACP,CAAC;KACH;CACF;kBAEc,WAAW,CAAC;;;ACxH3B;;AAAA,YAAY,CAAC;AAuBE,SAAS,MAAM,CAAC,QAAQ,EAAE;IACvC,OAAO,SAAS,IAAI,CAAC,GAAG,EAAE;QACxB,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAClC,CAAC;CACH;kBAJuB,MAAM;;;ACvB9B;;AAEA,uCAAkC;;AAFlC,YAAY,CAAC;AAWE,SAAS,YAAY,CAAC,OAAO,EAAE;IAC5C,OAAO,CAAA,GAAA,uBAAK,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAK,OAAO,CAAC,YAAY,KAAK,IAAI,AAAC,CAAC;CACnE;kBAFuB,YAAY;;;ACXpC;;AAAA,MAAM,cAAc,GAAG;IACrB,QAAQ,EAAE,GAAG;IACb,kBAAkB,EAAE,GAAG;IACvB,UAAU,EAAE,GAAG;IACf,UAAU,EAAE,GAAG;IACf,EAAE,EAAE,GAAG;IACP,OAAO,EAAE,GAAG;IACZ,QAAQ,EAAE,GAAG;IACb,2BAA2B,EAAE,GAAG;IAChC,SAAS,EAAE,GAAG;IACd,YAAY,EAAE,GAAG;IACjB,cAAc,EAAE,GAAG;IACnB,WAAW,EAAE,GAAG;IAChB,eAAe,EAAE,GAAG;IACpB,MAAM,EAAE,GAAG;IACX,eAAe,EAAE,GAAG;IACpB,gBAAgB,EAAE,GAAG;IACrB,KAAK,EAAE,GAAG;IACV,QAAQ,EAAE,GAAG;IACb,WAAW,EAAE,GAAG;IAChB,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,GAAG;IACX,iBAAiB,EAAE,GAAG;IACtB,iBAAiB,EAAE,GAAG;IACtB,UAAU,EAAE,GAAG;IACf,YAAY,EAAE,GAAG;IACjB,eAAe,EAAE,GAAG;IACpB,SAAS,EAAE,GAAG;IACd,QAAQ,EAAE,GAAG;IACb,gBAAgB,EAAE,GAAG;IACrB,aAAa,EAAE,GAAG;IAClB,2BAA2B,EAAE,GAAG;IAChC,cAAc,EAAE,GAAG;IACnB,QAAQ,EAAE,GAAG;IACb,IAAI,EAAE,GAAG;IACT,cAAc,EAAE,GAAG;IACnB,kBAAkB,EAAE,GAAG;IACvB,eAAe,EAAE,GAAG;IACpB,UAAU,EAAE,GAAG;IACf,oBAAoB,EAAE,GAAG;IACzB,mBAAmB,EAAE,GAAG;IACxB,iBAAiB,EAAE,GAAG;IACtB,SAAS,EAAE,GAAG;IACd,kBAAkB,EAAE,GAAG;IACvB,mBAAmB,EAAE,GAAG;IACxB,MAAM,EAAE,GAAG;IACX,gBAAgB,EAAE,GAAG;IACrB,QAAQ,EAAE,GAAG;IACb,eAAe,EAAE,GAAG;IACpB,oBAAoB,EAAE,GAAG;IACzB,eAAe,EAAE,GAAG;IACpB,2BAA2B,EAAE,GAAG;IAChC,0BAA0B,EAAE,GAAG;IAC/B,mBAAmB,EAAE,GAAG;IACxB,cAAc,EAAE,GAAG;IACnB,UAAU,EAAE,GAAG;IACf,kBAAkB,EAAE,GAAG;IACvB,cAAc,EAAE,GAAG;IACnB,uBAAuB,EAAE,GAAG;IAC5B,qBAAqB,EAAE,GAAG;IAC1B,mBAAmB,EAAE,GAAG;IACxB,YAAY,EAAE,GAAG;IACjB,WAAW,EAAE,GAAG;IAChB,6BAA6B,EAAE,GAAG;CACnC,AAAC;AAEF,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAK;IACvD,cAAc,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;CAC7B,CAAC,CAAC;kBAEY,cAAc,CAAC;;;ACtE9B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,AAAC;AACrE,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;AACnE,MAAM,YAAY,GAAG,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC,AAAC;AAChE,MAAM,WAAW,GAAG,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC,AAAC;AAC/D,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,AAAC;AACtD,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;IAC9C,YAAY,CAAC,OAAO,CAAC,CAAA,IAAI,GAAI;QAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KACvC,CAAC,CAAC;IACH,WAAW,CAAC,OAAO,CAAC,CAAA,IAAI,GAAI;QAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;KACpC,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;IAC/C,YAAY,CAAC,OAAO,CAAC,CAAA,IAAI,GAAI;QAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;KACpC,CAAC,CAAC;IACH,WAAW,CAAC,OAAO,CAAC,CAAA,IAAI,GAAI;QAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KACvC,CAAC,CAAC;IACH,IAAI,MAAM,CAAC,UAAU,CAAC,4CAA4C,CAAC,CAAC,OAAO,EACzE,QAAQ,CAAC,UAAU,IAAI,GAAG,CAAC;CAE9B,CAAC,CAAC;;;AC5BH;;AAkHA,4DAAsB,sBAAsB,CAK3C;AAvHD,4CAAiD;AACjD,sCAAqD;AACrD,8CAAuD;AACvD,4CAAmD;AACnD,sCAAiD;AAEjD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,AAAC;AAChD,MAAM,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,AAAC;AACrD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,AAAC;AAChE,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,AAAC;AACvD,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AACnD,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAEnD,sBAAsB,CAAC,OAAO,CAAC,CAAC;AAChC,IAAI,cAAc,GAAG,EAAE,AAAC;AACxB,wBAAwB,EAAE,CAAC;AAC3B,gBAAgB,EAAE,CAAC;AAEnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAM,KAAK,GAAI;IAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,AAAC;IACzB,sBAAsB,CAAC,IAAI,CAAC,CAAC;CAC9B,CAAC,CAAC;AAEH,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;IACxC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,AAAC;IAC1B,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC9B,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAC3B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAE7B,gBAAgB,EAAE,CAAC;CACpB,CAAC,CAAC;AAEH,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;IACzC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;IAC7D,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,AAAC;IACrC,MAAM,iBAAiB,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,AAAC;IACxD,IAAI,iBAAiB,GAAG,CAAC,EAAE;QACzB,cAAc,GAAG,cAAc,CAAC,MAAM,CACpC,CAAA,QAAQ,GAAI,QAAQ,KAAK,cAAc,CAAC,CAAC,CAAC,CAC3C,CAAC;QACF,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;KAC1D;IACD,gBAAgB,EAAE,CAAC;CACpB,CAAC,CAAC;AAEH,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;IACzC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;IAC7D,MAAM,SAAS,GAAG,cAAc,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,AAAC;IAC5D,MAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,AAAC;IACtD,IAAI,gBAAgB,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3C,cAAc,GAAG,cAAc,CAAC,MAAM,CACpC,CAAA,QAAQ,GAAI,QAAQ,KAAK,cAAc,CAAC,CAAC,CAAC,CAC3C,CAAC;QACF,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;KACtD;IACD,gBAAgB,EAAE,CAAC;CACpB,CAAC,CAAC;AAEH,SAAS,uBAAuB,GAAG;IACjC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;IAC7D,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;QAC9C,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;QACvC,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;KACxC,MAAM;QACL,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;QACxC,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;KACzC;CACF;AAED,SAAS,wBAAwB,GAAG;IAClC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;IAE7D,IAAI,SAAS,IAAI,IAAI,EACnB,OAAO;IAGT,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EACtB,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,CACnD,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;SAGxC,IAAK,IAAI,MAAK,GAAG,CAAC,EAAE,MAAK,GAAG,CAAC,EAAE,MAAK,EAAE,CACpC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,MAAK,CAAC,CAAC,CAAC;CAG3C;AAED,SAAS,gBAAgB,GAAG;IAC1B,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;IAC7B,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,CAAE;QAC1D,MAAM,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,AAAC;QAEvC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,AAAC;QACxC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACnC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;QAChD,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QACpD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAErC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrB,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAEvB,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;KAC/B;IAED,uBAAuB,EAAE,CAAC;CAC3B;AAEM,eAAe,sBAAsB,CAAC,IAAI,EAAE;IACjD,MAAM,CAAA,GAAA,4BAAe,CAAA,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAA,GAAA,kCAAoB,CAAA,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAA,GAAA,8BAAiB,CAAA,CAAC,IAAI,CAAC,CAAC;IACxB,CAAA,GAAA,4BAAkB,CAAA,CAAC,IAAI,CAAC,CAAC;CAC1B;AAED,SAAS,oBAAoB,CAAC,KAAK,EAAE;IACnC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,AAAC;IACjC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAA,GAAA,gCAAsB,CAAA,CAAC,KAAK,CAAC,CAAC;CAC/B;AAED,SAAS,iBAAiB,CAAC,KAAK,EAAE;IAChC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,AAAC;IACjC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;IACxD,6BAA6B,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC7C,2BAA2B,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC3C,gBAAgB,EAAE,CAAC;CACpB;AAED,SAAS,2BAA2B,CAAC,MAAM,EAAE,KAAK,EAAE;IAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,IAAI,GAAI,IAAI,KAAK,KAAK,CAAC,CAAC;IAC/C,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;CACxD;AAED,SAAS,6BAA6B,CAAC,SAAS,EAAE,KAAK,EAAE;IACvD,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;QACzB,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,KAAK,KAAK,CAAC,CAAC;QACzD,OAAO;KACR;IAED,MAAM,SAAS,GAAG,cAAc,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,AAAC;IAC5D,MAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,AAAC;IACtD,IAAI,gBAAgB,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3C,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,KAAK,KAAK,CAAC,CAAC;QACzD,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;KACtD,MACC,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,KAAK,KAAK,CAAC,CAAC;CAE5D;AAED,SAAS,sBAAsB,CAAC,KAAK,EAAE;IACrC,IAAI,KAAK,KAAK,EAAE,EACd,OAAO;IAET,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,AAAC;IAE9C,IAAI,MAAM,KAAK,IAAI,EACjB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC;QAAC,KAAK;KAAC,CAAC,CAAC,CAAC;SACnD;QACL,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,IAAI,CAAC,WAAW,EAAE,CAAC,AAAC;QACrE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;YAC9C,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;SAC7D;KACF;CACF;;;AC3KD;;AAEA,qDAAsB,eAAe,CAKpC;AAPD,0CAA6C;AAEtC,eAAe,eAAe,CAAC,IAAI,EAAE;IAC1C,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,wBAAY,CAAA,CAAC,IAAI,CAAC,AAAC;IAC1C,MAAM,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,AAAC;IAE7E,mBAAmB,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;CAChE;;;ACPD;;AAKA,kDAAsB,YAAY,CAIjC;AATD,6BAA0B;;AAE1B,MAAM,QAAQ,GAAG,yBAAyB,AAAC;AAC3C,MAAM,MAAM,GAAG,oCAAoC,AAAC;AAE7C,eAAe,YAAY,CAAC,IAAI,EAAE;IACvC,MAAM,aAAa,GAAG,CAAC,4CAA4C,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,AAAC;IAC1F,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,qBAAK,CAAA,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,AAAC;IAChE,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;CAC5C;;;ACTD;;AAuFA,4DAAsB,sBAAsB,CAS3C;AAhGD,2BAIe;AACf,iCAAkD;AAClD,MAAM,eAAe,GAAG,QAAQ,AAAC;AACjC,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,8BAA8B,CAAC,AAAC;AACrE,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,AAAC;AAChD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;AACnD,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,AAAC;AAC7D,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAC/C,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;AAC3D,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,AAAC;AAC9D,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,AAAC;AAC1D,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAC/C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAEnD,eAAe,iBAAiB,CAAC,CAAC,EAAE;IAClC,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAChC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACpC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxC,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,OAAO,EACjD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAGvC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAC9C,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACjC,IAAI;QACF,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,kBAAa,CAAA,CAAC,KAAK,CAAC,KAAK,EAAE,eAAe,CAAC,AAAC;QACvE,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,AAAC;QAC7C,cAAc,CAAC,SAAS,CAAC,CAAC;KAC3B,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;KAC7D;CACF;AACD,SAAS,YAAY,CAAC,YAAY,EAAE;IAClC,MAAM,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,GAAK;QAC/D,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,AAAC;QACtC,MAAM,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EACrC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CACpB,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,AAAC;QAErB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAClB,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAGvB,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3B,OAAO,MAAM,CAAC;KACf,EAAE,EAAE,CAAC,AAAC;IAEP,OAAO,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;CACrC;AACD,SAAS,cAAc,CAAC,SAAS,EAAE;IACjC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QAC1B,MAAM,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;QACrC,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,AAAC;QAElD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,2BAA2B,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;QAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,AAAC;QAClD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;QACpD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,AAAC;QAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,AAAC;QAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;QAEvD,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE;YAAE,OAAO,EAAE,MAAM;SAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE;YACpD,GAAG,EAAE,SAAS;YACd,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QACH,MAAM,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;QAC9D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;QAE5D,MAAM,OAAO,GAAG,CAAC,gCAAgC,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;QACtF,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC1C,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;QAClB,GAAG,CAAC,GAAG,GAAG,cAAc,CAAC;QACzB,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;QACvB,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;KAC1B;CACF;AAEM,eAAe,sBAAsB,CAAC,QAAQ,EAAE;IACrD,IAAI;QACF,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,kBAAa,CAAA,CAAC,QAAQ,EAAE,eAAe,CAAC,AAAC;QACpE,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,AAAC;QAC7C,cAAc,CAAC,SAAS,CAAC,CAAC;KAC3B,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;KAC7D;CACF;AAED,eAAe,uBAAuB,CAAC,KAAK,EAAE;IAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,AAAC;IACjC,CAAA,GAAA,8BAAsB,CAAA,CAAC,KAAK,CAAC,CAAC;IAC9B,MAAM,sBAAsB,CAAC,KAAK,CAAC,CAAC;CACrC;AACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAC;AAExD,sBAAsB,CAAC,OAAO,CAAC,CAAC;;;ACzGhC;;AA4FA,uDAAgB,iBAAiB,CAUhC;AAtGD,gCAA+C;AAC/C,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;AACzD,SAAS,qBAAqB,CAAC,IAAI,EAAE;IACnC,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,AAAC;IACrB,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,GAAG,CAAC,cAAc,EAAE,EACpB,GAAG,CAAC,WAAW,EAAE,EACjB,GAAG,CAAC,UAAU,EAAE,EAChB,GAAG,CAAC,WAAW,EAAE,EACjB,GAAG,CAAC,aAAa,EAAE,EACnB,GAAG,CAAC,aAAa,EAAE,EACnB,GAAG,CAAC,kBAAkB,EAAE,CACzB,AAAC;IACF,MAAM,uBAAuB,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,AAAC;IACzE,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,uBAAuB,CAAC,AAAC;IACtD,eAAe,CAAC,WAAW,CAAC,CAAC;IAC7B,aAAa,CAAC,WAAW,CAAC,CAAC;IAC3B,kBAAkB,CAAC,WAAW,CAAC,CAAC;IAChC,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAC/B,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACpC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CACnC;AAED,SAAS,iBAAiB,CAAC,WAAW,EAAE;IACtC,MAAM,YAAY,GAAG,eAAe,CAAC,WAAW,CAAC,AAAC;IAClD,MAAM,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,AAAC;IACtE,oBAAoB,CAAC,SAAS,GAAG,YAAY,CAAC;CAC/C;AAED,SAAS,gBAAgB,CAAC,UAAU,EAAE;IACpC,MAAM,YAAY,GAAG,eAAe,CAAC,UAAU,CAAC,AAAC;IACjD,MAAM,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,AAAC;IAEpE,mBAAmB,CAAC,SAAS,GAAG,YAAY,CAAC;CAC9C;AAED,SAAS,eAAe,CAAC,IAAI,EAAE;IAC7B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,AAAC;IACnC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,AAAC;IAC9B,MAAM,WAAW,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,AAAC;IAC5E,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;IAClC,MAAM,aAAa,GACjB,OAAO,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE,AAAC;IAChE,MAAM,YAAY,GAAG,WAAW,GAAG,GAAG,GAAG,aAAa,AAAC;IAEvD,OAAO,YAAY,CAAC;CACrB;AAED,SAAS,iBAAiB,CAAC,WAAW,EAAE;IACtC,IAAI,WAAW,GACb,WAAW,CAAC,QAAQ,EAAE,GACtB,GAAG,GACH,WAAW,CAAC,UAAU,EAAE,GACxB,GAAG,GACH,WAAW,CAAC,UAAU,EAAE,AAAC;IAE3B,MAAM,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,AAAC;IACpE,oBAAoB,CAAC,SAAS,GAAG,WAAW,CAAC;CAC9C;AAED,SAAS,kBAAkB,CAAC,WAAW,EAAE;IACvC,MAAM,KAAK,GAAG,WAAW,CAAC,cAAc,CAAC,SAAS,EAAE;QAAE,KAAK,EAAE,MAAM;KAAE,CAAC,AAAC;IACvE,MAAM,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,AAAC;IAClE,kBAAkB,CAAC,SAAS,GAAG,KAAK,CAAC;CACtC;AAED,SAAS,aAAa,CAAC,WAAW,EAAE;IAClC,MAAM,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC,SAAS,EAAE;QAAE,OAAO,EAAE,OAAO;KAAE,CAAC,AAAC;IAC5E,MAAM,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,AAAC;IACvE,oBAAoB,CAAC,SAAS,GAAG,OAAO,CAAC;CAC1C;AAED,SAAS,eAAe,CAAC,WAAW,EAAE;IACpC,MAAM,gBAAgB,GAAG,WAAW,CAAC,OAAO,EAAE,AAAC;IAC/C,MAAM,yBAAyB,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,AAAC;IAC3E,MAAM,cAAc,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,AAAC;IAE3D,yBAAyB,CAAC,SAAS,GAAG,CAAC,EAAE,gBAAgB,CAAC,KAAK,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;CACzF;AAED,SAAS,iBAAiB,CAAC,SAAS,EAAE;IACpC,IAAI,SAAS,IAAI,CAAC,EAChB,OAAO,IAAI,CAAC;SACP,IAAI,SAAS,IAAI,CAAC,EACvB,OAAO,IAAI,CAAC;SACP,IAAI,SAAS,IAAI,CAAC,EACvB,OAAO,IAAI,CAAC;SAEZ,OAAO,IAAI,CAAC;CAEf;AAEM,SAAS,iBAAiB,CAAC,IAAI,EAAE;IACtC,MAAM,eAAe,GAAG,QAAQ,AAAC;IACjC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACpC,CAAA,GAAA,0BAAmB,CAAA,CAAC,IAAI,EAAE,eAAe,CAAC,CACvC,IAAI,CAAC,CAAA,WAAW,GAAI;QACnB,qBAAqB,CAAC,WAAW,CAAC,CAAC;KACpC,CAAC,CACD,KAAK,CAAC,CAAA,KAAK,GAAI;QACd,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;CACN;;;ACtGD;;AA+HA,wDAAS,kBAAkB,CAAG;AA/H9B,8CAA+C;AAC/C,2BAAsC;AACtC,sCAAsC;AACtC,MAAM,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,AAAC;AAChE,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,8BAA8B,CAAC,AAAC;AACrE,MAAM,eAAe,GAAG,QAAQ,AAAC;AACjC,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,AAAC;AAC7D,IAAI,WAAW,GAAG,EAAE,AAAC;AACrB,IAAI,YAAY,GAAG,EAAE,AAAC;AACtB,IAAI,YAAY,GAAG,EAAE,AAAC;AACtB,IAAI,MAAM,GAAG;IACX;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,QAAQ;QACzB,WAAW,EAAE,IAAI;QACjB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACX;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;IACD;QACE,IAAI,EAAE,OAAO;QACb,eAAe,EAAE,OAAO;QACxB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,GAAG;KACV;CACF,AAAC;AACF,CAAA,GAAA,0BAAY,CAAA,CAAC,MAAM,CAAC,CAAC;AAErB,SAAS,kBAAkB,CAAC,YAAY,EAAE,GAAG,EAAE;IAC7C,MAAM,UAAU,GAAG,AAAC,CAAA,GAAG,GAAG,CAAC,CAAA,GAAI,CAAC,AAAC;IACjC,MAAM,QAAQ,GAAG,UAAU,GAAG,CAAC,AAAC;IAEhC,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI;QACrE,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,AAAC;QAC1C,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,AAAC;QAC7C,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,AAAC;QACzC,MAAM,cAAc,GAAG,aAAa,GAAG,OAAO,AAAC;QAC/C,OAAO;YACL,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,GAAG,KAAK;YACjC,eAAe,EAAE,eAAe;YAChC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;YACpC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;SACtB,CAAC;KACH,CAAC,AAAC;IAEH,OAAO,IAAI,CAAC;CACb;AACD,SAAS,kBAAkB,CAAC,IAAI,EAAE;IAChC,YAAY,GAAG,IAAI,CAAC;IACpB,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;CAChC;AAED,MAAM,QAAQ,GAAG,OAAM,KAAK,GAAI;IAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,AAAC;IAC5D,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;QACtD,OAAO;KACR;IACD,IAAI;QACF,WAAW,GAAG,MAAM,CAAA,GAAA,kBAAa,CAAA,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;QACjE,IAAI,WAAW,EAAE;YACf,YAAY,GAAG,kBAAkB,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;YACpD,MAAM,OAAO,GAAG,YAAY,AAAC;YAC7B,MAAM,OAAM,GAAG,CAAA,GAAA,0BAAY,CAAA,CAAC,OAAO,CAAC,AAAC;YACrC,eAAe,CAAC,SAAS,GAAG,OAAM,CAAC;SACpC;KACF,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;KAC7D;CACF,AAAC;AAEF,OAAO,CAAC,OAAO,CAAC,CAAA,MAAM,GAAI;IACxB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;CAC5C,CAAC,CAAC;AAEH,OAAO,CAAC,OAAO,CAAC,CAAA,MAAM,GAAI;IACxB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;CAC5C,CAAC,CAAC;;;AClIH;;AAAA,kDAAgB,YAAY,CA2B3B;AA3BM,SAAS,YAAY,CAAC,MAAM,EAAE;IACnC,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CACxB,CAAC,EAAE,IAAI,CAAA,EAAE,eAAe,CAAA,EAAE,WAAW,CAAA,EAAE,QAAQ,CAAA,EAAE,QAAQ,CAAA,EAAE,IAAI,CAAA,EAAE,GAAK;QACpE,MAAM,cAAc,GAAG,CAAC,iCAAiC,EAAE,eAAe,CAAC,IAAI,CAAC,AAAC;QACjF,OAAO,CAAC;;qCAEuB,EAAE,IAAI,CAAC;;oBAExB,EAAE,cAAc,CAAC;gBACrB,EAAE,WAAW,CAAC;;;;kBAIZ,EAAE,QAAQ,CAAC;;;kBAGX,EAAE,QAAQ,CAAC;;;kBAGX,EAAE,IAAI,CAAC;;;WAGd,CAAC,CAAC;KACR,CACF,AAAC;IAEF,OAAO,CAAC,4BAA4B,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;CAC/D;;;AC3BD;;AAoDA,0DAAgB,oBAAoB,CAkBnC;AAtED,gCAA+C;AAE/C,MAAM,IAAI,GAAG,EAAE,AAAC;AAChB,MAAM,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,AAAC;AAC7E,MAAM,qBAAqB,GAAG,QAAQ,CAAC,aAAa,CAClD,0BAA0B,CAC3B,AAAC;AACF,MAAM,qBAAqB,GAAG,QAAQ,CAAC,aAAa,CAClD,0BAA0B,CAC3B,AAAC;AACF,MAAM,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,AAAC;AAC5E,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,AAAC;AACrE,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,AAAC;AAC7D,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;AAChE,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,AAAC;AAC1D,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;AAC3D,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAC/C,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAClD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAEtD,SAAS,cAAc,CAAC,MAAM,EAAE;IAC9B,OAAO,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;CAC7B;AACD,SAAS,iBAAiB,CAAC,IAAI,EAAE;IAC/B,MAAM,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;IAC1D,MAAM,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,AAAC;IAC1D,MAAM,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,AAAC;IAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,AAAC;IACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,AAAC;IAE3B,kBAAkB,CAAC,WAAW,GAAG,CAAC,EAAE,kBAAkB,CAAC,EAAC,CAAE,CAAC;IAC1D,qBAAoB,CAAC,WAAW,GAAG,CAAC,EAAE,cAAc,CAAC,EAAC,CAAE,CAAC;IACzD,qBAAoB,CAAC,WAAW,GAAG,CAAC,EAAE,cAAc,CAAC,EAAC,CAAC,CAAC;IAEzD,IAAI,kBAAkB,EAAE;QACtB,MAAM,OAAO,GAAG,CAAC,iCAAiC,EAAE,WAAW,CAAC,IAAI,CAAC,AAAC;QAEtE,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC1C,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;QAClB,GAAG,CAAC,GAAG,GAAG,cAAc,CAAC;QACzB,kBAAkB,CAAC,SAAS,GAAG,EAAE,CAAC;QAClC,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;KACrC;IACD,IAAI,WAAW,EACb,WAAW,CAAC,WAAW,GAAG,QAAQ,CAAC;CAEtC;AAED,SAAS,gBAAgB,CAAC,KAAI,EAAE,eAAe,EAAE;IAC/C,OAAO,CAAA,GAAA,0BAAmB,CAAA,CAAC,KAAI,EAAE,eAAe,CAAC,CAAC;CACnD;AAEM,SAAS,oBAAoB,CAAC,KAAI,EAAE;IACzC,MAAM,eAAe,GAAG,QAAQ,AAAC;IACjC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3C,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC3C,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAC9C,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACpC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACrC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAExC,gBAAgB,CAAC,KAAI,EAAE,eAAe,CAAC,CACpC,IAAI,CAAC,CAAA,WAAW,GAAI;QACnB,iBAAiB,CAAC,WAAW,CAAC,CAAC;KAChC,CAAC,CACD,KAAK,CAAC,CAAA,KAAK,GAAI;QACd,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACrD,kBAAkB,CAAC,WAAW,GAAG,6BAA6B,CAAC;KAChE,CAAC,CAAC;CACN;;;ACtED;AAAA,oCAAkC;;AAClC,2BAAsC;AAEtC,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,AAAC;AAChE,IAAI,eAAe,GAAG,QAAQ,AAAC;AAC/B,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;AAE3D,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAM;IAClD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;IACtD,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,AAAC;IAC1E,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,AAAC;IAC5D,IAAI,YAAY,GAAG,IAAI,AAAC;IAExB,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;QAC9C,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACxC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;KAC5C,CAAC,CAAC;IAEH,MAAM,gBAAe,GAAG,QAAQ,AAAC;IACjC,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,8BAA8B,CAAC,AAAC;IACrE,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,AAAC;IAChD,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;IAC1D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IAErD,eAAe,mBAAmB,CAAC,CAAC,EAAE;QACpC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI;YACF,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,AAAC;YAC9B,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,kBAAa,CAAA,CAAC,SAAS,EAAE,gBAAe,CAAC,AAAC;YACrE,WAAW,CAAC,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACjD,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,AAAC;YAC7C,WAAW,CAAC,SAAS,CAAC,CAAC;SACxB,CAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;SAC7D;KACF;IAED,SAAS,YAAY,CAAC,YAAY,EAAE;QAClC,OAAO,YAAY,CAAC,IAAI,CAAC,MAAM,CAC7B,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,GAChB,KAAK,KACL,IAAI,CAAC,SAAS,CACZ,CAAA,CAAC,GACC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE,CACvE,CACJ,CAAC;KACH;IAED,eAAe,2BAA2B,CAAC,SAAS,EAAE;QACpD,IAAI;YACF,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,kBAAa,CAAA,CAAC,SAAS,EAAE,gBAAe,CAAC,AAAC;YACrE,WAAW,CAAC,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACjD,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,AAAC;YAC7C,WAAW,CAAC,SAAS,CAAC,CAAC;SACxB,CAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;SAC7D;KACF;IAED,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAA,KAAK,GAAI;QAC/C,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;YACtD,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,AAAC;YACrC,sBAAsB,CAAC,SAAS,EAAE,gBAAe,CAAC,CAAC;YACnD,2BAA2B,CAAC,SAAS,EAAE,gBAAe,CAAC,CAAC;SACzD;KACF,CAAC,CAAC;IAEH,eAAe,sBAAsB,CAAC,SAAS,EAAE;QAC/C,IAAI;YACF,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,kBAAa,CAAA,CAAC,SAAS,EAAE,gBAAe,CAAC,AAAC;YACrE,WAAW,CAAC,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACjD,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,AAAC;YAC7C,WAAW,CAAC,SAAS,CAAC,CAAC;SACxB,CAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;SAC7D;KACF;IAED,SAAS,sBAAsB,CAAC,SAAS,EAAE,gBAAe,EAAE;QAC1D,2BAA2B,CAAC,SAAS,EAAE,gBAAe,CAAC,CAAC;KACzD;IAED,SAAS,WAAW,CAAC,SAAS,EAAE;QAC9B,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA,IAAI,GAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,kBAAkB,CAAC,SAAS,EAAE;gBACrD,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,OAAO;aACf,CAAC,CACH,AAAC;QACF,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;QAC3D,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,AAAC;QAC7D,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,AAAC;QAC1D,MAAM,mBAAmB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,AAAC;QAEtE,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,OAAO,EAAE,CAAC;YACvB,YAAY,GAAG,IAAI,CAAC;SACrB;QAED,YAAY,GAAG,IAAI,CAAA,GAAA,oBAAK,CAAA,CAAC,WAAW,EAAE;YACpC,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE;gBACJ,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE;oBACR;wBACE,KAAK,EAAE,WAAW;wBAClB,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,KAAK;wBACX,KAAK,EAAE,MAAM;wBACb,SAAS,EAAE,MAAM;wBACjB,IAAI,EAAE;4BACJ,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,EAAE;4BACR,KAAK,EAAE,QAAQ;4BACf,MAAM,EAAE,GAAG;yBACZ;qBACF;oBACD;wBACE,KAAK,EAAE,sBAAmB;wBAC1B,IAAI,EAAE,YAAY;wBAClB,WAAW,EAAE,sBAAsB;wBACnC,WAAW,EAAE,CAAC;wBACd,IAAI,EAAE,KAAK;qBACZ;oBACD;wBACE,KAAK,EAAE,eAAe;wBACtB,IAAI,EAAE,UAAU;wBAChB,WAAW,EAAE,oBAAoB;wBACjC,WAAW,EAAE,CAAC;wBACd,IAAI,EAAE,KAAK;qBACZ;oBACD;wBACE,KAAK,EAAE,mBAAmB;wBAC1B,IAAI,EAAE,UAAU;wBAChB,WAAW,EAAE,sBAAsB;wBACnC,WAAW,EAAE,CAAC;wBACd,IAAI,EAAE,KAAK;qBACZ;oBACD;wBACE,KAAK,EAAE,4BAA4B;wBACnC,IAAI,EAAE,mBAAmB;wBACzB,WAAW,EAAE,oBAAoB;wBACjC,WAAW,EAAE,CAAC;wBACd,IAAI,EAAE,KAAK;qBACZ;iBACF;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE,IAAI;gBAChB,mBAAmB,EAAE,KAAK;gBAC1B,WAAW,EAAE,GAAG,GAAG,GAAG;gBACtB,WAAW,EAAE;oBACX,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,IAAI;iBACX;gBACD,MAAM,EAAE;oBACN,CAAC,EAAE;wBACD,KAAK,EAAE;4BACL,QAAQ,EAAE,KAAK;4BACf,WAAW,EAAE,CAAC;yBACf;wBACD,OAAO,EAAE,IAAI;wBACb,IAAI,EAAE;4BACJ,OAAO,EAAE,IAAI;4BACb,KAAK,EAAE,0BAA0B;yBAClC;qBACF;oBACD,CAAC,EAAE;wBACD,OAAO,EAAE,IAAI;wBACb,IAAI,EAAE;4BACJ,OAAO,EAAE,IAAI;4BACb,KAAK,EAAE,0BAA0B;yBAClC;wBACD,KAAK,EAAE;4BACL,OAAO,EAAE,IAAI;4BACb,IAAI,EAAE,qBAAqB;4BAC3B,KAAK,EAAE,MAAM;4BACb,SAAS,EAAE,QAAQ;4BACnB,IAAI,EAAE;gCACJ,MAAM,EAAE,MAAM;gCACd,IAAI,EAAE,EAAE;gCACR,KAAK,EAAE,QAAQ;gCACf,MAAM,EAAE,GAAG;gCACX,WAAW,EAAE,GAAG;6BACjB;yBACF;qBACF;iBACF;aACF;SACF,CAAC,CAAC;KACJ;CACF,CAAC,CAAC;;;AC/LH;;AAAA,0CAAsD;AAItD,wBAAA,QAAiC,UAAA;AAFjC,CAAA,GAAA,cAAK,CAAA,CAAC,QAAQ,IAAI,CAAA,GAAA,sBAAa,CAAA,CAAC,CAAC;kBAGlB,CAAA,GAAA,cAAK,CAAA,CAAC;;;A;;A,+C,S,C;A,gD,U,C;A,gD,U,C;A,mD,a,C;A,gD,U,C;A,kD,Y,C;A,mD,a,C;A,sD,gB,C;A,mD,a,C;A,2C,K,C;A,4C,a,C;A,uD,iB,C;A,gD,iB,C;A,iD,W,C;A,wD,kB,C;A,6C,O,C;A,4C,K,C;A,iD,W,C;A,4C,a,C;A,oD,c,C;A,iD,W,C;A,iD,W,C;A,sD,gB,C;A,mD,a,C;A,kD,Y,C;A,yD,mB,C;A,qD,e,C;A,uD,iB,C;A,2C,K,C;A,uD,iB,C;A,8C,e,C;A,2C,C,G,oB,C,C;A,+C,S,C;A,qD,e,C;A,2C,Y,C;A,6C,c,C;A,+C,Q,C;A,qD,e,C;A,8C,Q,C;A,iD,W,C;A,8C,C,G,mB,C,C;A,8C,Q,C;A,6C,O,C;A,6C,O,C;A,mD,a,C;A,8C,Q,C;A,4C,M,C;A;;;;;G,C,8D;A,qC;AEMd,MAAMA,QAAAA;IACXC,aAAc;QACZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAA;QACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAAA,EAAAA,CAAAA;QACnB,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAA;QACrB,IAAI,CAACC,SAAS,GAAGC,SAAAA,CAAAA;KACnB;IAKAC,OAAAA,CAAQC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;QAChC,MAAMC,SAAYH,GAAAA,KAAAA,CAAMI,SAAS,CAACF,IAAK,CAAA,AAAA;QACvC,MAAMG,QAAAA,GAAWL,KAAAA,CAAMM,QAAQ,AAAA;QAE/BH,SAAAA,CAAUI,OAAO,CAACC,CAAAA,EAAAA,GAAMA,EAAG,CAAA;gBACzBT,KAAAA;gBACAU,OAAAA,EAAST,KAAAA,CAAMS,OAAO;gBACtBJ,QAAAA;gBACAK,WAAAA,EAAaC,IAAAA,CAAKC,GAAG,CAACX,IAAOD,GAAAA,KAAAA,CAAMa,KAAK,EAAER,QAAAA,CAAAA;aAC5C,CAAA,CAAA,CAAA;KACF;IAKAS,QAAW,GAAA;QACT,IAAI,IAAI,CAACtB,QAAQ,EACf,OAAA;QAEF,IAAI,CAACG,QAAQ,GAAG,IAAI,CA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,CAAC/P,GAAG,GAAG04D,UAAAA,CAAAA;QAE/B,OAAOA,UAAAA,CAAAA;KACT;IAMAuB,kBAAAA,CAAmBt6D,KAAK,EAAE;QACxB,OAAO,AAACg3C,CAAAA,WAAY,CAAA,IAAI,CAACmlB,MAAM,EAAEn8D,KAAS,CAAA,GAAA,IAAI,CAACo8D,OAAM,CAAA,GAAK,IAAI,CAACC,WAAW,CAAA;KAC5E;IAMA7lD,gBAAAA,CAAiB+iB,KAAK,EAAE;QACtB,MAAM2hC,OAAAA,GAAU,IAAI,CAACxB,QAAQ,AAAA;QAC7B,MAAMlgC,OAAAA,GAAU,IAAI,CAACG,kBAAkB,CAACJ,KAAAA,CAAAA,GAAS2hC,OAAQz/D,CAAAA,MAAM,GAAGy/D,OAAAA,CAAQv6D,GAAG,AAAA;QAC7E,OAAOq2C,WAAY,CAAA,IAAI,CAACmlB,MAAM,EAAE3iC,OAAU,GAAA,IAAI,CAAC6iC,WAAW,GAAG,IAAI,CAACD,OAAO,EAAE,IAAI,CAAA,CAAA;KACjF;CACF;A,I,M,G,a,C,M,C,M,C;I,S,E,I;I,a,E,a;I,W,E,W;I,gB,E,gB;I,iB,E,iB;I,S,E,S;I,e,E,e;C,C,A;AC3JaI,MAAAA,aAAgB,GAAA;IAC3B37B,WAAAA;IACAp0B,QAAAA;IACAiN,OAAAA;IACAvU,MAAAA;C,A;;;A;;A,uC,U,C;A,uC,a,C;A,uC,Y,C;A,uC,c,C;A,uC,iB,C;A,uC,S,C;A,uC,I,C;A,uC,c,C;A,uC,O,C;A,uC,c,C;A,uC,Y,C;A,uC,4B,C;A,uC,S,C;A,uC,e,C;A,uC,U,C;A,uC,e,C;A,uC,E,C;A,uC,Q,C;A,uC,S,C;A,uC,W,C;A,uC,G,C;A,uC,S,C;A,uC,Y,C;A,uC,W,C;A,uC,W,C;A,uC,Q,C;A,uC,U,C;A,uC,Y,C;A,uC,O,C;A,wC,U,C;A,wC,M,C;A,wC,kB,C;A,wC,c,C;A,wC,S,C;A,wC,K,C;A,wC,W,C;A,wC,W,C;A,wC,U,C;A,wC,c,C;A,wC,e,C;A,wC,qB,C;A,wC,M,C;A,wC,oB,C;A,wC,e,C;A,wC,qB,C;A,wC,I,C;A,wC,kB,C;A,wC,O,C;A,wC,W,C;A,wC,Y,C;A,wC,c,C;A,wC,K,C;A,wC,K,C;A,wC,Y,C;A,wC,c,C;A,wC,O,C;A,wC,mB,C;A,wC,a,C;A,wC,K,C;A,wC,O,C;A,wC,S,C;A,wC,W,C;A,wC,S,C;A,wC,Y,C;A,wC,W,C;A,wC,mB,C;A,wC,Q,C;A,wC,Y,C;A,wC,O,C;A,wC,G,C;A,wC,Q,C;A,wC,W,C;A,wC,W,C;A,wC,S,C;A,wC,c,C;A,wC,a,C;A,wC,U,C;A,wC,iB,C;A,wC,0B,C;A,wC,gB,C;A,wC,c,C;A,wC,qB,C;A,wC,oB,C;A,wC,Y,C;A,wC,c,C;A,wC,c,C;A,wC,S,C;A,wC,kB,C;A,wC,M,C;A,wC,a,C;A,wC,a,C;A,wC,e,C;A,wC,a,C;A,uC,O,C;A,wC,Y,C;A,wC,K,C;A,wC,Q,C;A,wC,W,C;A,wC,U,C;A,wC,a,C;A,wC,U,C;A,uC,K,C;A,uC,Q,C;A,uC,O,C;A,uC,gB,C;A,uC,c,C;A,uC,O,C;A,uC,Q,C;A,uC,a,C;A,uC,a,C;A,uC,iB,C;A,uC,Y,C;A,uC,W,C;A,uC,Y,C;A,uC,a,C;A,uC,gC,C;A,uC,gB,C;A,uC,I,C;A,uC,S,C;A,uC,mB,C;A,uC,c,C;A,uC,mB,C;A,uC,Q,C;A,uC,2B,C;A,uC,mB,C;A;;;;;G,C,qC;AEvBF;;G,C;;GAUO,CAAA,SAASqlD,IAAO,GAAA;AACrB,UAAA,EACD;AAED;;GAEC,CACM,MAAMlhB,GAAM,GAAC,AAAA,CAAA,IAAM;IACxB,IAAIlmC,EAAK,GAAA,CAAA,AAAA;IACT,OAAO,IAAMA,EAAAA,EAAAA,CAAAA;CACf,CAAA,EAAA,AAAK;AAEL;;;;GAIC,CACM,SAASqO,aAAczR,CAAAA,KAAc,EAA6B;IACvE,OAAOA,KAAU,KAAA,IAAI,IAAI,OAAOA,KAAU,KAAA,WAAA,CAAA;CAC3C;AAED;;;;GAIC,CACM,SAASf,OAAqBe,CAAAA,KAAc,EAAgB;IACjE,IAAI6C,KAAAA,CAAM5D,OAAO,IAAI4D,KAAM5D,CAAAA,OAAO,CAACe,KAAQ,CAAA,EACzC,OAAO,IAAI,CAAA;IAEb,MAAM/H,IAAAA,GAAOwG,MAAOiiB,CAAAA,SAAS,CAAC+7C,QAAQ,CAAC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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-b5c6e8276267f933.js","src/index.js","src/js/api.js","node_modules/axios/index.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/helpers/null.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/platform/index.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/classes/Blob.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/HttpStatusCode.js","src/js/btn-show-more.js","src/js/search.js","src/js/section-main.js","src/js/pixabay-api.js","src/js/five-days.js","src/js/section-date.js","src/js/more-info.js","src/js/create-markup.js","src/js/today-section.js","src/js/chart.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/dist/chart.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/dist/chunks/helpers.segment.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js","src/js/scroll-moreinfo.js","src/js/open-five-days.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"890e741a975ef6c8\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, importScripts */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else if ('reload' in location) {\n        location.reload();\n      } else {\n        // Web extension context\n        var ext = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n        if (ext && ext.runtime && ext.runtime.reload) {\n          ext.runtime.reload();\n        }\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        if (asset.type === 'js') {\n          if (typeof document !== 'undefined') {\n            let script = document.createElement('script');\n            script.src = asset.url;\n            return new Promise((resolve, reject) => {\n              var _document$head;\n\n              script.onload = () => resolve(script);\n\n              script.onerror = reject;\n              (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n            });\n          } else if (typeof importScripts === 'function') {\n            return new Promise((resolve, reject) => {\n              try {\n                importScripts(asset.url);\n              } catch (err) {\n                reject(err);\n              }\n            });\n          }\n        }\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import './js/api';\nimport './js/btn-show-more';\nimport './js/open-five-days';\nimport './js/search';\nimport './js/today-section';\nimport './js/section-main';\nimport './js/five-days';\nimport './js/chart';\nimport './js/more-info';\nimport './js/scroll-moreinfo';\n","import axios from 'axios';\nconst ENDPOINT = 'https://api.openweathermap.org';\nconst API_KEY = 'd52884a2e04f7a405073b1f70d08c546';\nexport async function fetchForecast(query, temperatureUnit) {\n  const queryString = `${ENDPOINT}/data/2.5/forecast?q=${query}&appid=${API_KEY}&units=${temperatureUnit}`;\n  const response = await axios.get(queryString);\n  return response.data;\n}\n\nexport async function fetchForecastByGeolocation(geolocation, temperatureUnit) {\n  const queryString = `${ENDPOINT}/data/2.5/forecast?lat=${geolocation.latitude}&lon=${geolocation.longitude}&appid=${API_KEY}&units=${temperatureUnit}`;\n  const response = await axios.get(queryString);\n  return response.data;\n}\n\nexport async function fetchCurrentWeather(query, temperatureUnit) {\n  const queryString = `${ENDPOINT}/data/2.5/weather?q=${query}&appid=${API_KEY}&units=${temperatureUnit}`;\n  const response = await axios.get(queryString);\n  return response.data;\n}\n\nexport async function fetchCurrentWeatherByGeolocation(\n  geolocation,\n  temperatureUnit\n) {\n  const queryString = `${ENDPOINT}/data/2.5/weather?lat=${geolocation.latitude}&lon=${geolocation.longitude}&appid=${API_KEY}&units=${temperatureUnit}`;\n  const response = await axios.get(queryString);\n  return response.data;\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n}\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","import platform from './node/index.js';\n\nexport {platform as default}\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","export const VERSION = \"1.4.0\";","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","const btnShowMoreRight = document.querySelector('.show-more__right');\nconst btnShowMoreLeft = document.querySelector('.show-more__left');\nconst initialItems = document.querySelectorAll('.show-initial');\nconst hiddenItems = document.querySelectorAll('.hide-initial');\nconst moreInfo = document.querySelector('.more-info');\nbtnShowMoreLeft.addEventListener('click', () => {\n  initialItems.forEach(item => {\n    item.classList.add('hide-on-click');\n    item.classList.remove('show-initial');\n  });\n  hiddenItems.forEach(item => {\n    item.classList.remove('hide-on-click');\n    item.classList.add('show-initial');\n  });\n});\n\nbtnShowMoreRight.addEventListener('click', () => {\n  initialItems.forEach(item => {\n    item.classList.remove('hide-on-click');\n    item.classList.add('show-initial');\n  });\n  hiddenItems.forEach(item => {\n    item.classList.add('hide-on-click');\n    item.classList.remove('show-initial');\n  });\n  if (window.matchMedia('(min-width: 768px) and (max-width: 1027px)').matches) {\n    moreInfo.scrollLeft += 100;\n  }\n});\n","import { updateCityImage } from './section-main';\nimport { fetchAndUpdateForecast } from './five-days';\nimport { updateCurrentWeather } from './today-section';\nimport { updateCurrentDate } from './section-date';\nimport { updateSelectedCity } from './more-info';\n\nconst form = document.querySelector('.js-form');\nconst input = document.getElementsByName('query')[0];\nconst favoritesList = document.querySelector('.js-slider-list');\nconst addButton = document.querySelector('#js-btnAdd');\nconst prevButton = document.querySelector('.prev');\nconst nextButton = document.querySelector('.next');\n\nhandleSelectedFavorite('Paris');\nlet shownFavorites = [];\ngetInitialShownFavorites();\nsetFavoritesList();\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n  const city = input.value;\n  handleSelectedFavorite(city);\n});\n\naddButton.addEventListener('click', () => {\n  const value = input.value;\n  addValueToLocalStorage(value);\n  if (shownFavorites.length < 4) {\n    shownFavorites.push(value);\n  }\n  setFavoritesList();\n});\n\nprevButton.addEventListener('click', () => {\n  const favorites = JSON.parse(localStorage.getItem('cities'));\n  const firstShown = shownFavorites[0];\n  const indexOfFirstShown = favorites.indexOf(firstShown);\n  if (indexOfFirstShown > 0) {\n    shownFavorites = shownFavorites.filter(\n      favorite => favorite !== shownFavorites[3]\n    );\n    shownFavorites.unshift(favorites[indexOfFirstShown - 1]);\n  }\n  setFavoritesList();\n});\n\nnextButton.addEventListener('click', () => {\n  const favorites = JSON.parse(localStorage.getItem('cities'));\n  const lastShown = shownFavorites[shownFavorites.length - 1];\n  const indexOfLastShown = favorites.indexOf(lastShown);\n  if (indexOfLastShown < favorites.length - 1) {\n    shownFavorites = shownFavorites.filter(\n      favorite => favorite !== shownFavorites[0]\n    );\n    shownFavorites.push(favorites[indexOfLastShown + 1]);\n  }\n  setFavoritesList();\n});\n\nfunction setNavigationVisibility() {\n  const favorites = JSON.parse(localStorage.getItem('cities'));\n  if (favorites == null || favorites.length <= 4) {\n    prevButton.style.visibility = 'hidden';\n    nextButton.style.visibility = 'hidden';\n  } else {\n    prevButton.style.visibility = 'visible';\n    nextButton.style.visibility = 'visible';\n  }\n}\n\nfunction getInitialShownFavorites() {\n  const favorites = JSON.parse(localStorage.getItem('cities'));\n\n  if (favorites == null) {\n    return;\n  }\n\n  if (favorites.length < 4) {\n    for (let index = 0; index < favorites.length; index++) {\n      shownFavorites.push(favorites[index]);\n    }\n  } else {\n    for (let index = 0; index < 4; index++) {\n      shownFavorites.push(favorites[index]);\n    }\n  }\n}\n\nfunction setFavoritesList() {\n  favoritesList.innerHTML = '';\n  for (let index = 0; index < shownFavorites.length; index++) {\n    const favorite = shownFavorites[index];\n\n    const li = document.createElement('li');\n    li.classList.add('favorites-list');\n    const city = document.createElement('button');\n    city.value = favorite;\n    city.innerHTML = favorite;\n    city.addEventListener('click', handleSelectFavorite);\n    city.classList.add('favorite-button');\n    const button = document.createElement('button');\n    button.value = favorite;\n    button.addEventListener('click', handleDeleteEvent);\n    button.classList.add('close-button');\n\n    li.appendChild(city);\n    li.appendChild(button);\n\n    favoritesList.appendChild(li);\n  }\n\n  setNavigationVisibility();\n}\n\nexport async function handleSelectedFavorite(city) {\n  await updateCityImage(city);\n  updateCurrentWeather(city);\n  updateCurrentDate(city);\n  updateSelectedCity(city);\n}\n\nfunction handleSelectFavorite(event) {\n  const value = event.target.value;\n  handleSelectedFavorite(value);\n  fetchAndUpdateForecast(value);\n}\n\nfunction handleDeleteEvent(event) {\n  const value = event.target.value;\n  let cities = JSON.parse(localStorage.getItem('cities'));\n  deleteValueFromShownFavorites(cities, value);\n  deleteValueFromLocalStorage(cities, value);\n  setFavoritesList();\n}\n\nfunction deleteValueFromLocalStorage(cities, value) {\n  cities = cities.filter(city => city !== value);\n  localStorage.setItem('cities', JSON.stringify(cities));\n}\n\nfunction deleteValueFromShownFavorites(favorites, value) {\n  if (favorites.length <= 4) {\n    shownFavorites = shownFavorites.filter(f => f !== value);\n    return;\n  }\n\n  const lastShown = shownFavorites[shownFavorites.length - 1];\n  const indexOfLastShown = favorites.indexOf(lastShown);\n  if (indexOfLastShown < favorites.length - 1) {\n    shownFavorites = shownFavorites.filter(f => f !== value);\n    shownFavorites.push(favorites[indexOfLastShown + 1]);\n  } else {\n    shownFavorites = shownFavorites.filter(f => f !== value);\n  }\n}\n\nfunction addValueToLocalStorage(value) {\n  if (value === '') {\n    return;\n  }\n  const cities = localStorage.getItem('cities');\n\n  if (cities === null) {\n    localStorage.setItem('cities', JSON.stringify([value]));\n  } else {\n    let citiesArray = JSON.parse(cities).map(city => city.toLowerCase());\n    if (!citiesArray.includes(value.toLowerCase())) {\n      citiesArray.push(value);\n      localStorage.setItem('cities', JSON.stringify(citiesArray));\n    }\n  }\n}\n","import { getCityImage } from './pixabay-api';\n\nexport async function updateCityImage(city) {\n  const imageUrl = await getCityImage(city);\n  const containerBackground = document.querySelector('.container__background');\n\n  containerBackground.style.backgroundImage = `url(${imageUrl})`;\n}\n","import axios from 'axios';\n\nconst ENDPOINT = 'https://pixabay.com/api';\nconst apiKey = '38549496-ce3c530a47f46968bba1c58ed';\n\nexport async function getCityImage(city) {\n  const requestParams = `/?image_type=photo&orientation=horizontal&q=${city}&key=${apiKey}`;\n  const response = await axios.get(`${ENDPOINT}${requestParams}`);\n  return response.data.hits[0].largeImageURL;\n}\n","import {\n  fetchForecast,\n  fetchForecastByGeolocation,\n  fetchCurrentWeather,\n} from './api';\nimport { handleSelectedFavorite } from './search';\nconst temperatureUnit = 'metric';\nconst input = document.querySelector('.js-form input[name=\"query\"]');\nconst form = document.querySelector('.js-form');\nconst city = document.querySelector('.city__name');\nconst fiveDaysSection = document.querySelector('.five-days');\nconst quote = document.querySelector('.quote');\nconst btnShowChart = document.querySelector('.show-chart');\nconst showRight = document.querySelector('.show-more__right');\nconst buttonList = document.querySelector('.button-list');\nconst chart = document.querySelector('.chart');\nform.addEventListener('submit', fetchForecast5Day);\n\nasync function fetchForecast5Day(e) {\n  e.preventDefault();\n  fiveDaysSection.classList.add('is-hidden');\n  city.classList.add('is-hidden');\n  quote.classList.remove('is-hidden');\n  btnShowChart.classList.add('is-hidden');\n  if (window.matchMedia('(min-width: 768px)').matches) {\n    showRight.classList.add('is-hidden');\n  }\n\n  buttonList.classList.remove('style-fivedays');\n  chart.classList.add('is-hidden');\n  try {\n    const forecastData = await fetchForecast(input.value, temperatureUnit);\n    city.textContent = forecastData.city.name;\n    const dailyData = getDailyData(forecastData);\n    updateForecast(dailyData);\n  } catch (error) {\n    console.error('Error while fetching weather data: ', error);\n  }\n}\nfunction getDailyData(forecastData) {\n  const groupedByDate = forecastData.list.reduce((groups, item) => {\n    const date = new Date(item.dt * 1000);\n    const dateKey = `${date.getFullYear()}-${\n      date.getMonth() + 1\n    }-${date.getDate()}`;\n\n    if (!groups[dateKey]) {\n      groups[dateKey] = [];\n    }\n\n    groups[dateKey].push(item);\n\n    return groups;\n  }, {});\n\n  return Object.values(groupedByDate);\n}\nfunction updateForecast(dailyData) {\n  for (let i = 0; i < 5; i++) {\n    const forecastItem = dailyData[i][0];\n    const dateItem = new Date(forecastItem.dt * 1000);\n\n    const item = document.querySelector(`.five-days__item:nth-child(${i + 1})`);\n    const day = item.querySelector('.five-days__day');\n    const date = item.querySelector('.five-days__date');\n    const tempMin = item.querySelector('.temperature-min__value');\n    const tempMax = item.querySelector('.temperature-max__value');\n    const iconDiv = item.querySelector('.five-days__icon');\n\n    day.textContent = dateItem.toLocaleString('default', { weekday: 'long' });\n    date.textContent = dateItem.toLocaleString('default', {\n      day: '2-digit',\n      month: 'short',\n    });\n    const temperatures = dailyData[i].map(data => data.main.temp);\n    tempMin.textContent = Math.round(Math.min(...temperatures));\n    tempMax.textContent = Math.round(Math.max(...temperatures));\n\n    const iconUrl = `http://openweathermap.org/img/w/${forecastItem.weather[0].icon}.png`;\n    const img = document.createElement('img');\n    img.src = iconUrl;\n    img.alt = 'Weather icon';\n    iconDiv.innerHTML = '';\n    iconDiv.appendChild(img);\n  }\n}\n\nexport async function fetchAndUpdateForecast(cityName) {\n  try {\n    const forecastData = await fetchForecast(cityName, temperatureUnit);\n    city.textContent = forecastData.city.name;\n    const dailyData = getDailyData(forecastData);\n    updateForecast(dailyData);\n  } catch (error) {\n    console.error('Error while fetching weather data: ', error);\n  }\n}\n\nasync function handleFavoriteSelection(event) {\n  const value = event.target.value;\n  handleSelectedFavorite(value);\n  await fetchAndUpdateForecast(value);\n}\ncity.addEventListener('click', handleFavoriteSelection);\n\nfetchAndUpdateForecast('Paris');\n","import { fetchCurrentWeather } from './api.js';\nconst dayli = document.querySelector('.dayli-container');\nfunction updateCurrentDateData(data) {\n  var now = new Date();\n  var utc_now = new Date(\n    now.getUTCFullYear(),\n    now.getUTCMonth(),\n    now.getUTCDate(),\n    now.getUTCHours(),\n    now.getUTCMinutes(),\n    now.getUTCSeconds(),\n    now.getUTCMilliseconds()\n  );\n  const localTimeInMilliseconds = utc_now.getTime() + data.timezone * 1000;\n  const currentDate = new Date(localTimeInMilliseconds);\n  updateDayNumber(currentDate);\n  updateDayName(currentDate);\n  updateCurrentMonth(currentDate);\n  updateCurrentTime(currentDate);\n  updateSunriseTime(data.sys.sunrise);\n  updateSunsetTime(data.sys.sunset);\n}\n\nfunction updateSunriseTime(sunriseTime) {\n  const timeAsString = getTimeAsString(sunriseTime);\n  const dateSunriseParagraph = document.querySelector('.date__sunrise');\n  dateSunriseParagraph.innerHTML = timeAsString;\n}\n\nfunction updateSunsetTime(sunsetTime) {\n  const timeAsString = getTimeAsString(sunsetTime);\n  const dateSunsetParagraph = document.querySelector('.date__sunset');\n\n  dateSunsetParagraph.innerHTML = timeAsString;\n}\n\nfunction getTimeAsString(time) {\n  const date = new Date(time * 1000);\n  const hours = date.getHours();\n  const hoursString = hours >= 10 ? hours.toString() : '0' + hours.toString();\n  const minutes = date.getMinutes();\n  const minutesString =\n    minutes >= 10 ? minutes.toString() : '0' + minutes.toString();\n  const timeAsString = hoursString + ':' + minutesString;\n\n  return timeAsString;\n}\n\nfunction updateCurrentTime(currentDate) {\n  var currentTime =\n    currentDate.getHours() +\n    ':' +\n    currentDate.getMinutes() +\n    ':' +\n    currentDate.getSeconds();\n\n  const currentTimeParagraph = document.querySelector('.date__hours');\n  currentTimeParagraph.innerHTML = currentTime;\n}\n\nfunction updateCurrentMonth(currentDate) {\n  const month = currentDate.toLocaleString('default', { month: 'long' });\n  const dateMonthParagraph = document.querySelector('.date__month');\n  dateMonthParagraph.innerHTML = month;\n}\n\nfunction updateDayName(currentDate) {\n  const weekday = currentDate.toLocaleString('default', { weekday: 'short' });\n  const dateDayWeekParagraph = document.querySelector('.date__day-week');\n  dateDayWeekParagraph.innerHTML = weekday;\n}\n\nfunction updateDayNumber(currentDate) {\n  const currentDayNumber = currentDate.getDate();\n  const currentDayNumberParagraph = document.querySelector('.date__day-now');\n  const dayNumberOrder = getDayNumberOrder(currentDayNumber);\n\n  currentDayNumberParagraph.innerHTML = `${currentDayNumber}<sup>${dayNumberOrder}</sup>`;\n}\n\nfunction getDayNumberOrder(dayNumber) {\n  if (dayNumber == 1) {\n    return 'st';\n  } else if (dayNumber == 2) {\n    return 'nd';\n  } else if (dayNumber == 3) {\n    return 'rd';\n  } else {\n    return 'th';\n  }\n}\n\nexport function updateCurrentDate(city) {\n  const temperatureUnit = 'metric';\n  dayli.classList.remove('is-hidden');\n  fetchCurrentWeather(city, temperatureUnit)\n    .then(weatherData => {\n      updateCurrentDateData(weatherData);\n    })\n    .catch(error => {\n      console.error('Error fetching weather data:', error);\n    });\n}\n","import { createMarkup } from './create-markup';\nimport { fetchForecast } from './api';\nimport { getDate } from './five-days';\nconst buttons = document.querySelectorAll('.five-days__button');\nconst input = document.querySelector('.js-form input[name=\"query\"]');\nconst temperatureUnit = 'metric';\nconst moreInfoElement = document.querySelector('.more-info');\nlet fiveDayData = {};\nlet moreInfoData = {};\nlet selectedCity = '';\nlet markup = [\n  {\n    time: '00:00',\n    weatherIconName: 'cloudy',\n    temperature: '-5',\n    pressure: '1000',\n    humidity: '85',\n    wint: '10',\n  },\n  {\n    time: '03:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n  {\n    time: '06:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n  {\n    time: '09:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n  {\n    time: '12:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n  {\n    time: '15:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n  {\n    time: '18:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n  {\n    time: '21:00',\n    weatherIconName: 'sunny',\n    temperature: '0',\n    pressure: '1012',\n    humidity: '80',\n    wint: '5',\n  },\n];\ncreateMarkup(markup);\n\nfunction getThreeHourlyData(forecastData, day) {\n  const startIndex = (day - 1) * 8;\n  const endIndex = startIndex + 8;\n\n  const data = forecastData.list.slice(startIndex, endIndex).map(item => {\n    const dateItem = new Date(item.dt * 1000);\n    const weatherIconName = item.weather[0].icon;\n    const pressureInHpa = item.main.pressure;\n    const pressureInMmHg = pressureInHpa * 0.75006;\n    return {\n      time: dateItem.getHours() + ':00',\n      weatherIconName: weatherIconName,\n      temperature: Math.round(item.main.temp),\n      pressure: Math.round(pressureInMmHg),\n      humidity: item.main.humidity,\n      wint: item.wind.speed,\n    };\n  });\n\n  return data;\n}\nfunction updateSelectedCity(city) {\n  selectedCity = city;\n  moreInfoElement.innerHTML = '';\n}\n\nconst moreInfo = async event => {\n  event.preventDefault();\n  const day = parseInt(event.target.getAttribute('data-day'));\n  if (!selectedCity) {\n    console.error('City name is not defined or is empty');\n    return;\n  }\n  try {\n    fiveDayData = await fetchForecast(selectedCity, temperatureUnit);\n    if (fiveDayData) {\n      moreInfoData = getThreeHourlyData(fiveDayData, day);\n      const dayData = moreInfoData;\n      const markup = createMarkup(dayData);\n      moreInfoElement.innerHTML = markup;\n    }\n  } catch (error) {\n    console.error('Error while fetching weather data: ', error);\n  }\n};\n\nbuttons.forEach(button => {\n  button.addEventListener('click', moreInfo);\n});\nexport { updateSelectedCity };\nbuttons.forEach(button => {\n  button.addEventListener('click', moreInfo);\n});\n","export function createMarkup(markup) {\n  const infoArr = markup.map(\n    ({ time, weatherIconName, temperature, pressure, humidity, wint }) => {\n      const weatherIconUrl = `http://openweathermap.org/img/wn/${weatherIconName}.png`;\n      return `\n      <li class=\"more-info__item\">\n        <h3 class=\"more-info__title\">${time}</h3>\n        <p class=\"more-info__temp\">\n          <img src=\"${weatherIconUrl}\" alt=\"Weather icon\" class=\"more-info__icon\">\n          <span>${temperature}°C</span>\n        </p>\n        <ul class=\"forecast-info__details-item forecast-info__details-item--barometer unstyled-list\">\n          <li class=\"data__pressure\">\n            <span>${pressure} mm</span>\n          </li>\n          <li class=\"forecast-info__details-item forecast-info__details-item--humidity unstyled-list\">\n            <span>${humidity}%</span>\n          </li>\n          <li class=\"forecast-info__details-item forecast-info__details-item--wind unstyled-list\">\n            <span>${wint} m/s</span>\n          </li>\n        </ul>\n      </li>`;\n    }\n  );\n\n  return `<ul class=\"more-info__list\">${infoArr.join('')}</ul>`;\n}\n","import { fetchCurrentWeather } from './api.js';\n\nconst city = '';\nconst temperatureElement = document.querySelector('.today-weather__current');\nconst minTemperatureElement = document.querySelector(\n  '.today-minmax__mindegree'\n);\nconst maxTemperatureElement = document.querySelector(\n  '.today-minmax__maxdegree'\n);\nconst weatherIconElement = document.querySelector('.current-wheather-icon');\nconst cityElement = document.querySelector('.current-wheather-city');\nconst fiveDaysSection = document.querySelector('.five-days');\nconst todaySection = document.querySelector('.allday-wheather');\nconst buttonList = document.querySelector('.button-list');\nconst btnShowChart = document.querySelector('.show-chart');\nconst quote = document.querySelector('.quote');\nconst cityStyle = document.querySelector('.city');\nconst chartSection = document.querySelector('.chart');\n\nfunction roundToInteger(number) {\n  return parseInt(number, 10);\n}\nfunction updateWeatherData(data) {\n  const currentTemperature = roundToInteger(data.main.temp);\n  const minTemperature = roundToInteger(data.main.temp_min);\n  const maxTemperature = roundToInteger(data.main.temp_max);\n  const weatherIcon = data.weather[0].icon;\n  const cityName = data.name;\n\n  temperatureElement.textContent = `${currentTemperature}°`;\n  minTemperatureElement.textContent = `${minTemperature}°`;\n  maxTemperatureElement.textContent = `${maxTemperature}°`;\n\n  if (weatherIconElement) {\n    const iconUrl = `https://openweathermap.org/img/w/${weatherIcon}.png`;\n\n    const img = document.createElement('img');\n    img.src = iconUrl;\n    img.alt = 'Weather icon';\n    weatherIconElement.innerHTML = '';\n    weatherIconElement.appendChild(img);\n  }\n  if (cityElement) {\n    cityElement.textContent = cityName;\n  }\n}\n\nfunction fetchWeatherData(city, temperatureUnit) {\n  return fetchCurrentWeather(city, temperatureUnit);\n}\n\nexport function updateCurrentWeather(city) {\n  const temperatureUnit = 'metric';\n  fiveDaysSection.classList.add('is-hidden');\n  todaySection.classList.remove('is-hidden');\n  buttonList.classList.remove('style-fivedays');\n  btnShowChart.classList.add('is-hidden');\n  quote.classList.remove('is-hidden');\n  cityStyle.classList.add('is-hidden');\n  chartSection.classList.add('is-hidden');\n\n  fetchWeatherData(city, temperatureUnit)\n    .then(weatherData => {\n      updateWeatherData(weatherData);\n    })\n    .catch(error => {\n      console.error('Error fetching weather data:', error);\n      temperatureElement.textContent = 'Error fetching weather data';\n    });\n}\n","import Chart from 'chart.js/auto';\nimport { fetchForecast } from './api';\n\nconst favoritesList = document.querySelector('.js-slider-list');\nlet temperatureUnit = 'metric';\nconst btnShowChart = document.querySelector('.show-chart');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const chartSection = document.querySelector('.chart');\n  const hideChartButton = document.querySelector('.hide-chart-button__btn');\n  const chartCanvas = document.getElementById('weatherChart');\n  let weatherChart = null;\n\n  hideChartButton.addEventListener('click', () => {\n    chartSection.classList.add('is-hidden');\n    btnShowChart.classList.remove('is-hidden');\n  });\n\n  const temperatureUnit = 'metric';\n  const input = document.querySelector('.js-form input[name=\"query\"]');\n  const form = document.querySelector('.js-form');\n  const cityElement = document.querySelector('.city__name');\n  form.addEventListener('submit', fetchAndRenderChart);\n\n  async function fetchAndRenderChart(e) {\n    e.preventDefault();\n    try {\n      const cityValue = input.value;\n      const forecastData = await fetchForecast(cityValue, temperatureUnit);\n      cityElement.textContent = forecastData.city.name;\n      const dailyData = getDailyData(forecastData);\n      renderChart(dailyData);\n    } catch (error) {\n      console.error('Error while fetching weather data: ', error);\n    }\n  }\n\n  function getDailyData(forecastData) {\n    return forecastData.list.filter(\n      (item, index, self) =>\n        index ===\n        self.findIndex(\n          t =>\n            new Date(t.dt * 1000).getDay() === new Date(item.dt * 1000).getDay()\n        )\n    );\n  }\n\n  async function fetchAndRenderFavoriteChart(cityValue) {\n    try {\n      const forecastData = await fetchForecast(cityValue, temperatureUnit);\n      cityElement.textContent = forecastData.city.name;\n      const dailyData = getDailyData(forecastData);\n      renderChart(dailyData);\n    } catch (error) {\n      console.error('Error while fetching weather data: ', error);\n    }\n  }\n\n  favoritesList.addEventListener('click', event => {\n    if (event.target.classList.contains('favorite-button')) {\n      const cityValue = event.target.value;\n      handleSelectedFavorite(cityValue, temperatureUnit);\n      fetchAndRenderFavoriteChart(cityValue, temperatureUnit);\n    }\n  });\n\n  async function handleSelectedFavorite(cityValue) {\n    try {\n      const forecastData = await fetchForecast(cityValue, temperatureUnit);\n      cityElement.textContent = forecastData.city.name;\n      const dailyData = getDailyData(forecastData);\n      renderChart(dailyData);\n    } catch (error) {\n      console.error('Error while fetching weather data: ', error);\n    }\n  }\n\n  function handleSelectedFavorite(cityValue, temperatureUnit) {\n    fetchAndRenderFavoriteChart(cityValue, temperatureUnit);\n  }\n\n  function renderChart(dailyData) {\n    const labels = dailyData.map(item =>\n      new Date(item.dt * 1000).toLocaleDateString('default', {\n        day: 'numeric',\n        month: 'short',\n      })\n    );\n    const temperatures = dailyData.map(item => item.main.temp);\n    const humidities = dailyData.map(item => item.main.humidity);\n    const windSpeeds = dailyData.map(item => item.wind.speed);\n    const atmospherePressures = dailyData.map(item => item.main.pressure);\n\n    if (weatherChart) {\n      weatherChart.destroy();\n      weatherChart = null;\n    }\n\n    weatherChart = new Chart(chartCanvas, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'AVERAGE: ',\n            data: '',\n            fill: false,\n            color: 'gray',\n            textAlign: 'left',\n            font: {\n              family: 'Lato',\n              size: 14,\n              style: 'normal',\n              weight: 400,\n            },\n          },\n          {\n            label: '- Temperature, C°',\n            data: temperatures,\n            borderColor: 'rgba(255, 107, 9, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: '- Humidity, %',\n            data: humidities,\n            borderColor: 'rgba(9, 6, 235, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: '- Wind Speed, m/s',\n            data: windSpeeds,\n            borderColor: 'rgba(234, 154, 5, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: '- Atmosphere Pressure, m/m',\n            data: atmospherePressures,\n            borderColor: 'rgba(6, 120, 6, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        aspectRatio: 580 / 345,\n        interaction: {\n          mode: 'nearest',\n          axis: 'xy',\n        },\n        scales: {\n          x: {\n            ticks: {\n              autoSkip: false,\n              minRotation: 0,\n            },\n            display: true,\n            grid: {\n              display: true,\n              color: 'rgba(118, 119, 121, 0.5)',\n            },\n          },\n          y: {\n            display: true,\n            grid: {\n              display: true,\n              color: 'rgba(118, 119, 121, 0.5)',\n            },\n            title: {\n              display: true,\n              text: 'Value of Indicators',\n              color: 'gray',\n              textAlign: 'center',\n              font: {\n                family: 'Lato',\n                size: 14,\n                style: 'normal',\n                weight: 400,\n                fillOpacity: 0.3,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n});\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n",null,"import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points.slice(Math.max(this._drawStart - 1, 0), this._drawStart + this._drawCount);\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n",null,"/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","const btnMoreInfo = document.querySelector('.five-days__info');\nconst btnShowRight = document.querySelector('.show-more__right');\nlet moreInfoClicked = false;\nwindow.addEventListener('resize', checkButtonVisibility);\nbtnMoreInfo.addEventListener('click', () => {\n  moreInfoClicked = true;\n  checkButtonVisibility();\n});\nfunction checkButtonVisibility() {\n  if (window.innerWidth < 768) {\n    btnShowRight.classList.remove('is-hidden');\n  } else if (window.innerWidth >= 768 && moreInfoClicked) {\n    btnShowRight.classList.remove('is-hidden');\n  } else {\n    btnShowRight.classList.add('is-hidden');\n  }\n}\n\ncheckButtonVisibility();\n","const openBtn5Days = document.getElementById('5days-btn');\nlet hiddenItems = document.querySelectorAll('.is-hidden');\nconst todayBtn = document.getElementById('today-btn');\nlet fiveDaysSection = document.querySelector('.five-days');\nlet todaySection = document.querySelector('.allday-wheather');\nconst city = document.querySelector('.city');\nconst quote = document.querySelector('.quote');\nconst dateSection = document.querySelector('.dayli-container');\nconst chart = document.querySelector('.chart');\nconst showChartBtn = document.querySelector('.show-chart');\nconst buttonList = document.querySelector('.button-list');\nconst cityName = document.querySelector('.city__name');\n\nopenBtn5Days.addEventListener('click', open5Days);\nfunction open5Days() {\n  hiddenItems.forEach(function (item) {\n    item.classList.remove('is-hidden');\n  });\n  fiveDaysSection.classList.remove('is-hidden');\n  city.classList.remove('is-hidden');\n  cityName.classList.remove('is-hidden');\n\n  if (fiveDaysSection.classList.contains('is-hidden')) {\n    todaySection.classList.remove('is-hidden');\n    dateSection.classList.remove('is-hidden');\n    quote.classList.remove('is-hidden');\n  } else {\n    todaySection.classList.add('is-hidden');\n  }\n\n  quote.classList.add('is-hidden');\n  dateSection.classList.add('is-hidden');\n  chart.classList.add('is-hidden');\n  showChartBtn.classList.remove('is-hidden');\n  if (window.matchMedia('(min-width: 1280px)').matches) {\n    buttonList.classList.add('style-fivedays');\n  }\n}\n\ntodayBtn.addEventListener('click', showToday);\nfunction showToday() {\n  fiveDaysSection.classList.add('is-hidden');\n  todaySection.classList.remove('is-hidden');\n  city.classList.add('is-hidden');\n  quote.classList.remove('is-hidden');\n  dateSection.classList.remove('is-hidden');\n  showChartBtn.classList.add('is-hidden');\n  buttonList.classList.remove('style-fivedays');\n  chart.classList.add('is-hidden');\n  cityName.classList.add('is-hidden');\n}\nshowChartBtn.addEventListener('click', () => {\n  chart.classList.remove('is-hidden');\n  showChartBtn.classList.add('is-hidden');\n});\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","slice","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","niceFraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","check","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","JSON","stringify","Intl","NumberFormat","num","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","applyScaleDefaults","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveWithContext","_allKeys","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","splineCurveMonotone","slopeDelta","capControlPoint","inArea","inAreaPrev","inAreaNext","controlPoints","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","borderBox","paddings","borders","getContainerSize","clientHeight","containerStyle","containerBorder","containerPadding","round1","bbWidth","bbHeight","containerSize","maintainHeight","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","startBound","endBound","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","sub","findStartAndEnd","solidSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","replacer"],"version":3,"file":"index.975ef6c8.js.map","sourceRoot":"/__parcel_source_root/"}